{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\n\n// 处理头像路径，确保使用正确的服务器地址\n\nexport default {\n  __name: 'CourseFeedback',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const getFullAvatarUrl = path => {\n      if (!path) return '';\n      // 如果已经是完整URL，则直接返回\n      if (path.startsWith('http')) {\n        return path;\n      }\n      // 否则拼接后端地址\n      return `http://localhost:8080${path}`;\n    };\n\n    // 当前用户ID\n    const currentUserId = ref(0);\n\n    // 是否为管理员\n    const isAdmin = ref(false);\n\n    // 课程列表\n    const courseList = ref([]);\n\n    // 反馈列表\n    const feedbackList = ref([]);\n\n    // 加载状态\n    const loading = ref(false);\n\n    // 总数据条数\n    const total = ref(0);\n\n    // 回复内容映射（key: 父反馈ID, value: 回复内容）\n    const replyContents = reactive({});\n\n    // 查询参数\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      courseId: undefined\n    });\n\n    // 获取当前用户信息\n    const getCurrentUser = () => {\n      try {\n        const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        currentUserId.value = userInfo.id;\n        isAdmin.value = userInfo.role === 2;\n        console.log('当前用户ID:', currentUserId.value, '角色:', userInfo.role);\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n      }\n    };\n\n    // 获取用户显示名称\n    const getUserDisplayName = item => {\n      // 调试\n      if (item.id && !item.userName) {\n        console.warn(`ID为${item.id}的${item.parentId ? '回复' : '反馈'}没有用户名`, item);\n      }\n      return item.userName || '匿名用户';\n    };\n\n    // 格式化日期时间\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return dateTimeStr;\n      }\n    };\n\n    // 判断是否可以删除反馈或回复\n    const canDelete = item => {\n      return item.userId === currentUserId.value || isAdmin.value;\n    };\n\n    // 删除反馈或回复\n    const deleteFeedback = async id => {\n      try {\n        await ElMessageBox.confirm('确定要删除这条内容吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await axios.delete(`/api/feedback/${id}`);\n        if (response.data.code === 200) {\n          ElMessage.success('删除成功');\n          fetchFeedbackList(); // 刷新列表\n        } else {\n          ElMessage.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除失败:', error);\n          ElMessage.error('删除失败');\n        }\n      }\n    };\n\n    // 获取课程列表\n    const fetchCourseList = async () => {\n      try {\n        const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        const teacherId = userInfo.id;\n        const response = await axios.get(`/api/course/teacher/${teacherId}`);\n        courseList.value = response.data.data || [];\n\n        // 如果有课程，默认选择第一个\n        if (courseList.value.length > 0 && !queryParams.courseId) {\n          queryParams.courseId = courseList.value[0].id;\n          await fetchFeedbackList();\n        }\n      } catch (error) {\n        console.error('获取课程列表失败:', error);\n        ElMessage.error('获取课程列表失败');\n      }\n    };\n\n    // 获取反馈列表\n    const fetchFeedbackList = async () => {\n      if (!queryParams.courseId) {\n        feedbackList.value = [];\n        total.value = 0;\n        return;\n      }\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/feedback/list', {\n          params: queryParams\n        });\n        console.log('反馈列表原始数据:', response.data.data);\n        feedbackList.value = response.data.data.records || [];\n        console.log('反馈列表处理后数据:', feedbackList.value);\n        total.value = response.data.data.total || 0;\n      } catch (error) {\n        console.error('获取反馈列表失败:', error);\n        ElMessage.error('获取反馈列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 重置查询条件\n    const resetQuery = () => {\n      queryParams.courseId = undefined;\n      feedbackList.value = [];\n      total.value = 0;\n    };\n\n    // 处理课程变化\n    const handleCourseChange = () => {\n      fetchFeedbackList();\n    };\n\n    // 处理页码变化\n    const handleCurrentChange = val => {\n      queryParams.pageNum = val;\n      fetchFeedbackList();\n    };\n\n    // 处理每页条数变化\n    const handleSizeChange = val => {\n      queryParams.pageSize = val;\n      fetchFeedbackList();\n    };\n\n    // 提交回复\n    const submitReply = async parentId => {\n      const content = replyContents[parentId];\n      if (!content || content.trim() === '') {\n        ElMessage.warning('请输入回复内容');\n        return;\n      }\n      try {\n        const response = await axios.post('/api/feedback/reply', {\n          content,\n          courseId: queryParams.courseId,\n          parentId\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('回复提交成功');\n          replyContents[parentId] = '';\n          fetchFeedbackList();\n        } else {\n          ElMessage.error(response.data.message || '回复提交失败');\n        }\n      } catch (error) {\n        console.error('提交回复失败:', error);\n        ElMessage.error('提交回复失败');\n      }\n    };\n\n    // 反馈表单\n    const feedbackFormRef = ref(null);\n    const feedbackForm = reactive({\n      content: ''\n    });\n\n    // 表单验证规则\n    const feedbackRules = {\n      content: [{\n        required: true,\n        message: '请输入反馈内容',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 500,\n        message: '长度在2到500个字符之间',\n        trigger: 'blur'\n      }]\n    };\n\n    // 提交反馈\n    const submitFeedback = () => {\n      if (!queryParams.courseId) {\n        ElMessage.warning('请先选择课程');\n        return;\n      }\n      feedbackFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            // 调用API提交反馈\n            const response = await axios.post('/api/feedback/add', {\n              content: feedbackForm.content,\n              courseId: queryParams.courseId\n            });\n            if (response.data.code === 200) {\n              ElMessage.success('反馈发布成功');\n              feedbackForm.content = ''; // 清空输入框\n              fetchFeedbackList(); // 刷新列表\n            } else {\n              ElMessage.error(response.data.message || '反馈发布失败');\n            }\n          } catch (error) {\n            console.error('提交反馈失败:', error);\n            ElMessage.error('提交反馈失败');\n          }\n        }\n      });\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getCurrentUser();\n      fetchCourseList();\n    });\n    const __returned__ = {\n      getFullAvatarUrl,\n      currentUserId,\n      isAdmin,\n      courseList,\n      feedbackList,\n      loading,\n      total,\n      replyContents,\n      queryParams,\n      getCurrentUser,\n      getUserDisplayName,\n      formatDateTime,\n      canDelete,\n      deleteFeedback,\n      fetchCourseList,\n      fetchFeedbackList,\n      resetQuery,\n      handleCourseChange,\n      handleCurrentChange,\n      handleSizeChange,\n      submitReply,\n      feedbackFormRef,\n      feedbackForm,\n      feedbackRules,\n      submitFeedback,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","axios","getFullAvatarUrl","path","startsWith","currentUserId","isAdmin","courseList","feedbackList","loading","total","replyContents","queryParams","pageNum","pageSize","courseId","undefined","getCurrentUser","userInfo","JSON","parse","localStorage","getItem","value","id","role","console","log","error","getUserDisplayName","item","userName","warn","parentId","formatDateTime","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","canDelete","userId","deleteFeedback","confirm","confirmButtonText","cancelButtonText","type","response","delete","data","code","success","fetchFeedbackList","message","fetchCourseList","teacherId","get","length","params","records","resetQuery","handleCourseChange","handleCurrentChange","val","handleSizeChange","submitReply","content","trim","warning","post","feedbackFormRef","feedbackForm","feedbackRules","required","trigger","min","max","submitFeedback","validate","valid"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/teacher/CourseFeedback.vue"],"sourcesContent":["<template>\r\n  <div class=\"feedback-container\">\r\n    <h1>课程反馈管理</h1>\r\n    \r\n    <!-- 过滤器卡片 -->\r\n    <el-card class=\"filter-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>反馈过滤</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-form-item label=\"选择课程\">\r\n            <el-select v-model=\"queryParams.courseId\" placeholder=\"请选择课程\" clearable @change=\"handleCourseChange\" style=\"width: 100%\">\r\n              <el-option\r\n                v-for=\"course in courseList\"\r\n                :key=\"course.id\"\r\n                :label=\"course.name\"\r\n                :value=\"course.id\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      \r\n      <div class=\"filter-info\" v-if=\"queryParams.courseId\">\r\n        <span>当前过滤：</span>\r\n        <el-tag class=\"filter-tag\" v-if=\"queryParams.courseId\">\r\n          课程：{{ courseList.find(c => c.id === queryParams.courseId)?.name }}\r\n        </el-tag>\r\n        <el-button type=\"primary\" size=\"small\" @click=\"fetchFeedbackList\">刷新数据</el-button>\r\n        <el-button size=\"small\" @click=\"resetQuery\">重置</el-button>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 创建反馈卡片 -->\r\n    <el-card class=\"add-feedback-card\" v-if=\"queryParams.courseId\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>创建新话题</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form ref=\"feedbackFormRef\" :model=\"feedbackForm\" :rules=\"feedbackRules\">\r\n        <el-form-item prop=\"content\">\r\n          <el-input\r\n            v-model=\"feedbackForm.content\"\r\n            type=\"textarea\"\r\n            rows=\"3\"\r\n            placeholder=\"输入新话题内容...\"\r\n            maxlength=\"500\"\r\n            show-word-limit\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitFeedback\">发布话题</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    \r\n    <!-- 反馈列表卡片 -->\r\n    <el-card class=\"feedback-list-card\" v-loading=\"loading\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>反馈列表</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <div class=\"feedback-list\" v-if=\"feedbackList.length > 0\">\r\n        <div class=\"feedback-item\" v-for=\"item in feedbackList\" :key=\"item.id\">\r\n          <div class=\"feedback-header\">\r\n            <div class=\"user-info\">\r\n              <div class=\"avatar-container\">\r\n                <div class=\"user-name-above\">用户</div>\r\n                <el-avatar :size=\"40\" :src=\"getFullAvatarUrl(item.userAvatar)\">{{ getUserDisplayName(item).charAt(0) }}</el-avatar>\r\n              </div>\r\n              <div class=\"user-name\">{{ getUserDisplayName(item) }}</div>\r\n            </div>\r\n            <div class=\"feedback-actions\">\r\n              <span class=\"feedback-time\">{{ formatDateTime(item.createTime) }}</span>\r\n              <el-button type=\"danger\" size=\"small\" v-if=\"isAdmin\" @click=\"deleteFeedback(item.id)\">删除</el-button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"feedback-content\">{{ item.content }}</div>\r\n          \r\n          <!-- 回复列表 -->\r\n          <div class=\"reply-list\" v-if=\"item.children && item.children.length > 0\">\r\n            <div class=\"reply-item\" v-for=\"reply in item.children\" :key=\"reply.id\">\r\n              <div class=\"reply-header\">\r\n                <div class=\"user-info\">\r\n                  <div class=\"avatar-container\">\r\n                    <div class=\"user-name-above\">{{ reply.userId === currentUserId ? '我' : '用户' }}</div>\r\n                    <el-avatar :size=\"30\" :src=\"getFullAvatarUrl(reply.userAvatar)\">{{ getUserDisplayName(reply).charAt(0) }}</el-avatar>\r\n                  </div>\r\n                  <div class=\"user-name\">{{ getUserDisplayName(reply) }}</div>\r\n                </div>\r\n                <div class=\"reply-actions\">\r\n                  <span class=\"reply-time\">{{ formatDateTime(reply.createTime) }}</span>\r\n                  <el-button type=\"danger\" size=\"small\" v-if=\"canDelete(reply)\" @click=\"deleteFeedback(reply.id)\">删除</el-button>\r\n                </div>\r\n              </div>\r\n              <div class=\"reply-content\">{{ reply.content }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 回复表单 -->\r\n          <div class=\"reply-form\">\r\n            <el-input\r\n              v-model=\"replyContents[item.id]\"\r\n              type=\"textarea\"\r\n              rows=\"2\"\r\n              placeholder=\"输入回复内容...\"\r\n              maxlength=\"500\"\r\n              show-word-limit\r\n              style=\"width: 90%;\"\r\n            ></el-input>\r\n            <el-button type=\"primary\" @click=\"submitReply(item.id)\">回复</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"empty-block\" v-else>\r\n        <el-empty description=\"暂无反馈数据\"></el-empty>\r\n      </div>\r\n      \r\n      <!-- 分页器 -->\r\n      <div class=\"pagination-container\" v-if=\"total > 0\">\r\n        <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          :current-page=\"queryParams.pageNum\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          @current-change=\"handleCurrentChange\"\r\n          @size-change=\"handleSizeChange\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\n// 处理头像路径，确保使用正确的服务器地址\r\nconst getFullAvatarUrl = (path) => {\r\n  if (!path) return '';\r\n  // 如果已经是完整URL，则直接返回\r\n  if (path.startsWith('http')) {\r\n    return path;\r\n  }\r\n  // 否则拼接后端地址\r\n  return `http://localhost:8080${path}`;\r\n};\r\n\r\n// 当前用户ID\r\nconst currentUserId = ref(0)\r\n\r\n// 是否为管理员\r\nconst isAdmin = ref(false)\r\n\r\n// 课程列表\r\nconst courseList = ref([])\r\n\r\n// 反馈列表\r\nconst feedbackList = ref([])\r\n\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 总数据条数\r\nconst total = ref(0)\r\n\r\n// 回复内容映射（key: 父反馈ID, value: 回复内容）\r\nconst replyContents = reactive({})\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  pageNum: 1,\r\n  pageSize: 10,\r\n  courseId: undefined\r\n})\r\n\r\n// 获取当前用户信息\r\nconst getCurrentUser = () => {\r\n  try {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\r\n    currentUserId.value = userInfo.id\r\n    isAdmin.value = userInfo.role === 2\r\n    console.log('当前用户ID:', currentUserId.value, '角色:', userInfo.role)\r\n  } catch (error) {\r\n    console.error('获取用户信息失败:', error)\r\n  }\r\n}\r\n\r\n// 获取用户显示名称\r\nconst getUserDisplayName = (item) => {\r\n  // 调试\r\n  if (item.id && !item.userName) {\r\n    console.warn(`ID为${item.id}的${item.parentId ? '回复' : '反馈'}没有用户名`, item)\r\n  }\r\n  \r\n  return item.userName || '匿名用户'\r\n}\r\n\r\n// 格式化日期时间\r\nconst formatDateTime = (dateTimeStr) => {\r\n  if (!dateTimeStr) return ''\r\n  \r\n  try {\r\n    const date = new Date(dateTimeStr)\r\n    return date.toLocaleString('zh-CN', { \r\n      year: 'numeric', \r\n      month: '2-digit', \r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    })\r\n  } catch (error) {\r\n    console.error('日期格式化错误:', error)\r\n    return dateTimeStr\r\n  }\r\n}\r\n\r\n// 判断是否可以删除反馈或回复\r\nconst canDelete = (item) => {\r\n  return item.userId === currentUserId.value || isAdmin.value\r\n}\r\n\r\n// 删除反馈或回复\r\nconst deleteFeedback = async (id) => {\r\n  try {\r\n    await ElMessageBox.confirm('确定要删除这条内容吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    })\r\n    \r\n    const response = await axios.delete(`/api/feedback/${id}`)\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('删除成功')\r\n      fetchFeedbackList() // 刷新列表\r\n    } else {\r\n      ElMessage.error(response.data.message || '删除失败')\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      console.error('删除失败:', error)\r\n      ElMessage.error('删除失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 获取课程列表\r\nconst fetchCourseList = async () => {\r\n  try {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\r\n    const teacherId = userInfo.id\r\n    const response = await axios.get(`/api/course/teacher/${teacherId}`)\r\n    courseList.value = response.data.data || []\r\n    \r\n    // 如果有课程，默认选择第一个\r\n    if (courseList.value.length > 0 && !queryParams.courseId) {\r\n      queryParams.courseId = courseList.value[0].id\r\n      await fetchFeedbackList()\r\n    }\r\n  } catch (error) {\r\n    console.error('获取课程列表失败:', error)\r\n    ElMessage.error('获取课程列表失败')\r\n  }\r\n}\r\n\r\n// 获取反馈列表\r\nconst fetchFeedbackList = async () => {\r\n  if (!queryParams.courseId) {\r\n    feedbackList.value = []\r\n    total.value = 0\r\n    return\r\n  }\r\n  \r\n  loading.value = true\r\n  try {\r\n    const response = await axios.get('/api/feedback/list', {\r\n      params: queryParams\r\n    })\r\n    \r\n    console.log('反馈列表原始数据:', response.data.data);\r\n    \r\n    feedbackList.value = response.data.data.records || []\r\n    console.log('反馈列表处理后数据:', feedbackList.value);\r\n    \r\n    total.value = response.data.data.total || 0\r\n  } catch (error) {\r\n    console.error('获取反馈列表失败:', error)\r\n    ElMessage.error('获取反馈列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 重置查询条件\r\nconst resetQuery = () => {\r\n  queryParams.courseId = undefined\r\n  feedbackList.value = []\r\n  total.value = 0\r\n}\r\n\r\n// 处理课程变化\r\nconst handleCourseChange = () => {\r\n  fetchFeedbackList()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  queryParams.pageNum = val\r\n  fetchFeedbackList()\r\n}\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (val) => {\r\n  queryParams.pageSize = val\r\n  fetchFeedbackList()\r\n}\r\n\r\n// 提交回复\r\nconst submitReply = async (parentId) => {\r\n  const content = replyContents[parentId]\r\n  if (!content || content.trim() === '') {\r\n    ElMessage.warning('请输入回复内容')\r\n    return\r\n  }\r\n  \r\n  try {\r\n    const response = await axios.post('/api/feedback/reply', {\r\n      content,\r\n      courseId: queryParams.courseId,\r\n      parentId\r\n    })\r\n    \r\n    if (response.data.code === 200) {\r\n      ElMessage.success('回复提交成功')\r\n      replyContents[parentId] = ''\r\n      fetchFeedbackList()\r\n    } else {\r\n      ElMessage.error(response.data.message || '回复提交失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('提交回复失败:', error)\r\n    ElMessage.error('提交回复失败')\r\n  }\r\n}\r\n\r\n// 反馈表单\r\nconst feedbackFormRef = ref(null)\r\nconst feedbackForm = reactive({\r\n  content: ''\r\n})\r\n\r\n// 表单验证规则\r\nconst feedbackRules = {\r\n  content: [\r\n    { required: true, message: '请输入反馈内容', trigger: 'blur' },\r\n    { min: 2, max: 500, message: '长度在2到500个字符之间', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 提交反馈\r\nconst submitFeedback = () => {\r\n  if (!queryParams.courseId) {\r\n    ElMessage.warning('请先选择课程')\r\n    return\r\n  }\r\n  \r\n  feedbackFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        // 调用API提交反馈\r\n        const response = await axios.post('/api/feedback/add', {\r\n          content: feedbackForm.content,\r\n          courseId: queryParams.courseId\r\n        })\r\n        \r\n        if (response.data.code === 200) {\r\n          ElMessage.success('反馈发布成功')\r\n          feedbackForm.content = '' // 清空输入框\r\n          fetchFeedbackList() // 刷新列表\r\n        } else {\r\n          ElMessage.error(response.data.message || '反馈发布失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('提交反馈失败:', error)\r\n        ElMessage.error('提交反馈失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 页面加载时获取数据\r\nonMounted(() => {\r\n  getCurrentUser()\r\n  fetchCourseList()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.feedback-container {\r\n  h1 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 20px;\r\n    \r\n    .filter-info {\r\n      margin-top: 10px;\r\n      font-size: 14px;\r\n      color: #606266;\r\n      \r\n      .filter-tag {\r\n        margin-left: 8px;\r\n        margin-right: 8px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .add-feedback-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .feedback-list-card {\r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    \r\n    .feedback-list {\r\n      .feedback-item {\r\n        padding: 15px;\r\n        border-bottom: 1px solid #ebeef5;\r\n        \r\n        &:last-child {\r\n          border-bottom: none;\r\n        }\r\n        \r\n        .feedback-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 10px;\r\n          \r\n          .user-info {\r\n            display: flex;\r\n            align-items: center;\r\n            \r\n            .avatar-container {\r\n              position: relative;\r\n              display: flex;\r\n              flex-direction: column;\r\n              align-items: center;\r\n              \r\n              .user-name-above {\r\n                font-size: 12px;\r\n                color: #606266;\r\n                margin-bottom: 5px;\r\n                white-space: nowrap;\r\n              }\r\n            }\r\n            \r\n            .user-name {\r\n              margin-left: 10px;\r\n              font-weight: bold;\r\n            }\r\n          }\r\n          \r\n          .feedback-actions {\r\n            display: flex;\r\n            align-items: center;\r\n            \r\n            .feedback-time {\r\n              color: #909399;\r\n              font-size: 12px;\r\n              margin-right: 10px;\r\n            }\r\n          }\r\n        }\r\n        \r\n        .feedback-content {\r\n          margin-bottom: 15px;\r\n          line-height: 1.5;\r\n        }\r\n        \r\n        .reply-list {\r\n          background-color: #f5f7fa;\r\n          border-radius: 4px;\r\n          padding: 10px;\r\n          margin-bottom: 15px;\r\n          \r\n          .reply-item {\r\n            padding: 10px;\r\n            border-bottom: 1px solid #ebeef5;\r\n            \r\n            &:last-child {\r\n              border-bottom: none;\r\n            }\r\n            \r\n            .reply-header {\r\n              display: flex;\r\n              justify-content: space-between;\r\n              align-items: center;\r\n              margin-bottom: 5px;\r\n              \r\n              .user-info {\r\n                display: flex;\r\n                align-items: center;\r\n                \r\n                .avatar-container {\r\n                  position: relative;\r\n                  display: flex;\r\n                  flex-direction: column;\r\n                  align-items: center;\r\n                  \r\n                  .user-name-above {\r\n                    font-size: 12px;\r\n                    color: #606266;\r\n                    margin-bottom: 5px;\r\n                    white-space: nowrap;\r\n                  }\r\n                }\r\n                \r\n                .user-name {\r\n                  margin-left: 10px;\r\n                  font-weight: bold;\r\n                  font-size: 14px;\r\n                }\r\n              }\r\n              \r\n              .reply-actions {\r\n                display: flex;\r\n                align-items: center;\r\n                \r\n                .reply-time {\r\n                  color: #909399;\r\n                  font-size: 12px;\r\n                  margin-right: 10px;\r\n                }\r\n              }\r\n            }\r\n            \r\n            .reply-content {\r\n              margin-left: 40px;\r\n              line-height: 1.5;\r\n            }\r\n          }\r\n        }\r\n        \r\n        .reply-form {\r\n          display: flex;\r\n          align-items: flex-start;\r\n          \r\n          .el-button {\r\n            margin-left: 10px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    .empty-block {\r\n      padding: 30px 0;\r\n    }\r\n  }\r\n  \r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n</style> "],"mappings":"AAkJA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;AACtD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;MACjC,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB;MACA,IAAIA,IAAI,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;QAC3B,OAAOD,IAAI;MACb;MACA;MACA,OAAO,wBAAwBA,IAAI,EAAE;IACvC,CAAC;;IAED;IACA,MAAME,aAAa,GAAGT,GAAG,CAAC,CAAC,CAAC;;IAE5B;IACA,MAAMU,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC;;IAE1B;IACA,MAAMW,UAAU,GAAGX,GAAG,CAAC,EAAE,CAAC;;IAE1B;IACA,MAAMY,YAAY,GAAGZ,GAAG,CAAC,EAAE,CAAC;;IAE5B;IACA,MAAMa,OAAO,GAAGb,GAAG,CAAC,KAAK,CAAC;;IAE1B;IACA,MAAMc,KAAK,GAAGd,GAAG,CAAC,CAAC,CAAC;;IAEpB;IACA,MAAMe,aAAa,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAElC;IACA,MAAMe,WAAW,GAAGf,QAAQ,CAAC;MAC3BgB,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAEC;IACZ,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;QACrEjB,aAAa,CAACkB,KAAK,GAAGL,QAAQ,CAACM,EAAE;QACjClB,OAAO,CAACiB,KAAK,GAAGL,QAAQ,CAACO,IAAI,KAAK,CAAC;QACnCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEtB,aAAa,CAACkB,KAAK,EAAE,KAAK,EAAEL,QAAQ,CAACO,IAAI,CAAC;MACnE,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;;IAED;IACA,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;MACnC;MACA,IAAIA,IAAI,CAACN,EAAE,IAAI,CAACM,IAAI,CAACC,QAAQ,EAAE;QAC7BL,OAAO,CAACM,IAAI,CAAC,MAAMF,IAAI,CAACN,EAAE,IAAIM,IAAI,CAACG,QAAQ,GAAG,IAAI,GAAG,IAAI,OAAO,EAAEH,IAAI,CAAC;MACzE;MAEA,OAAOA,IAAI,CAACC,QAAQ,IAAI,MAAM;IAChC,CAAC;;IAED;IACA,MAAMG,cAAc,GAAIC,WAAW,IAAK;MACtC,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;MAE3B,IAAI;QACF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,WAAW,CAAC;QAClC,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;UAClCC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,SAAS;UAChBC,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChC,OAAOO,WAAW;MACpB;IACF,CAAC;;IAED;IACA,MAAMS,SAAS,GAAId,IAAI,IAAK;MAC1B,OAAOA,IAAI,CAACe,MAAM,KAAKxC,aAAa,CAACkB,KAAK,IAAIjB,OAAO,CAACiB,KAAK;IAC7D,CAAC;;IAED;IACA,MAAMuB,cAAc,GAAG,MAAOtB,EAAE,IAAK;MACnC,IAAI;QACF,MAAMxB,YAAY,CAAC+C,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE;UAC9CC,iBAAiB,EAAE,IAAI;UACvBC,gBAAgB,EAAE,IAAI;UACtBC,IAAI,EAAE;QACR,CAAC,CAAC;QAEF,MAAMC,QAAQ,GAAG,MAAMlD,KAAK,CAACmD,MAAM,CAAC,iBAAiB5B,EAAE,EAAE,CAAC;QAC1D,IAAI2B,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9BvD,SAAS,CAACwD,OAAO,CAAC,MAAM,CAAC;UACzBC,iBAAiB,CAAC,CAAC,EAAC;QACtB,CAAC,MAAM;UACLzD,SAAS,CAAC6B,KAAK,CAACuB,QAAQ,CAACE,IAAI,CAACI,OAAO,IAAI,MAAM,CAAC;QAClD;MACF,CAAC,CAAC,OAAO7B,KAAK,EAAE;QACd,IAAIA,KAAK,KAAK,QAAQ,EAAE;UACtBF,OAAO,CAACE,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;UAC7B7B,SAAS,CAAC6B,KAAK,CAAC,MAAM,CAAC;QACzB;MACF;IACF,CAAC;;IAED;IACA,MAAM8B,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMxC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;QACrE,MAAMqC,SAAS,GAAGzC,QAAQ,CAACM,EAAE;QAC7B,MAAM2B,QAAQ,GAAG,MAAMlD,KAAK,CAAC2D,GAAG,CAAC,uBAAuBD,SAAS,EAAE,CAAC;QACpEpD,UAAU,CAACgB,KAAK,GAAG4B,QAAQ,CAACE,IAAI,CAACA,IAAI,IAAI,EAAE;;QAE3C;QACA,IAAI9C,UAAU,CAACgB,KAAK,CAACsC,MAAM,GAAG,CAAC,IAAI,CAACjD,WAAW,CAACG,QAAQ,EAAE;UACxDH,WAAW,CAACG,QAAQ,GAAGR,UAAU,CAACgB,KAAK,CAAC,CAAC,CAAC,CAACC,EAAE;UAC7C,MAAMgC,iBAAiB,CAAC,CAAC;QAC3B;MACF,CAAC,CAAC,OAAO5B,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC7B,SAAS,CAAC6B,KAAK,CAAC,UAAU,CAAC;MAC7B;IACF,CAAC;;IAED;IACA,MAAM4B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAAC5C,WAAW,CAACG,QAAQ,EAAE;QACzBP,YAAY,CAACe,KAAK,GAAG,EAAE;QACvBb,KAAK,CAACa,KAAK,GAAG,CAAC;QACf;MACF;MAEAd,OAAO,CAACc,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAM4B,QAAQ,GAAG,MAAMlD,KAAK,CAAC2D,GAAG,CAAC,oBAAoB,EAAE;UACrDE,MAAM,EAAElD;QACV,CAAC,CAAC;QAEFc,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEwB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QAE5C7C,YAAY,CAACe,KAAK,GAAG4B,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACU,OAAO,IAAI,EAAE;QACrDrC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEnB,YAAY,CAACe,KAAK,CAAC;QAE7Cb,KAAK,CAACa,KAAK,GAAG4B,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC3C,KAAK,IAAI,CAAC;MAC7C,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC7B,SAAS,CAAC6B,KAAK,CAAC,UAAU,CAAC;MAC7B,CAAC,SAAS;QACRnB,OAAO,CAACc,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMyC,UAAU,GAAGA,CAAA,KAAM;MACvBpD,WAAW,CAACG,QAAQ,GAAGC,SAAS;MAChCR,YAAY,CAACe,KAAK,GAAG,EAAE;MACvBb,KAAK,CAACa,KAAK,GAAG,CAAC;IACjB,CAAC;;IAED;IACA,MAAM0C,kBAAkB,GAAGA,CAAA,KAAM;MAC/BT,iBAAiB,CAAC,CAAC;IACrB,CAAC;;IAED;IACA,MAAMU,mBAAmB,GAAIC,GAAG,IAAK;MACnCvD,WAAW,CAACC,OAAO,GAAGsD,GAAG;MACzBX,iBAAiB,CAAC,CAAC;IACrB,CAAC;;IAED;IACA,MAAMY,gBAAgB,GAAID,GAAG,IAAK;MAChCvD,WAAW,CAACE,QAAQ,GAAGqD,GAAG;MAC1BX,iBAAiB,CAAC,CAAC;IACrB,CAAC;;IAED;IACA,MAAMa,WAAW,GAAG,MAAOpC,QAAQ,IAAK;MACtC,MAAMqC,OAAO,GAAG3D,aAAa,CAACsB,QAAQ,CAAC;MACvC,IAAI,CAACqC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACrCxE,SAAS,CAACyE,OAAO,CAAC,SAAS,CAAC;QAC5B;MACF;MAEA,IAAI;QACF,MAAMrB,QAAQ,GAAG,MAAMlD,KAAK,CAACwE,IAAI,CAAC,qBAAqB,EAAE;UACvDH,OAAO;UACPvD,QAAQ,EAAEH,WAAW,CAACG,QAAQ;UAC9BkB;QACF,CAAC,CAAC;QAEF,IAAIkB,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9BvD,SAAS,CAACwD,OAAO,CAAC,QAAQ,CAAC;UAC3B5C,aAAa,CAACsB,QAAQ,CAAC,GAAG,EAAE;UAC5BuB,iBAAiB,CAAC,CAAC;QACrB,CAAC,MAAM;UACLzD,SAAS,CAAC6B,KAAK,CAACuB,QAAQ,CAACE,IAAI,CAACI,OAAO,IAAI,QAAQ,CAAC;QACpD;MACF,CAAC,CAAC,OAAO7B,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B7B,SAAS,CAAC6B,KAAK,CAAC,QAAQ,CAAC;MAC3B;IACF,CAAC;;IAED;IACA,MAAM8C,eAAe,GAAG9E,GAAG,CAAC,IAAI,CAAC;IACjC,MAAM+E,YAAY,GAAG9E,QAAQ,CAAC;MAC5ByE,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,MAAMM,aAAa,GAAG;MACpBN,OAAO,EAAE,CACP;QAAEO,QAAQ,EAAE,IAAI;QAAEpB,OAAO,EAAE,SAAS;QAAEqB,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,GAAG;QAAEvB,OAAO,EAAE,eAAe;QAAEqB,OAAO,EAAE;MAAO,CAAC;IAEnE,CAAC;;IAED;IACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAI,CAACrE,WAAW,CAACG,QAAQ,EAAE;QACzBhB,SAAS,CAACyE,OAAO,CAAC,QAAQ,CAAC;QAC3B;MACF;MAEAE,eAAe,CAACnD,KAAK,CAAC2D,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC9C,IAAIA,KAAK,EAAE;UACT,IAAI;YACF;YACA,MAAMhC,QAAQ,GAAG,MAAMlD,KAAK,CAACwE,IAAI,CAAC,mBAAmB,EAAE;cACrDH,OAAO,EAAEK,YAAY,CAACL,OAAO;cAC7BvD,QAAQ,EAAEH,WAAW,CAACG;YACxB,CAAC,CAAC;YAEF,IAAIoC,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;cAC9BvD,SAAS,CAACwD,OAAO,CAAC,QAAQ,CAAC;cAC3BoB,YAAY,CAACL,OAAO,GAAG,EAAE,EAAC;cAC1Bd,iBAAiB,CAAC,CAAC,EAAC;YACtB,CAAC,MAAM;cACLzD,SAAS,CAAC6B,KAAK,CAACuB,QAAQ,CAACE,IAAI,CAACI,OAAO,IAAI,QAAQ,CAAC;YACpD;UACF,CAAC,CAAC,OAAO7B,KAAK,EAAE;YACdF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;YAC/B7B,SAAS,CAAC6B,KAAK,CAAC,QAAQ,CAAC;UAC3B;QACF;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACA9B,SAAS,CAAC,MAAM;MACdmB,cAAc,CAAC,CAAC;MAChByC,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}