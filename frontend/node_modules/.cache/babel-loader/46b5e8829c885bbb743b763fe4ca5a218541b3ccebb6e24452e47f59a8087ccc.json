{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"feedback-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"filter-info\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"empty-block\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"feedback-list\"\n};\nconst _hoisted_5 = {\n  class: \"feedback-header\"\n};\nconst _hoisted_6 = {\n  class: \"user-info\"\n};\nconst _hoisted_7 = {\n  class: \"avatar-container\"\n};\nconst _hoisted_8 = {\n  class: \"user-name-above\"\n};\nconst _hoisted_9 = {\n  class: \"feedback-actions\"\n};\nconst _hoisted_10 = {\n  class: \"feedback-time\"\n};\nconst _hoisted_11 = {\n  class: \"feedback-content\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"reply-list\"\n};\nconst _hoisted_13 = {\n  class: \"reply-header\"\n};\nconst _hoisted_14 = {\n  class: \"user-info\"\n};\nconst _hoisted_15 = {\n  class: \"avatar-container\"\n};\nconst _hoisted_16 = {\n  class: \"user-name-above\"\n};\nconst _hoisted_17 = {\n  class: \"reply-actions\"\n};\nconst _hoisted_18 = {\n  class: \"reply-time\"\n};\nconst _hoisted_19 = {\n  class: \"reply-content\"\n};\nconst _hoisted_20 = {\n  class: \"reply-form\"\n};\nconst _hoisted_21 = {\n  class: \"pagination-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"课程反馈\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    class: \"filter-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      inline: true,\n      model: $setup.queryParams,\n      class: \"filter-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"课程\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.courseId,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.queryParams.courseId = $event),\n          placeholder: \"选择课程\",\n          clearable: \"\",\n          onChange: $setup.handleCourseChange,\n          style: {\n            \"width\": \"220px\"\n          },\n          filterable: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.courseList, course => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: course.id,\n              label: course.name,\n              value: course.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.fetchFeedbackList\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_button, {\n          onClick: $setup.resetQuery\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"重置\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createCommentVNode(\" 显示当前筛选条件 \"), $setup.selectedCourseName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"当前筛选: \", -1 /* HOISTED */)), $setup.selectedCourseName ? (_openBlock(), _createBlock(_component_el_tag, {\n      key: 0,\n      type: \"info\",\n      class: \"filter-tag\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 课程: \" + _toDisplayString($setup.selectedCourseName), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), $setup.queryParams.courseId ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"add-feedback-card\"\n  }, {\n    header: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", null, \"发表反馈\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"feedbackFormRef\",\n      model: $setup.feedbackForm,\n      rules: $setup.feedbackRules\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        prop: \"content\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.feedbackForm.content,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.feedbackForm.content = $event),\n          type: \"textarea\",\n          rows: 3,\n          placeholder: \"请输入您的反馈或问题...\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.submitFeedback\n        }, {\n          default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"提交反馈\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $setup.queryParams.courseId ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 1,\n    class: \"feedback-list-card\"\n  }, {\n    header: _withCtx(() => _cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", null, \"反馈列表\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createElementBlock(\"div\", null, [$setup.feedbackList.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_empty, {\n      description: \"暂无反馈数据\"\n    })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.feedbackList, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.id,\n        class: \"feedback-item\"\n      }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.getUserDisplayName(item)), 1 /* TEXT */), _createVNode(_component_el_avatar, {\n        size: 40,\n        src: item.userAvatar || $setup.defaultAvatar\n      }, null, 8 /* PROPS */, [\"src\"])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString($setup.formatDateTime(item.createTime)), 1 /* TEXT */), $setup.canDelete(item) ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"danger\",\n        size: \"small\",\n        icon: \"Delete\",\n        circle: \"\",\n        plain: \"\",\n        onClick: $event => $setup.deleteFeedback(item.id)\n      }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_11, _toDisplayString(item.content), 1 /* TEXT */), _createCommentVNode(\" 回复列表 \"), item.children && item.children.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.children, reply => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: reply.id,\n          class: \"reply-item\"\n        }, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, _toDisplayString($setup.getUserDisplayName(reply)), 1 /* TEXT */), _createVNode(_component_el_avatar, {\n          size: 30,\n          src: reply.userAvatar || $setup.defaultAvatar\n        }, null, 8 /* PROPS */, [\"src\"])])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"span\", _hoisted_18, _toDisplayString($setup.formatDateTime(reply.createTime)), 1 /* TEXT */), $setup.canDelete(reply) ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"danger\",\n          size: \"small\",\n          icon: \"Delete\",\n          circle: \"\",\n          plain: \"\",\n          onClick: $event => $setup.deleteFeedback(reply.id)\n        }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_19, _toDisplayString(reply.content), 1 /* TEXT */)]);\n      }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 回复表单 \"), _createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_input, {\n        modelValue: $setup.replyContents[item.id],\n        \"onUpdate:modelValue\": $event => $setup.replyContents[item.id] = $event,\n        type: \"textarea\",\n        rows: 2,\n        placeholder: \"回复该反馈...\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.submitReply(item.id)\n      }, {\n        default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\"回复\")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]);\n    }), 128 /* KEYED_FRAGMENT */))])), _createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_el_pagination, {\n      \"current-page\": $setup.queryParams.pageNum,\n      \"page-size\": $setup.queryParams.pageSize,\n      \"page-sizes\": [5, 10, 20, 50],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total,\n      onSizeChange: $setup.handleSizeChange,\n      onCurrentChange: $setup.handleCurrentChange\n    }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])])), [[_directive_loading, $setup.loading]])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","default","_withCtx","_component_el_form","inline","model","$setup","queryParams","_component_el_form_item","label","_component_el_select","modelValue","courseId","_cache","$event","placeholder","clearable","onChange","handleCourseChange","style","filterable","_Fragment","_renderList","courseList","course","_createBlock","_component_el_option","id","name","value","_","_component_el_button","type","onClick","fetchFeedbackList","_createTextVNode","resetQuery","_createCommentVNode","selectedCourseName","_hoisted_2","_component_el_tag","_toDisplayString","header","ref","feedbackForm","rules","feedbackRules","prop","_component_el_input","content","rows","submitFeedback","feedbackList","length","_hoisted_3","_component_el_empty","description","_hoisted_4","item","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","getUserDisplayName","_component_el_avatar","size","src","userAvatar","defaultAvatar","_hoisted_9","_hoisted_10","formatDateTime","createTime","canDelete","icon","circle","plain","deleteFeedback","_hoisted_11","children","_hoisted_12","reply","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","replyContents","submitReply","_hoisted_21","_component_el_pagination","pageNum","pageSize","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","loading"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\TCRSystem\\TCRSystem\\frontend\\src\\views\\student\\Feedback.vue"],"sourcesContent":["<template>\n  <div class=\"feedback-container\">\n    <h1>课程反馈</h1>\n    \n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"filter-form\">\n        <el-form-item label=\"课程\">\n          <el-select \n            v-model=\"queryParams.courseId\" \n            placeholder=\"选择课程\" \n            clearable \n            @change=\"handleCourseChange\"\n            style=\"width: 220px;\"\n            filterable\n          >\n            <el-option\n              v-for=\"course in courseList\"\n              :key=\"course.id\"\n              :label=\"course.name\"\n              :value=\"course.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchFeedbackList\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      \n      <!-- 显示当前筛选条件 -->\n      <div class=\"filter-info\" v-if=\"selectedCourseName\">\n        <span>当前筛选: </span>\n        <el-tag v-if=\"selectedCourseName\" type=\"info\" class=\"filter-tag\">\n          课程: {{ selectedCourseName }}\n        </el-tag>\n      </div>\n    </el-card>\n    \n    <el-card v-if=\"queryParams.courseId\" class=\"add-feedback-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>发表反馈</span>\n        </div>\n      </template>\n      <el-form ref=\"feedbackFormRef\" :model=\"feedbackForm\" :rules=\"feedbackRules\">\n        <el-form-item prop=\"content\">\n          <el-input\n            v-model=\"feedbackForm.content\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入您的反馈或问题...\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitFeedback\">提交反馈</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <el-card v-if=\"queryParams.courseId\" class=\"feedback-list-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>反馈列表</span>\n        </div>\n      </template>\n      \n      <div v-loading=\"loading\">\n        <div v-if=\"feedbackList.length === 0\" class=\"empty-block\">\n          <el-empty description=\"暂无反馈数据\"></el-empty>\n        </div>\n        \n        <div v-else class=\"feedback-list\">\n          <div v-for=\"item in feedbackList\" :key=\"item.id\" class=\"feedback-item\">\n            <div class=\"feedback-header\">\n              <div class=\"user-info\">\n                <div class=\"avatar-container\">\n                  <div class=\"user-name-above\">{{ getUserDisplayName(item) }}</div>\n                  <el-avatar :size=\"40\" :src=\"item.userAvatar || defaultAvatar\"></el-avatar>\n                </div>\n              </div>\n              <div class=\"feedback-actions\">\n                <span class=\"feedback-time\">{{ formatDateTime(item.createTime) }}</span>\n                <el-button \n                  v-if=\"canDelete(item)\" \n                  type=\"danger\" \n                  size=\"small\" \n                  icon=\"Delete\" \n                  circle \n                  plain\n                  @click=\"deleteFeedback(item.id)\"\n                ></el-button>\n              </div>\n            </div>\n            <div class=\"feedback-content\">{{ item.content }}</div>\n            \n            <!-- 回复列表 -->\n            <div v-if=\"item.children && item.children.length > 0\" class=\"reply-list\">\n              <div v-for=\"reply in item.children\" :key=\"reply.id\" class=\"reply-item\">\n                <div class=\"reply-header\">\n                  <div class=\"user-info\">\n                    <div class=\"avatar-container\">\n                      <div class=\"user-name-above\">{{ getUserDisplayName(reply) }}</div>\n                      <el-avatar :size=\"30\" :src=\"reply.userAvatar || defaultAvatar\"></el-avatar>\n                    </div>\n                  </div>\n                  <div class=\"reply-actions\">\n                    <span class=\"reply-time\">{{ formatDateTime(reply.createTime) }}</span>\n                    <el-button \n                      v-if=\"canDelete(reply)\" \n                      type=\"danger\" \n                      size=\"small\" \n                      icon=\"Delete\" \n                      circle \n                      plain\n                      @click=\"deleteFeedback(reply.id)\"\n                    ></el-button>\n                  </div>\n                </div>\n                <div class=\"reply-content\">{{ reply.content }}</div>\n              </div>\n            </div>\n            \n            <!-- 回复表单 -->\n            <div class=\"reply-form\">\n              <el-input\n                v-model=\"replyContents[item.id]\"\n                type=\"textarea\"\n                :rows=\"2\"\n                placeholder=\"回复该反馈...\"\n              />\n              <el-button type=\"primary\" size=\"small\" @click=\"submitReply(item.id)\">回复</el-button>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"pagination-container\">\n          <el-pagination\n            :current-page=\"queryParams.pageNum\"\n            :page-size=\"queryParams.pageSize\"\n            :page-sizes=\"[5, 10, 20, 50]\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport axios from 'axios'\n\n// 状态变量\nconst loading = ref(false)\nconst feedbackList = ref([])\nconst courseList = ref([])\nconst total = ref(0)\nconst feedbackFormRef = ref(null)\nconst defaultAvatar = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\n\n// 当前用户ID\nconst currentUserId = ref(null)\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  courseId: undefined\n})\n\n// 反馈表单\nconst feedbackForm = reactive({\n  content: '',\n  courseId: computed(() => queryParams.courseId)\n})\n\n// 回复内容\nconst replyContents = reactive({})\n\n// 表单校验规则\nconst feedbackRules = {\n  content: [\n    { required: true, message: '请输入反馈内容', trigger: 'blur' },\n    { min: 5, max: 500, message: '长度在 5 到 500 个字符', trigger: 'blur' }\n  ]\n}\n\n// 计算属性：当前选中的课程名称\nconst selectedCourseName = computed(() => {\n  if (!queryParams.courseId) return ''\n  const course = courseList.value.find(c => c.id === queryParams.courseId)\n  return course ? course.name : ''\n})\n\n// 获取当前用户信息\nconst getCurrentUser = () => {\n  try {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\n    currentUserId.value = userInfo.id\n    console.log('当前用户ID:', currentUserId.value)\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n  }\n}\n\n// 获取用户显示名称\nconst getUserDisplayName = (item) => {\n  // 调试\n  if (item.id && !item.userName) {\n    console.warn(`ID为${item.id}的${item.parentId ? '回复' : '反馈'}没有用户名`, item)\n  }\n  \n  return item.userName || '匿名用户'\n}\n\n// 格式化日期时间\nconst formatDateTime = (dateTimeStr) => {\n  if (!dateTimeStr) return ''\n  \n  try {\n    const date = new Date(dateTimeStr)\n    return date.toLocaleString('zh-CN', { \n      year: 'numeric', \n      month: '2-digit', \n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  } catch (error) {\n    console.error('日期格式化错误:', error)\n    return dateTimeStr\n  }\n}\n\n// 判断是否可以删除反馈或回复\nconst canDelete = (item) => {\n  return item.userId === currentUserId.value\n}\n\n// 删除反馈或回复\nconst deleteFeedback = async (id) => {\n  try {\n    await ElMessageBox.confirm('确定要删除这条内容吗？', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    })\n    \n    const response = await axios.delete(`/api/feedback/${id}`)\n    if (response.data.code === 200) {\n      ElMessage.success('删除成功')\n      fetchFeedbackList() // 刷新列表\n    } else {\n      ElMessage.error(response.data.message || '删除失败')\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      console.error('删除失败:', error)\n      ElMessage.error('删除失败')\n    }\n  }\n}\n\n// 获取课程列表\nconst fetchCourseList = async () => {\n  try {\n    const response = await axios.get('/api/student/courses')\n    courseList.value = response.data.data || []\n    \n    // 如果有课程，默认选择第一个\n    if (courseList.value.length > 0 && !queryParams.courseId) {\n      queryParams.courseId = courseList.value[0].id\n      await fetchFeedbackList()\n    }\n  } catch (error) {\n    console.error('获取课程列表失败:', error)\n    ElMessage.error('获取课程列表失败')\n  }\n}\n\n// 获取反馈列表\nconst fetchFeedbackList = async () => {\n  if (!queryParams.courseId) {\n    feedbackList.value = []\n    total.value = 0\n    return\n  }\n  \n  loading.value = true\n  try {\n    const response = await axios.get('/api/feedback/list', {\n      params: queryParams\n    })\n    // 打印API返回的原始数据\n    console.log('反馈列表原始数据:', response.data.data);\n    \n    feedbackList.value = response.data.data.records || []\n    // 打印处理后的数据\n    console.log('反馈列表处理后数据:', feedbackList.value);\n    \n    // 检查所有反馈的数据\n    if (feedbackList.value.length > 0) {\n      feedbackList.value.forEach((feedback, index) => {\n        console.log(`第${index+1}条反馈 ID:${feedback.id}, 用户ID:${feedback.userId}, 用户名:${feedback.userName}`);\n        \n        // 检查回复数据\n        if (feedback.children && feedback.children.length > 0) {\n          feedback.children.forEach((reply, replyIndex) => {\n            console.log(`  - 回复${replyIndex+1} ID:${reply.id}, 用户ID:${reply.userId}, 用户名:${reply.userName}`);\n          });\n        }\n      });\n    }\n    \n    total.value = response.data.data.total || 0\n  } catch (error) {\n    console.error('获取反馈列表失败:', error)\n    ElMessage.error('获取反馈列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 重置查询条件\nconst resetQuery = () => {\n  queryParams.courseId = undefined\n  feedbackList.value = []\n  total.value = 0\n}\n\n// 处理课程变化\nconst handleCourseChange = () => {\n  fetchFeedbackList()\n}\n\n// 处理页码变化\nconst handleCurrentChange = (val) => {\n  queryParams.pageNum = val\n  fetchFeedbackList()\n}\n\n// 处理每页条数变化\nconst handleSizeChange = (val) => {\n  queryParams.pageSize = val\n  fetchFeedbackList()\n}\n\n// 提交反馈\nconst submitFeedback = () => {\n  if (!queryParams.courseId) {\n    ElMessage.warning('请先选择课程')\n    return\n  }\n  \n  feedbackFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        // 这里应该调用API提交反馈\n        const response = await axios.post('/api/feedback/add', {\n          content: feedbackForm.content,\n          courseId: queryParams.courseId\n        })\n        \n        if (response.data.code === 200) {\n          ElMessage.success('反馈提交成功')\n          feedbackForm.content = ''\n          fetchFeedbackList()\n        } else {\n          ElMessage.error(response.data.message || '反馈提交失败')\n        }\n      } catch (error) {\n        console.error('提交反馈失败:', error)\n        ElMessage.error('提交反馈失败')\n      }\n    }\n  })\n}\n\n// 提交回复\nconst submitReply = async (parentId) => {\n  const content = replyContents[parentId]\n  if (!content || content.trim() === '') {\n    ElMessage.warning('请输入回复内容')\n    return\n  }\n  \n  try {\n    // 这里应该调用API提交回复\n    const response = await axios.post('/api/feedback/reply', {\n      content,\n      courseId: queryParams.courseId,\n      parentId\n    })\n    \n    if (response.data.code === 200) {\n      ElMessage.success('回复提交成功')\n      replyContents[parentId] = ''\n      fetchFeedbackList()\n    } else {\n      ElMessage.error(response.data.message || '回复提交失败')\n    }\n  } catch (error) {\n    console.error('提交回复失败:', error)\n    ElMessage.error('提交回复失败')\n  }\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getCurrentUser()\n  fetchCourseList()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.feedback-container {\n  h1 {\n    margin-bottom: 20px;\n  }\n  \n  .filter-card {\n    margin-bottom: 20px;\n    \n    .filter-info {\n      margin-top: 10px;\n      font-size: 14px;\n      color: #606266;\n      \n      .filter-tag {\n        margin-left: 8px;\n        margin-right: 8px;\n      }\n    }\n  }\n  \n  .add-feedback-card {\n    margin-bottom: 20px;\n  }\n  \n  .feedback-list-card {\n    .card-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    \n    .feedback-list {\n      .feedback-item {\n        padding: 15px;\n        border-bottom: 1px solid #ebeef5;\n        \n        &:last-child {\n          border-bottom: none;\n        }\n        \n        .feedback-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 10px;\n          \n          .user-info {\n            display: flex;\n            align-items: center;\n            \n            .avatar-container {\n              position: relative;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              \n              .user-name-above {\n                font-size: 12px;\n                color: #606266;\n                margin-bottom: 5px;\n                white-space: nowrap;\n              }\n            }\n            \n            .user-name {\n              margin-left: 10px;\n              font-weight: bold;\n            }\n          }\n          \n          .feedback-actions {\n            display: flex;\n            align-items: center;\n            \n            .feedback-time {\n              color: #909399;\n              font-size: 12px;\n              margin-right: 10px;\n            }\n          }\n        }\n        \n        .feedback-content {\n          margin-bottom: 15px;\n          line-height: 1.5;\n        }\n        \n        .reply-list {\n          background-color: #f5f7fa;\n          border-radius: 4px;\n          padding: 10px;\n          margin-bottom: 15px;\n          \n          .reply-item {\n            padding: 10px;\n            border-bottom: 1px solid #ebeef5;\n            \n            &:last-child {\n              border-bottom: none;\n            }\n            \n            .reply-header {\n              display: flex;\n              justify-content: space-between;\n              align-items: center;\n              margin-bottom: 5px;\n              \n              .user-info {\n                display: flex;\n                align-items: center;\n                \n                .avatar-container {\n                  position: relative;\n                  display: flex;\n                  flex-direction: column;\n                  align-items: center;\n                  \n                  .user-name-above {\n                    font-size: 12px;\n                    color: #606266;\n                    margin-bottom: 5px;\n                    white-space: nowrap;\n                  }\n                }\n                \n                .user-name {\n                  margin-left: 10px;\n                  font-weight: bold;\n                  font-size: 14px;\n                }\n              }\n              \n              .reply-actions {\n                display: flex;\n                align-items: center;\n                \n                .reply-time {\n                  color: #909399;\n                  font-size: 12px;\n                  margin-right: 10px;\n                }\n              }\n            }\n            \n            .reply-content {\n              margin-left: 40px;\n              line-height: 1.5;\n            }\n          }\n        }\n        \n        .reply-form {\n          display: flex;\n          align-items: flex-start;\n          \n          .el-button {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n    \n    .empty-block {\n      padding: 30px 0;\n    }\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}