{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, mergeProps as _mergeProps, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"student-management\"\n};\nconst _hoisted_2 = {\n  class: \"filter-container\"\n};\nconst _hoisted_3 = {\n  class: \"operation-container\"\n};\nconst _hoisted_4 = {\n  class: \"pagination-container\"\n};\nconst _hoisted_5 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_6 = {\n  class: \"dialog-footer\"\n};\nconst _hoisted_7 = {\n  class: \"course-management\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[37] || (_cache[37] = _createElementVNode(\"h1\", null, \"学生管理\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    class: \"filter-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_form, {\n      inline: true,\n      model: $setup.queryParams,\n      class: \"demo-form-inline\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"学生姓名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryParams.realName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.queryParams.realName = $event),\n          placeholder: \"请输入学生姓名\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"学号\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.queryParams.username,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.queryParams.username = $event),\n          placeholder: \"请输入学号\",\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"班级\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, _mergeProps({\n          modelValue: $setup.queryParams.classId,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.queryParams.classId = $event),\n          placeholder: \"请选择班级\",\n          clearable: \"\"\n        }, $setup.safeElementConfig), {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.classList, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.name,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 16 /* FULL_PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.fetchStudents\n        }, {\n          default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_button, {\n          onClick: $setup.resetQuery\n        }, {\n          default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"重置\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleAdd\n    }, {\n      default: _withCtx(() => _cache[23] || (_cache[23] = [_createTextVNode(\"添加学生\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"success\",\n      onClick: $setup.handleAddClass\n    }, {\n      default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"添加班级\")])),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, {\n    class: \"table-card\"\n  }, {\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.studentList,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"username\",\n        label: \"学号\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"realName\",\n        label: \"姓名\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"className\",\n        label: \"班级\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"email\",\n        label: \"邮箱\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"phone\",\n        label: \"手机号\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"状态\",\n        width: \"100\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_switch, {\n          modelValue: scope.row.status,\n          \"onUpdate:modelValue\": $event => scope.row.status = $event,\n          \"active-value\": 1,\n          \"inactive-value\": 0,\n          onChange: $event => $setup.handleStatusChange(scope.row)\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"250\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"small\",\n          onClick: $event => $setup.handleEdit(scope.row)\n        }, {\n          default: _withCtx(() => _cache[25] || (_cache[25] = [_createTextVNode(\"编辑\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"success\",\n          size: \"small\",\n          onClick: $event => $setup.handleManageCourses(scope.row)\n        }, {\n          default: _withCtx(() => _cache[26] || (_cache[26] = [_createTextVNode(\"管理选课\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"danger\",\n          size: \"small\",\n          onClick: $event => $setup.handleDelete(scope.row)\n        }, {\n          default: _withCtx(() => _cache[27] || (_cache[27] = [_createTextVNode(\"删除\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_pagination, {\n      background: \"\",\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total,\n      \"page-size\": $setup.queryParams.pageSize,\n      \"current-page\": $setup.queryParams.pageNum,\n      \"page-sizes\": [10, 20, 50, 100],\n      onCurrentChange: $setup.handleCurrentChange,\n      onSizeChange: $setup.handleSizeChange\n    }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\"])])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑学生对话框 \"), _createVNode(_component_el_dialog, _mergeProps({\n    title: $setup.dialogTitle,\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.dialogVisible = $event),\n    width: \"500px\"\n  }, $setup.safeElementConfig), {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_5, [_createVNode(_component_el_button, {\n      onClick: _cache[11] || (_cache[11] = $event => $setup.dialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[31] || (_cache[31] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.submitStudentForm\n    }, {\n      default: _withCtx(() => _cache[32] || (_cache[32] = [_createTextVNode(\"确定\")])),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.studentForm,\n      rules: $setup.studentRules,\n      ref: \"studentFormRef\",\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"学号\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.studentForm.username,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.studentForm.username = $event),\n          placeholder: \"请输入学号\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"姓名\",\n        prop: \"realName\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.studentForm.realName,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.studentForm.realName = $event),\n          placeholder: \"请输入姓名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $setup.dialogType === 'add' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.studentForm.password,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.studentForm.password = $event),\n          placeholder: \"请输入密码\",\n          \"show-password\": \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.dialogType === 'edit' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"修改密码\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.studentForm.password,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.studentForm.password = $event),\n          placeholder: \"不修改请留空\",\n          \"show-password\": \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _cache[28] || (_cache[28] = _createElementVNode(\"span\", {\n          class: \"tip-text\"\n        }, \"不修改密码请留空\", -1 /* HOISTED */))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"班级\",\n        prop: \"classId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, _mergeProps({\n          modelValue: $setup.studentForm.classId,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.studentForm.classId = $event),\n          placeholder: \"请选择班级\"\n        }, $setup.safeElementConfig), {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.classList, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.name,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 16 /* FULL_PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.studentForm.email,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.studentForm.email = $event),\n          placeholder: \"请输入邮箱\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"手机号\",\n        prop: \"phone\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.studentForm.phone,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.studentForm.phone = $event),\n          placeholder: \"请输入手机号\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"status\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.studentForm.status,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.studentForm.status = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: 1\n          }, {\n            default: _withCtx(() => _cache[29] || (_cache[29] = [_createTextVNode(\"启用\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio, {\n            label: 0\n          }, {\n            default: _withCtx(() => _cache[30] || (_cache[30] = [_createTextVNode(\"禁用\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 16 /* FULL_PROPS */, [\"title\", \"modelValue\"]), _createCommentVNode(\" 添加班级对话框 \"), _createVNode(_component_el_dialog, _mergeProps({\n    title: \"添加班级\",\n    modelValue: $setup.classDialogVisible,\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $setup.classDialogVisible = $event),\n    width: \"500px\"\n  }, $setup.safeElementConfig), {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_6, [_createVNode(_component_el_button, {\n      onClick: _cache[17] || (_cache[17] = $event => $setup.classDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[33] || (_cache[33] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.submitClassForm\n    }, {\n      default: _withCtx(() => _cache[34] || (_cache[34] = [_createTextVNode(\"确定\")])),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.classForm,\n      rules: $setup.classRules,\n      ref: \"classFormRef\",\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"班级名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.classForm.name,\n          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.classForm.name = $event),\n          placeholder: \"请输入班级名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"所属专业\",\n        prop: \"majorId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, _mergeProps({\n          modelValue: $setup.classForm.majorId,\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.classForm.majorId = $event),\n          placeholder: \"请选择所属专业\"\n        }, $setup.safeElementConfig), {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.majorList, item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item.id,\n              label: item.name,\n              value: item.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 16 /* FULL_PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"入学年份\",\n        prop: \"year\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          modelValue: $setup.classForm.year,\n          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $setup.classForm.year = $event),\n          type: \"year\",\n          placeholder: \"选择年份\",\n          format: \"YYYY\",\n          \"value-format\": \"YYYY\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"备注\",\n        prop: \"description\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.classForm.description,\n          \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $setup.classForm.description = $event),\n          type: \"textarea\",\n          placeholder: \"请输入班级描述\",\n          rows: \"3\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 16 /* FULL_PROPS */, [\"modelValue\"]), _createCommentVNode(\" 管理选课对话框 \"), _createVNode(_component_el_dialog, _mergeProps({\n    title: `管理选课 - ${$setup.currentStudent.realName}`,\n    modelValue: $setup.courseDialogVisible,\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $setup.courseDialogVisible = $event),\n    width: \"700px\"\n  }, $setup.safeElementConfig, {\n    \"destroy-on-close\": true,\n    \"close-on-click-modal\": false\n  }), {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_tabs, _mergeProps({\n      modelValue: $setup.courseActiveTab,\n      \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $setup.courseActiveTab = $event)\n    }, $setup.safeTabsConfig, {\n      onTabChange: $setup.handleTabChange\n    }), {\n      default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n        label: \"已选课程\",\n        name: \"selected\"\n      }, {\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          data: $setup.selectedCourses,\n          style: {\n            \"width\": \"100%\"\n          },\n          \"row-key\": \"id\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"课程名称\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"teacherName\",\n            label: \"授课教师\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"classTime\",\n            label: \"上课时间\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"classLocation\",\n            label: \"上课地点\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              type: \"danger\",\n              size: \"small\",\n              onClick: $event => $setup.handleDropCourse(scope.row),\n              loading: $setup.dropLoading\n            }, {\n              default: _withCtx(() => _cache[35] || (_cache[35] = [_createTextVNode(\"退选\")])),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"loading\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.courseLoading]])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"可选课程\",\n        name: \"available\"\n      }, {\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          data: $setup.availableCourses,\n          style: {\n            \"width\": \"100%\"\n          },\n          \"row-key\": \"id\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"课程名称\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"teacherName\",\n            label: \"授课教师\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"classTime\",\n            label: \"上课时间\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"classLocation\",\n            label: \"上课地点\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              type: \"success\",\n              size: \"small\",\n              onClick: $event => $setup.handleSelectCourse(scope.row),\n              loading: $setup.selectLoading\n            }, {\n              default: _withCtx(() => _cache[36] || (_cache[36] = [_createTextVNode(\"选课\")])),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"loading\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.courseLoading]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 16 /* FULL_PROPS */, [\"modelValue\"])])]),\n    _: 1 /* STABLE */\n  }, 16 /* FULL_PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","default","_withCtx","_hoisted_2","_component_el_form","inline","model","$setup","queryParams","_component_el_form_item","label","_component_el_input","modelValue","realName","_cache","$event","placeholder","clearable","_","username","_component_el_select","_mergeProps","classId","safeElementConfig","_Fragment","_renderList","classList","item","_createBlock","_component_el_option","key","id","name","value","_component_el_button","type","onClick","fetchStudents","_createTextVNode","resetQuery","_hoisted_3","handleAdd","handleAddClass","_component_el_table","data","studentList","style","_component_el_table_column","prop","width","scope","_component_el_switch","row","status","onChange","handleStatusChange","size","handleEdit","handleManageCourses","handleDelete","loading","_hoisted_4","_component_el_pagination","background","layout","total","pageSize","pageNum","onCurrentChange","handleCurrentChange","onSizeChange","handleSizeChange","_createCommentVNode","_component_el_dialog","title","dialogTitle","dialogVisible","footer","_hoisted_5","submitStudentForm","studentForm","rules","studentRules","ref","dialogType","password","email","phone","_component_el_radio_group","_component_el_radio","classDialogVisible","_hoisted_6","submitClassForm","classForm","classRules","majorId","majorList","_component_el_date_picker","year","format","description","rows","currentStudent","courseDialogVisible","_hoisted_7","_component_el_tabs","courseActiveTab","safeTabsConfig","onTabChange","handleTabChange","_component_el_tab_pane","selectedCourses","handleDropCourse","dropLoading","courseLoading","availableCourses","handleSelectCourse","selectLoading"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\TCRSystem\\TCRSystem\\frontend\\src\\views\\admin\\StudentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-management\">\r\n    <h1>学生管理</h1>\r\n    \r\n    <el-card class=\"filter-card\">\r\n      <div class=\"filter-container\">\r\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"学生姓名\">\r\n            <el-input v-model=\"queryParams.realName\" placeholder=\"请输入学生姓名\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"学号\">\r\n            <el-input v-model=\"queryParams.username\" placeholder=\"请输入学号\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"班级\">\r\n            <el-select v-model=\"queryParams.classId\" placeholder=\"请选择班级\" clearable v-bind=\"safeElementConfig\">\r\n              <el-option\r\n                v-for=\"item in classList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"fetchStudents\">查询</el-button>\r\n            <el-button @click=\"resetQuery\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      \r\n      <div class=\"operation-container\">\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加学生</el-button>\r\n        <el-button type=\"success\" @click=\"handleAddClass\">添加班级</el-button>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <el-card class=\"table-card\">\r\n      <el-table :data=\"studentList\" style=\"width: 100%\" v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"学号\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"realName\" label=\"姓名\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"className\" label=\"班级\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"手机号\"></el-table-column>\r\n        <el-table-column label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.status\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              @change=\"handleStatusChange(scope.row)\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"250\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button type=\"success\" size=\"small\" @click=\"handleManageCourses(scope.row)\">管理选课</el-button>\r\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          :current-page=\"queryParams.pageNum\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          @current-change=\"handleCurrentChange\"\r\n          @size-change=\"handleSizeChange\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 添加/编辑学生对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"500px\" v-bind=\"safeElementConfig\">\r\n      <el-form :model=\"studentForm\" :rules=\"studentRules\" ref=\"studentFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"学号\" prop=\"username\">\r\n          <el-input v-model=\"studentForm.username\" placeholder=\"请输入学号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"realName\">\r\n          <el-input v-model=\"studentForm.realName\" placeholder=\"请输入姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogType === 'add'\">\r\n          <el-input v-model=\"studentForm.password\" placeholder=\"请输入密码\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"修改密码\" v-if=\"dialogType === 'edit'\">\r\n          <el-input v-model=\"studentForm.password\" placeholder=\"不修改请留空\" show-password></el-input>\r\n          <span class=\"tip-text\">不修改密码请留空</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"classId\">\r\n          <el-select v-model=\"studentForm.classId\" placeholder=\"请选择班级\" v-bind=\"safeElementConfig\">\r\n            <el-option\r\n              v-for=\"item in classList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"studentForm.email\" placeholder=\"请输入邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"studentForm.phone\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"studentForm.status\">\r\n            <el-radio :label=\"1\">启用</el-radio>\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitStudentForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 添加班级对话框 -->\r\n    <el-dialog title=\"添加班级\" v-model=\"classDialogVisible\" width=\"500px\" v-bind=\"safeElementConfig\">\r\n      <el-form :model=\"classForm\" :rules=\"classRules\" ref=\"classFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"班级名称\" prop=\"name\">\r\n          <el-input v-model=\"classForm.name\" placeholder=\"请输入班级名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"所属专业\" prop=\"majorId\">\r\n          <el-select v-model=\"classForm.majorId\" placeholder=\"请选择所属专业\" v-bind=\"safeElementConfig\">\r\n            <el-option\r\n              v-for=\"item in majorList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"入学年份\" prop=\"year\">\r\n          <el-date-picker\r\n            v-model=\"classForm.year\"\r\n            type=\"year\"\r\n            placeholder=\"选择年份\"\r\n            format=\"YYYY\"\r\n            value-format=\"YYYY\"\r\n            style=\"width: 100%\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"description\">\r\n          <el-input\r\n            v-model=\"classForm.description\"\r\n            type=\"textarea\"\r\n            placeholder=\"请输入班级描述\"\r\n            rows=\"3\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"classDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitClassForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 管理选课对话框 -->\r\n    <el-dialog \r\n      :title=\"`管理选课 - ${currentStudent.realName}`\" \r\n      v-model=\"courseDialogVisible\" \r\n      width=\"700px\" \r\n      v-bind=\"safeElementConfig\"\r\n      :destroy-on-close=\"true\"\r\n      :close-on-click-modal=\"false\"\r\n    >\r\n      <div class=\"course-management\">\r\n        <el-tabs \r\n          v-model=\"courseActiveTab\" \r\n          v-bind=\"safeTabsConfig\"\r\n          @tab-change=\"handleTabChange\"\r\n        >\r\n          <el-tab-pane label=\"已选课程\" name=\"selected\">\r\n            <el-table \r\n              :data=\"selectedCourses\" \r\n              style=\"width: 100%\" \r\n              v-loading=\"courseLoading\"\r\n              row-key=\"id\"\r\n            >\r\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\r\n              <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n              <el-table-column prop=\"classTime\" label=\"上课时间\"></el-table-column>\r\n              <el-table-column prop=\"classLocation\" label=\"上课地点\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button type=\"danger\" size=\"small\" @click=\"handleDropCourse(scope.row)\" :loading=\"dropLoading\">退选</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"可选课程\" name=\"available\">\r\n            <el-table \r\n              :data=\"availableCourses\" \r\n              style=\"width: 100%\" \r\n              v-loading=\"courseLoading\"\r\n              row-key=\"id\"\r\n            >\r\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\r\n              <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n              <el-table-column prop=\"classTime\" label=\"上课时间\"></el-table-column>\r\n              <el-table-column prop=\"classLocation\" label=\"上课地点\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button type=\"success\" size=\"small\" @click=\"handleSelectCourse(scope.row)\" :loading=\"selectLoading\">选课</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, nextTick } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\nimport { safeElementConfig, safeTabsConfig } from '@/utils/resizeObserverFix'\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  pageNum: 1,\r\n  pageSize: 10,\r\n  realName: '',\r\n  username: '',\r\n  classId: undefined\r\n})\r\n\r\n// 学生列表\r\nconst studentList = ref([])\r\n// 班级列表\r\nconst classList = ref([])\r\n// 专业列表\r\nconst majorList = ref([])\r\n// 总数据条数\r\nconst total = ref(0)\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 学生对话框相关\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst dialogType = ref('add') // add or edit\r\nconst studentFormRef = ref(null)\r\nconst studentForm = reactive({\r\n  id: undefined,\r\n  username: '',\r\n  realName: '',\r\n  password: '',\r\n  classId: undefined,\r\n  email: '',\r\n  phone: '',\r\n  status: 1,\r\n  role: 0 // 学生角色固定为0\r\n})\r\n\r\n// 学生表单验证规则\r\nconst studentRules = {\r\n  username: [\r\n    { required: true, message: '请输入学号', trigger: 'blur' },\r\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  realName: [\r\n    { required: true, message: '请输入姓名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: dialogType === 'add', message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  classId: [\r\n    { required: true, message: '请选择班级', trigger: 'change' }\r\n  ],\r\n  email: [\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 班级对话框相关\r\nconst classDialogVisible = ref(false)\r\nconst classFormRef = ref(null)\r\nconst classForm = reactive({\r\n  name: '',\r\n  majorId: undefined,\r\n  year: '',\r\n  description: ''\r\n})\r\n\r\n// 班级表单验证规则\r\nconst classRules = {\r\n  name: [\r\n    { required: true, message: '请输入班级名称', trigger: 'blur' }\r\n  ],\r\n  majorId: [\r\n    { required: true, message: '请选择所属专业', trigger: 'change' }\r\n  ],\r\n  year: [\r\n    { required: true, message: '请选择入学年份', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 选课对话框相关\r\nconst courseDialogVisible = ref(false)\r\nconst courseActiveTab = ref('selected')\r\nconst courseLoading = ref(false)\r\nconst currentStudent = ref({})\r\nconst selectedCourses = ref([])\r\nconst availableCourses = ref([])\r\nconst selectLoading = ref(false)\r\nconst dropLoading = ref(false)\r\n\r\n// 获取学生列表\r\nconst fetchStudents = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await axios.get('/api/admin/student/list', {\r\n      params: queryParams\r\n    })\r\n    if (response.data.code === 200) {\r\n      studentList.value = response.data.data.records\r\n      total.value = response.data.data.total\r\n      \r\n      // 确保班级名称正确显示\r\n      studentList.value.forEach(student => {\r\n        if (!student.className && student.classId) {\r\n          const classInfo = classList.value.find(c => c.id === student.classId)\r\n          if (classInfo) {\r\n            student.className = classInfo.name\r\n          }\r\n        }\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取学生列表失败:', error)\r\n    ElMessage.error('获取学生列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取班级列表\r\nconst fetchClasses = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/class/list')\r\n    if (response.data.code === 200) {\r\n      classList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取班级列表失败:', error)\r\n    ElMessage.error('获取班级列表失败')\r\n  }\r\n}\r\n\r\n// 获取专业列表\r\nconst fetchMajors = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/major/list')\r\n    if (response.data.code === 200) {\r\n      majorList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取专业列表失败:', error)\r\n    ElMessage.error('获取专业列表失败')\r\n  }\r\n}\r\n\r\n// 重置查询条件\r\nconst resetQuery = () => {\r\n  queryParams.realName = ''\r\n  queryParams.username = ''\r\n  queryParams.classId = undefined\r\n  fetchStudents()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  queryParams.pageNum = val\r\n  fetchStudents()\r\n}\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (val) => {\r\n  queryParams.pageSize = val\r\n  fetchStudents()\r\n}\r\n\r\n// 处理添加学生\r\nconst handleAdd = () => {\r\n  dialogType.value = 'add'\r\n  dialogTitle.value = '添加学生'\r\n  studentForm.id = undefined\r\n  studentForm.username = ''\r\n  studentForm.realName = ''\r\n  studentForm.password = ''\r\n  studentForm.classId = undefined\r\n  studentForm.email = ''\r\n  studentForm.phone = ''\r\n  studentForm.status = 1\r\n  studentForm.role = 0\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 处理编辑学生\r\nconst handleEdit = (row) => {\r\n  dialogType.value = 'edit'\r\n  dialogTitle.value = '编辑学生'\r\n  studentForm.id = row.id\r\n  studentForm.username = row.username\r\n  studentForm.realName = row.realName\r\n  studentForm.password = '' // 清空密码字段\r\n  studentForm.classId = row.classId\r\n  studentForm.email = row.email\r\n  studentForm.phone = row.phone\r\n  studentForm.status = row.status\r\n  studentForm.role = row.role\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 处理删除学生\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm('确定要删除该学生吗？', '提示', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    type: 'warning'\r\n  }).then(async () => {\r\n    try {\r\n      const response = await axios.delete(`/api/admin/student/${row.id}`)\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('删除成功')\r\n        fetchStudents()\r\n      } else {\r\n        ElMessage.error(response.data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除学生失败:', error)\r\n      ElMessage.error('删除学生失败')\r\n    }\r\n  }).catch(() => {})\r\n}\r\n\r\n// 处理状态变化\r\nconst handleStatusChange = async (row) => {\r\n  try {\r\n    const response = await axios.put('/api/admin/student/status', {\r\n      id: row.id,\r\n      status: row.status\r\n    })\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(`${row.status === 1 ? '启用' : '禁用'}成功`)\r\n    } else {\r\n      ElMessage.error(response.data.message || '操作失败')\r\n      // 恢复原状态\r\n      row.status = row.status === 1 ? 0 : 1\r\n    }\r\n  } catch (error) {\r\n    console.error('修改状态失败:', error)\r\n    ElMessage.error('修改状态失败')\r\n    // 恢复原状态\r\n    row.status = row.status === 1 ? 0 : 1\r\n  }\r\n}\r\n\r\n// 提交学生表单\r\nconst submitStudentForm = () => {\r\n  studentFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        let response\r\n        if (dialogType.value === 'add') {\r\n          response = await axios.post('/api/admin/student', studentForm)\r\n        } else {\r\n          response = await axios.put('/api/admin/student', studentForm)\r\n        }\r\n        \r\n        if (response.data.code === 200) {\r\n          ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功')\r\n          dialogVisible.value = false\r\n          fetchStudents()\r\n        } else {\r\n          ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(dialogType.value === 'add' ? '添加学生失败:' : '修改学生失败:', error)\r\n        ElMessage.error(dialogType.value === 'add' ? '添加学生失败' : '修改学生失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理添加班级\r\nconst handleAddClass = () => {\r\n  classForm.name = ''\r\n  classForm.majorId = undefined\r\n  classForm.year = ''\r\n  classForm.description = ''\r\n  classDialogVisible.value = true\r\n}\r\n\r\n// 提交班级表单\r\nconst submitClassForm = () => {\r\n  classFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const response = await axios.post('/api/admin/class', classForm)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('添加班级成功')\r\n          classDialogVisible.value = false\r\n          fetchClasses()\r\n        } else {\r\n          ElMessage.error(response.data.message || '添加班级失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('添加班级失败:', error)\r\n        ElMessage.error('添加班级失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理管理选课\r\nconst handleManageCourses = async (row) => {\r\n  currentStudent.value = row\r\n  courseDialogVisible.value = true\r\n  courseActiveTab.value = 'selected'\r\n  await fetchStudentCourses(row.id)\r\n}\r\n\r\n// 获取学生课程\r\nconst fetchStudentCourses = async (studentId) => {\r\n  courseLoading.value = true\r\n  try {\r\n    // 获取已选课程\r\n    const selectedResponse = await axios.get(`/api/student/course/${studentId}`)\r\n    if (selectedResponse.data.code === 200) {\r\n      selectedCourses.value = selectedResponse.data.data || []\r\n    }\r\n    \r\n    // 获取可选课程\r\n    const availableResponse = await axios.get('/api/admin/course/available', {\r\n      params: { studentId }\r\n    })\r\n    if (availableResponse.data.code === 200) {\r\n      availableCourses.value = availableResponse.data.data || []\r\n    }\r\n    \r\n    // 强制下一帧更新UI\r\n    await nextTick()\r\n    window.dispatchEvent(new Event('resize'))\r\n  } catch (error) {\r\n    console.error('获取学生课程失败:', error)\r\n    ElMessage.error('获取学生课程失败')\r\n  } finally {\r\n    courseLoading.value = false\r\n  }\r\n}\r\n\r\n// 处理标签页切换\r\nconst handleTabChange = () => {\r\n  // 强制刷新表格\r\n  nextTick(() => {\r\n    window.dispatchEvent(new Event('resize'))\r\n  })\r\n}\r\n\r\n// 处理选课\r\nconst handleSelectCourse = async (course) => {\r\n  selectLoading.value = true\r\n  try {\r\n    const response = await axios.post('/api/admin/student/course/select', {\r\n      studentId: currentStudent.value.id,\r\n      courseId: course.id\r\n    })\r\n    \r\n    if (response.data.code === 200) {\r\n      ElMessage.success('选课成功')\r\n      await fetchStudentCourses(currentStudent.value.id)\r\n    } else {\r\n      ElMessage.error(response.data.message || '选课失败')\r\n      console.error('选课返回错误:', response.data)\r\n    }\r\n  } catch (error) {\r\n    console.error('选课异常:', error)\r\n    ElMessage.error('选课失败，系统异常')\r\n    \r\n    // 尝试重新加载课程数据\r\n    await fetchStudentCourses(currentStudent.value.id)\r\n  } finally {\r\n    selectLoading.value = false\r\n  }\r\n}\r\n\r\n// 处理退课\r\nconst handleDropCourse = async (course) => {\r\n  dropLoading.value = true\r\n  try {\r\n    const response = await axios.delete(`/api/admin/course-management/${course.id}/student/${currentStudent.value.id}`)\r\n    \r\n    if (response.data.code === 200) {\r\n      ElMessage.success('退课成功')\r\n      await fetchStudentCourses(currentStudent.value.id)\r\n    } else {\r\n      ElMessage.error(response.data.message || '退课失败')\r\n      console.error('退课返回错误:', response.data)\r\n    }\r\n  } catch (error) {\r\n    console.error('退课异常:', error)\r\n    ElMessage.error('退课失败，系统异常')\r\n    \r\n    // 尝试重新加载课程数据\r\n    await fetchStudentCourses(currentStudent.value.id)\r\n  } finally {\r\n    dropLoading.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchStudents()\r\n  fetchClasses()\r\n  fetchMajors()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.student-management {\r\n  h1 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .operation-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .table-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  .course-management {\r\n    .el-tabs {\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    /* 解决标签页切换时的ResizeObserver错误 */\r\n    :deep(.el-tabs__content) {\r\n      min-height: 350px;\r\n      transform: translateZ(0);\r\n      contain: layout style;\r\n    }\r\n    \r\n    /* 为表格应用特殊的CSS修复 */\r\n    :deep(.el-table) {\r\n      overflow: hidden !important;\r\n      transform: translateZ(0);\r\n      min-height: 300px;\r\n      max-height: 450px;\r\n    }\r\n    \r\n    /* 确保表格内容能够滚动 */\r\n    :deep(.el-table__body-wrapper) {\r\n      overflow-y: auto !important;\r\n      min-height: 250px;\r\n    }\r\n  }\r\n  \r\n  .tip-text {\r\n    color: #909399;\r\n    font-size: 12px;\r\n    margin-top: 5px;\r\n    display: block;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}