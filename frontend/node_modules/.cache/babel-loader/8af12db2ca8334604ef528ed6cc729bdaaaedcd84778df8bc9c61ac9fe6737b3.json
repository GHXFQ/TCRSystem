{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\n\n// 状态变量\nconst defaultAvatar = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png';\n\n// 当前用户ID\n\nexport default {\n  __name: 'Feedback',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const feedbackList = ref([]);\n    const courseList = ref([]);\n    const total = ref(0);\n    const feedbackFormRef = ref(null);\n    const currentUserId = ref(null);\n\n    // 查询参数\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      courseId: undefined\n    });\n\n    // 反馈表单\n    const feedbackForm = reactive({\n      content: '',\n      courseId: computed(() => queryParams.courseId)\n    });\n\n    // 回复内容\n    const replyContents = reactive({});\n\n    // 表单校验规则\n    const feedbackRules = {\n      content: [{\n        required: true,\n        message: '请输入反馈内容',\n        trigger: 'blur'\n      }, {\n        min: 5,\n        max: 500,\n        message: '长度在 5 到 500 个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 计算属性：当前选中的课程名称\n    const selectedCourseName = computed(() => {\n      if (!queryParams.courseId) return '';\n      const course = courseList.value.find(c => c.id === queryParams.courseId);\n      return course ? course.name : '';\n    });\n\n    // 获取当前用户信息\n    const getCurrentUser = () => {\n      try {\n        const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        currentUserId.value = userInfo.id;\n        console.log('当前用户ID:', currentUserId.value);\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n      }\n    };\n\n    // 获取用户显示名称\n    const getUserDisplayName = item => {\n      // 调试\n      if (item.id && !item.userName) {\n        console.warn(`ID为${item.id}的${item.parentId ? '回复' : '反馈'}没有用户名`, item);\n      }\n      return item.userName || '匿名用户';\n    };\n\n    // 格式化日期时间\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return dateTimeStr;\n      }\n    };\n\n    // 判断是否可以删除反馈或回复\n    const canDelete = item => {\n      return item.userId === currentUserId.value;\n    };\n\n    // 删除反馈或回复\n    const deleteFeedback = async id => {\n      try {\n        await ElMessageBox.confirm('确定要删除这条内容吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await axios.delete(`/api/feedback/${id}`);\n        if (response.data.code === 200) {\n          ElMessage.success('删除成功');\n          fetchFeedbackList(); // 刷新列表\n        } else {\n          ElMessage.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除失败:', error);\n          ElMessage.error('删除失败');\n        }\n      }\n    };\n\n    // 获取课程列表\n    const fetchCourseList = async () => {\n      try {\n        const response = await axios.get('/api/student/courses');\n        courseList.value = response.data.data || [];\n\n        // 如果有课程，默认选择第一个\n        if (courseList.value.length > 0 && !queryParams.courseId) {\n          queryParams.courseId = courseList.value[0].id;\n          await fetchFeedbackList();\n        }\n      } catch (error) {\n        console.error('获取课程列表失败:', error);\n        ElMessage.error('获取课程列表失败');\n      }\n    };\n\n    // 获取反馈列表\n    const fetchFeedbackList = async () => {\n      if (!queryParams.courseId) {\n        feedbackList.value = [];\n        total.value = 0;\n        return;\n      }\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/feedback/list', {\n          params: queryParams\n        });\n        // 打印API返回的原始数据\n        console.log('反馈列表原始数据:', response.data.data);\n        feedbackList.value = response.data.data.records || [];\n        // 打印处理后的数据\n        console.log('反馈列表处理后数据:', feedbackList.value);\n\n        // 检查所有反馈的数据\n        if (feedbackList.value.length > 0) {\n          feedbackList.value.forEach((feedback, index) => {\n            console.log(`第${index + 1}条反馈 ID:${feedback.id}, 用户ID:${feedback.userId}, 用户名:${feedback.userName}`);\n\n            // 检查回复数据\n            if (feedback.children && feedback.children.length > 0) {\n              feedback.children.forEach((reply, replyIndex) => {\n                console.log(`  - 回复${replyIndex + 1} ID:${reply.id}, 用户ID:${reply.userId}, 用户名:${reply.userName}`);\n              });\n            }\n          });\n        }\n        total.value = response.data.data.total || 0;\n      } catch (error) {\n        console.error('获取反馈列表失败:', error);\n        ElMessage.error('获取反馈列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 重置查询条件\n    const resetQuery = () => {\n      queryParams.courseId = undefined;\n      feedbackList.value = [];\n      total.value = 0;\n    };\n\n    // 处理课程变化\n    const handleCourseChange = () => {\n      fetchFeedbackList();\n    };\n\n    // 处理页码变化\n    const handleCurrentChange = val => {\n      queryParams.pageNum = val;\n      fetchFeedbackList();\n    };\n\n    // 处理每页条数变化\n    const handleSizeChange = val => {\n      queryParams.pageSize = val;\n      fetchFeedbackList();\n    };\n\n    // 提交反馈\n    const submitFeedback = () => {\n      if (!queryParams.courseId) {\n        ElMessage.warning('请先选择课程');\n        return;\n      }\n      feedbackFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            // 这里应该调用API提交反馈\n            const response = await axios.post('/api/feedback/add', {\n              content: feedbackForm.content,\n              courseId: queryParams.courseId\n            });\n            if (response.data.code === 200) {\n              ElMessage.success('反馈提交成功');\n              feedbackForm.content = '';\n              fetchFeedbackList();\n            } else {\n              ElMessage.error(response.data.message || '反馈提交失败');\n            }\n          } catch (error) {\n            console.error('提交反馈失败:', error);\n            ElMessage.error('提交反馈失败');\n          }\n        }\n      });\n    };\n\n    // 提交回复\n    const submitReply = async parentId => {\n      const content = replyContents[parentId];\n      if (!content || content.trim() === '') {\n        ElMessage.warning('请输入回复内容');\n        return;\n      }\n      try {\n        // 这里应该调用API提交回复\n        const response = await axios.post('/api/feedback/reply', {\n          content,\n          courseId: queryParams.courseId,\n          parentId\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('回复提交成功');\n          replyContents[parentId] = '';\n          fetchFeedbackList();\n        } else {\n          ElMessage.error(response.data.message || '回复提交失败');\n        }\n      } catch (error) {\n        console.error('提交回复失败:', error);\n        ElMessage.error('提交回复失败');\n      }\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      getCurrentUser();\n      fetchCourseList();\n    });\n    const __returned__ = {\n      loading,\n      feedbackList,\n      courseList,\n      total,\n      feedbackFormRef,\n      defaultAvatar,\n      currentUserId,\n      queryParams,\n      feedbackForm,\n      replyContents,\n      feedbackRules,\n      selectedCourseName,\n      getCurrentUser,\n      getUserDisplayName,\n      formatDateTime,\n      canDelete,\n      deleteFeedback,\n      fetchCourseList,\n      fetchFeedbackList,\n      resetQuery,\n      handleCourseChange,\n      handleCurrentChange,\n      handleSizeChange,\n      submitFeedback,\n      submitReply,\n      ref,\n      reactive,\n      onMounted,\n      computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","ElMessage","ElMessageBox","axios","defaultAvatar","loading","feedbackList","courseList","total","feedbackFormRef","currentUserId","queryParams","pageNum","pageSize","courseId","undefined","feedbackForm","content","replyContents","feedbackRules","required","message","trigger","min","max","selectedCourseName","course","value","find","c","id","name","getCurrentUser","userInfo","JSON","parse","localStorage","getItem","console","log","error","getUserDisplayName","item","userName","warn","parentId","formatDateTime","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","canDelete","userId","deleteFeedback","confirm","confirmButtonText","cancelButtonText","type","response","delete","data","code","success","fetchFeedbackList","fetchCourseList","get","length","params","records","forEach","feedback","index","children","reply","replyIndex","resetQuery","handleCourseChange","handleCurrentChange","val","handleSizeChange","submitFeedback","warning","validate","valid","post","submitReply","trim"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/student/Feedback.vue"],"sourcesContent":["<template>\n  <div class=\"feedback-container\">\n    <h1>课程反馈</h1>\n    \n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"filter-form\">\n        <el-form-item label=\"课程\">\n          <el-select \n            v-model=\"queryParams.courseId\" \n            placeholder=\"选择课程\" \n            clearable \n            @change=\"handleCourseChange\"\n            style=\"width: 220px;\"\n            filterable\n          >\n            <el-option\n              v-for=\"course in courseList\"\n              :key=\"course.id\"\n              :label=\"course.name\"\n              :value=\"course.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchFeedbackList\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      \n      <!-- 显示当前筛选条件 -->\n      <div class=\"filter-info\" v-if=\"selectedCourseName\">\n        <span>当前筛选: </span>\n        <el-tag v-if=\"selectedCourseName\" type=\"info\" class=\"filter-tag\">\n          课程: {{ selectedCourseName }}\n        </el-tag>\n      </div>\n    </el-card>\n    \n    <el-card v-if=\"queryParams.courseId\" class=\"add-feedback-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>发表反馈</span>\n        </div>\n      </template>\n      <el-form ref=\"feedbackFormRef\" :model=\"feedbackForm\" :rules=\"feedbackRules\">\n        <el-form-item prop=\"content\">\n          <el-input\n            v-model=\"feedbackForm.content\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入您的反馈或问题...\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitFeedback\">提交反馈</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <el-card v-if=\"queryParams.courseId\" class=\"feedback-list-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>反馈列表</span>\n        </div>\n      </template>\n      \n      <div v-loading=\"loading\">\n        <div v-if=\"feedbackList.length === 0\" class=\"empty-block\">\n          <el-empty description=\"暂无反馈数据\"></el-empty>\n        </div>\n        \n        <div v-else class=\"feedback-list\">\n          <div v-for=\"item in feedbackList\" :key=\"item.id\" class=\"feedback-item\">\n            <div class=\"feedback-header\">\n              <div class=\"user-info\">\n                <div class=\"avatar-container\">\n                  <div class=\"user-name-above\">{{ getUserDisplayName(item) }}</div>\n                  <el-avatar :size=\"40\" :src=\"item.userAvatar || defaultAvatar\"></el-avatar>\n                </div>\n              </div>\n              <div class=\"feedback-actions\">\n                <span class=\"feedback-time\">{{ formatDateTime(item.createTime) }}</span>\n                <el-button \n                  v-if=\"canDelete(item)\" \n                  type=\"danger\" \n                  size=\"small\" \n                  icon=\"Delete\" \n                  circle \n                  plain\n                  @click=\"deleteFeedback(item.id)\"\n                ></el-button>\n              </div>\n            </div>\n            <div class=\"feedback-content\">{{ item.content }}</div>\n            \n            <!-- 回复列表 -->\n            <div v-if=\"item.children && item.children.length > 0\" class=\"reply-list\">\n              <div v-for=\"reply in item.children\" :key=\"reply.id\" class=\"reply-item\">\n                <div class=\"reply-header\">\n                  <div class=\"user-info\">\n                    <div class=\"avatar-container\">\n                      <div class=\"user-name-above\">{{ getUserDisplayName(reply) }}</div>\n                      <el-avatar :size=\"30\" :src=\"reply.userAvatar || defaultAvatar\"></el-avatar>\n                    </div>\n                  </div>\n                  <div class=\"reply-actions\">\n                    <span class=\"reply-time\">{{ formatDateTime(reply.createTime) }}</span>\n                    <el-button \n                      v-if=\"canDelete(reply)\" \n                      type=\"danger\" \n                      size=\"small\" \n                      icon=\"Delete\" \n                      circle \n                      plain\n                      @click=\"deleteFeedback(reply.id)\"\n                    ></el-button>\n                  </div>\n                </div>\n                <div class=\"reply-content\">{{ reply.content }}</div>\n              </div>\n            </div>\n            \n            <!-- 回复表单 -->\n            <div class=\"reply-form\">\n              <el-input\n                v-model=\"replyContents[item.id]\"\n                type=\"textarea\"\n                :rows=\"2\"\n                placeholder=\"回复该反馈...\"\n              />\n              <el-button type=\"primary\" size=\"small\" @click=\"submitReply(item.id)\">回复</el-button>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"pagination-container\">\n          <el-pagination\n            :current-page=\"queryParams.pageNum\"\n            :page-size=\"queryParams.pageSize\"\n            :page-sizes=\"[5, 10, 20, 50]\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"total\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport axios from 'axios'\n\n// 状态变量\nconst loading = ref(false)\nconst feedbackList = ref([])\nconst courseList = ref([])\nconst total = ref(0)\nconst feedbackFormRef = ref(null)\nconst defaultAvatar = 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\n\n// 当前用户ID\nconst currentUserId = ref(null)\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  courseId: undefined\n})\n\n// 反馈表单\nconst feedbackForm = reactive({\n  content: '',\n  courseId: computed(() => queryParams.courseId)\n})\n\n// 回复内容\nconst replyContents = reactive({})\n\n// 表单校验规则\nconst feedbackRules = {\n  content: [\n    { required: true, message: '请输入反馈内容', trigger: 'blur' },\n    { min: 5, max: 500, message: '长度在 5 到 500 个字符', trigger: 'blur' }\n  ]\n}\n\n// 计算属性：当前选中的课程名称\nconst selectedCourseName = computed(() => {\n  if (!queryParams.courseId) return ''\n  const course = courseList.value.find(c => c.id === queryParams.courseId)\n  return course ? course.name : ''\n})\n\n// 获取当前用户信息\nconst getCurrentUser = () => {\n  try {\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\n    currentUserId.value = userInfo.id\n    console.log('当前用户ID:', currentUserId.value)\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n  }\n}\n\n// 获取用户显示名称\nconst getUserDisplayName = (item) => {\n  // 调试\n  if (item.id && !item.userName) {\n    console.warn(`ID为${item.id}的${item.parentId ? '回复' : '反馈'}没有用户名`, item)\n  }\n  \n  return item.userName || '匿名用户'\n}\n\n// 格式化日期时间\nconst formatDateTime = (dateTimeStr) => {\n  if (!dateTimeStr) return ''\n  \n  try {\n    const date = new Date(dateTimeStr)\n    return date.toLocaleString('zh-CN', { \n      year: 'numeric', \n      month: '2-digit', \n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  } catch (error) {\n    console.error('日期格式化错误:', error)\n    return dateTimeStr\n  }\n}\n\n// 判断是否可以删除反馈或回复\nconst canDelete = (item) => {\n  return item.userId === currentUserId.value\n}\n\n// 删除反馈或回复\nconst deleteFeedback = async (id) => {\n  try {\n    await ElMessageBox.confirm('确定要删除这条内容吗？', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    })\n    \n    const response = await axios.delete(`/api/feedback/${id}`)\n    if (response.data.code === 200) {\n      ElMessage.success('删除成功')\n      fetchFeedbackList() // 刷新列表\n    } else {\n      ElMessage.error(response.data.message || '删除失败')\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      console.error('删除失败:', error)\n      ElMessage.error('删除失败')\n    }\n  }\n}\n\n// 获取课程列表\nconst fetchCourseList = async () => {\n  try {\n    const response = await axios.get('/api/student/courses')\n    courseList.value = response.data.data || []\n    \n    // 如果有课程，默认选择第一个\n    if (courseList.value.length > 0 && !queryParams.courseId) {\n      queryParams.courseId = courseList.value[0].id\n      await fetchFeedbackList()\n    }\n  } catch (error) {\n    console.error('获取课程列表失败:', error)\n    ElMessage.error('获取课程列表失败')\n  }\n}\n\n// 获取反馈列表\nconst fetchFeedbackList = async () => {\n  if (!queryParams.courseId) {\n    feedbackList.value = []\n    total.value = 0\n    return\n  }\n  \n  loading.value = true\n  try {\n    const response = await axios.get('/api/feedback/list', {\n      params: queryParams\n    })\n    // 打印API返回的原始数据\n    console.log('反馈列表原始数据:', response.data.data);\n    \n    feedbackList.value = response.data.data.records || []\n    // 打印处理后的数据\n    console.log('反馈列表处理后数据:', feedbackList.value);\n    \n    // 检查所有反馈的数据\n    if (feedbackList.value.length > 0) {\n      feedbackList.value.forEach((feedback, index) => {\n        console.log(`第${index+1}条反馈 ID:${feedback.id}, 用户ID:${feedback.userId}, 用户名:${feedback.userName}`);\n        \n        // 检查回复数据\n        if (feedback.children && feedback.children.length > 0) {\n          feedback.children.forEach((reply, replyIndex) => {\n            console.log(`  - 回复${replyIndex+1} ID:${reply.id}, 用户ID:${reply.userId}, 用户名:${reply.userName}`);\n          });\n        }\n      });\n    }\n    \n    total.value = response.data.data.total || 0\n  } catch (error) {\n    console.error('获取反馈列表失败:', error)\n    ElMessage.error('获取反馈列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 重置查询条件\nconst resetQuery = () => {\n  queryParams.courseId = undefined\n  feedbackList.value = []\n  total.value = 0\n}\n\n// 处理课程变化\nconst handleCourseChange = () => {\n  fetchFeedbackList()\n}\n\n// 处理页码变化\nconst handleCurrentChange = (val) => {\n  queryParams.pageNum = val\n  fetchFeedbackList()\n}\n\n// 处理每页条数变化\nconst handleSizeChange = (val) => {\n  queryParams.pageSize = val\n  fetchFeedbackList()\n}\n\n// 提交反馈\nconst submitFeedback = () => {\n  if (!queryParams.courseId) {\n    ElMessage.warning('请先选择课程')\n    return\n  }\n  \n  feedbackFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        // 这里应该调用API提交反馈\n        const response = await axios.post('/api/feedback/add', {\n          content: feedbackForm.content,\n          courseId: queryParams.courseId\n        })\n        \n        if (response.data.code === 200) {\n          ElMessage.success('反馈提交成功')\n          feedbackForm.content = ''\n          fetchFeedbackList()\n        } else {\n          ElMessage.error(response.data.message || '反馈提交失败')\n        }\n      } catch (error) {\n        console.error('提交反馈失败:', error)\n        ElMessage.error('提交反馈失败')\n      }\n    }\n  })\n}\n\n// 提交回复\nconst submitReply = async (parentId) => {\n  const content = replyContents[parentId]\n  if (!content || content.trim() === '') {\n    ElMessage.warning('请输入回复内容')\n    return\n  }\n  \n  try {\n    // 这里应该调用API提交回复\n    const response = await axios.post('/api/feedback/reply', {\n      content,\n      courseId: queryParams.courseId,\n      parentId\n    })\n    \n    if (response.data.code === 200) {\n      ElMessage.success('回复提交成功')\n      replyContents[parentId] = ''\n      fetchFeedbackList()\n    } else {\n      ElMessage.error(response.data.message || '回复提交失败')\n    }\n  } catch (error) {\n    console.error('提交回复失败:', error)\n    ElMessage.error('提交回复失败')\n  }\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  getCurrentUser()\n  fetchCourseList()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.feedback-container {\n  h1 {\n    margin-bottom: 20px;\n  }\n  \n  .filter-card {\n    margin-bottom: 20px;\n    \n    .filter-info {\n      margin-top: 10px;\n      font-size: 14px;\n      color: #606266;\n      \n      .filter-tag {\n        margin-left: 8px;\n        margin-right: 8px;\n      }\n    }\n  }\n  \n  .add-feedback-card {\n    margin-bottom: 20px;\n  }\n  \n  .feedback-list-card {\n    .card-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    \n    .feedback-list {\n      .feedback-item {\n        padding: 15px;\n        border-bottom: 1px solid #ebeef5;\n        \n        &:last-child {\n          border-bottom: none;\n        }\n        \n        .feedback-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 10px;\n          \n          .user-info {\n            display: flex;\n            align-items: center;\n            \n            .avatar-container {\n              position: relative;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              \n              .user-name-above {\n                font-size: 12px;\n                color: #606266;\n                margin-bottom: 5px;\n                white-space: nowrap;\n              }\n            }\n            \n            .user-name {\n              margin-left: 10px;\n              font-weight: bold;\n            }\n          }\n          \n          .feedback-actions {\n            display: flex;\n            align-items: center;\n            \n            .feedback-time {\n              color: #909399;\n              font-size: 12px;\n              margin-right: 10px;\n            }\n          }\n        }\n        \n        .feedback-content {\n          margin-bottom: 15px;\n          line-height: 1.5;\n        }\n        \n        .reply-list {\n          background-color: #f5f7fa;\n          border-radius: 4px;\n          padding: 10px;\n          margin-bottom: 15px;\n          \n          .reply-item {\n            padding: 10px;\n            border-bottom: 1px solid #ebeef5;\n            \n            &:last-child {\n              border-bottom: none;\n            }\n            \n            .reply-header {\n              display: flex;\n              justify-content: space-between;\n              align-items: center;\n              margin-bottom: 5px;\n              \n              .user-info {\n                display: flex;\n                align-items: center;\n                \n                .avatar-container {\n                  position: relative;\n                  display: flex;\n                  flex-direction: column;\n                  align-items: center;\n                  \n                  .user-name-above {\n                    font-size: 12px;\n                    color: #606266;\n                    margin-bottom: 5px;\n                    white-space: nowrap;\n                  }\n                }\n                \n                .user-name {\n                  margin-left: 10px;\n                  font-weight: bold;\n                  font-size: 14px;\n                }\n              }\n              \n              .reply-actions {\n                display: flex;\n                align-items: center;\n                \n                .reply-time {\n                  color: #909399;\n                  font-size: 12px;\n                  margin-right: 10px;\n                }\n              }\n            }\n            \n            .reply-content {\n              margin-left: 40px;\n              line-height: 1.5;\n            }\n          }\n        }\n        \n        .reply-form {\n          display: flex;\n          align-items: flex-start;\n          \n          .el-button {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n    \n    .empty-block {\n      padding: 30px 0;\n    }\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}