{"ast":null,"code":"import { ref, reactive, onMounted, nextTick } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport { safeElementConfig } from '@/utils/resizeObserverFix';\n\n// 查询参数\n\nexport default {\n  __name: 'CourseManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      name: '',\n      teacherId: null,\n      status: null\n    });\n\n    // 课程列表\n    const courseList = ref([]);\n    // 教师列表\n    const teacherList = ref([]);\n    // 总数据条数\n    const total = ref(0);\n    // 加载状态\n    const loading = ref(false);\n\n    // 对话框相关\n    const dialogVisible = ref(false);\n    const dialogTitle = ref('');\n    const dialogType = ref('add'); // add or edit\n    const courseFormRef = ref(null);\n    const courseForm = reactive({\n      id: undefined,\n      name: '',\n      description: '',\n      teacherId: null,\n      classTime: '',\n      classLocation: '',\n      endTime: null,\n      endForm: 0,\n      endLocation: '',\n      status: 1\n    });\n\n    // 课程表单验证规则\n    const courseRules = {\n      name: [{\n        required: true,\n        message: '请输入课程名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 100,\n        message: '长度在 2 到 100 个字符',\n        trigger: 'blur'\n      }],\n      teacherId: [{\n        required: true,\n        message: '请选择任课教师',\n        trigger: 'change'\n      }],\n      classTime: [{\n        required: true,\n        message: '请输入上课时间',\n        trigger: 'blur'\n      }],\n      classLocation: [{\n        required: true,\n        message: '请输入上课地点',\n        trigger: 'blur'\n      }],\n      endTime: [{\n        required: true,\n        message: '请选择结课时间',\n        trigger: 'change'\n      }],\n      endLocation: [{\n        required: true,\n        message: '请输入考试地点',\n        trigger: 'blur'\n      }]\n    };\n\n    // 课程详情对话框\n    const detailDialogVisible = ref(false);\n    const courseDetail = ref(null);\n\n    // 获取课程列表\n    const fetchCourses = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/admin/course-management/list', {\n          params: queryParams\n        });\n        if (response.data.code === 200) {\n          courseList.value = response.data.data.records;\n          total.value = response.data.data.total;\n        }\n      } catch (error) {\n        console.error('获取课程列表失败:', error);\n        ElMessage.error('获取课程列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取教师列表\n    const fetchTeachers = async () => {\n      try {\n        const response = await axios.get('/api/admin/course-management/available-teachers');\n        if (response.data.code === 200) {\n          teacherList.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取教师列表失败:', error);\n        ElMessage.error('获取教师列表失败');\n      }\n    };\n\n    // 重置查询条件\n    const resetQuery = () => {\n      queryParams.name = '';\n      queryParams.teacherId = null;\n      queryParams.status = null;\n      fetchCourses();\n    };\n\n    // 处理页码变化\n    const handleCurrentChange = val => {\n      queryParams.pageNum = val;\n      fetchCourses();\n    };\n\n    // 处理每页条数变化\n    const handleSizeChange = val => {\n      queryParams.pageSize = val;\n      fetchCourses();\n    };\n\n    // 处理添加课程\n    const handleAdd = () => {\n      dialogType.value = 'add';\n      dialogTitle.value = '添加课程';\n      courseForm.id = undefined;\n      courseForm.name = '';\n      courseForm.description = '';\n      courseForm.teacherId = null;\n      courseForm.classTime = '';\n      courseForm.classLocation = '';\n      courseForm.endTime = null;\n      courseForm.endForm = 0;\n      courseForm.endLocation = '';\n      courseForm.status = 1;\n\n      // 使用nextTick确保DOM已更新\n      nextTick(() => {\n        dialogVisible.value = true;\n        // 等待DOM更新后再重置表单\n        setTimeout(() => {\n          courseFormRef.value && courseFormRef.value.resetFields();\n        }, 0);\n      });\n    };\n\n    // 处理编辑课程\n    const handleEdit = row => {\n      dialogType.value = 'edit';\n      dialogTitle.value = '编辑课程';\n      courseForm.id = row.id;\n      courseForm.name = row.name;\n      courseForm.description = row.description;\n      courseForm.teacherId = row.teacherId;\n      courseForm.classTime = row.classTime;\n      courseForm.classLocation = row.classLocation;\n      courseForm.endTime = row.endTime ? new Date(row.endTime) : null;\n      courseForm.endForm = row.endForm;\n      courseForm.endLocation = row.endLocation;\n      courseForm.status = row.status;\n\n      // 使用nextTick确保DOM已更新\n      nextTick(() => {\n        dialogVisible.value = true;\n      });\n    };\n\n    // 处理查看详情\n    const handleDetail = async row => {\n      try {\n        loading.value = true;\n        const response = await axios.get(`/api/admin/course-management/${row.id}/detail`);\n        if (response.data.code === 200) {\n          // 先清空旧数据，避免显示上一次的内容\n          courseDetail.value = null;\n\n          // 使用nextTick确保DOM已更新\n          await nextTick();\n\n          // 设置新数据\n          courseDetail.value = response.data.data;\n          detailDialogVisible.value = true;\n        }\n      } catch (error) {\n        console.error('获取课程详情失败:', error);\n        ElMessage.error('获取课程详情失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 处理删除课程\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除课程\"${row.name}\"吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await axios.delete(`/api/admin/course-management/${row.id}`);\n          if (response.data.code === 200) {\n            ElMessage.success('删除成功');\n            fetchCourses();\n          } else {\n            ElMessage.error(response.data.message || '删除失败');\n          }\n        } catch (error) {\n          console.error('删除课程失败:', error);\n          ElMessage.error('删除课程失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 提交课程表单\n    const submitCourseForm = () => {\n      courseFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            let response;\n            if (dialogType.value === 'add') {\n              response = await axios.post('/api/admin/course-management', courseForm);\n            } else {\n              response = await axios.put('/api/admin/course-management', courseForm);\n            }\n            if (response.data.code === 200) {\n              ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功');\n              dialogVisible.value = false;\n              fetchCourses();\n            } else {\n              ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'));\n            }\n          } catch (error) {\n            console.error(dialogType.value === 'add' ? '添加课程失败:' : '修改课程失败:', error);\n            ElMessage.error(dialogType.value === 'add' ? '添加课程失败' : '修改课程失败');\n          }\n        }\n      });\n    };\n\n    // 处理移除学生\n    const handleRemoveStudent = student => {\n      if (!courseDetail.value || !courseDetail.value.course) return;\n      ElMessageBox.confirm(`确定要将学生\"${student.realName}\"从课程中移除吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await axios.delete(`/api/admin/course-management/${courseDetail.value.course.id}/student/${student.id}`);\n          if (response.data.code === 200) {\n            ElMessage.success('移除成功');\n            // 重新加载课程详情\n            handleDetail(courseDetail.value.course);\n          } else {\n            ElMessage.error(response.data.message || '移除失败');\n          }\n        } catch (error) {\n          console.error('移除学生失败:', error);\n          ElMessage.error('移除学生失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    };\n\n    // 获取状态标签类型\n    const getStatusType = status => {\n      switch (status) {\n        case 0:\n          return 'info';\n        case 1:\n          return 'success';\n        case 2:\n          return 'danger';\n        default:\n          return 'info';\n      }\n    };\n\n    // 获取状态文本\n    const getStatusText = status => {\n      switch (status) {\n        case 0:\n          return '未开始';\n        case 1:\n          return '进行中';\n        case 2:\n          return '已结束';\n        default:\n          return '未知';\n      }\n    };\n    onMounted(() => {\n      fetchCourses();\n      fetchTeachers();\n    });\n    const __returned__ = {\n      queryParams,\n      courseList,\n      teacherList,\n      total,\n      loading,\n      dialogVisible,\n      dialogTitle,\n      dialogType,\n      courseFormRef,\n      courseForm,\n      courseRules,\n      detailDialogVisible,\n      courseDetail,\n      fetchCourses,\n      fetchTeachers,\n      resetQuery,\n      handleCurrentChange,\n      handleSizeChange,\n      handleAdd,\n      handleEdit,\n      handleDetail,\n      handleDelete,\n      submitCourseForm,\n      handleRemoveStudent,\n      formatDate,\n      getStatusType,\n      getStatusText,\n      ref,\n      reactive,\n      onMounted,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      },\n      get safeElementConfig() {\n        return safeElementConfig;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","ElMessage","ElMessageBox","axios","safeElementConfig","queryParams","pageNum","pageSize","name","teacherId","status","courseList","teacherList","total","loading","dialogVisible","dialogTitle","dialogType","courseFormRef","courseForm","id","undefined","description","classTime","classLocation","endTime","endForm","endLocation","courseRules","required","message","trigger","min","max","detailDialogVisible","courseDetail","fetchCourses","value","response","get","params","data","code","records","error","console","fetchTeachers","resetQuery","handleCurrentChange","val","handleSizeChange","handleAdd","setTimeout","resetFields","handleEdit","row","Date","handleDetail","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","delete","success","catch","submitCourseForm","validate","valid","post","put","handleRemoveStudent","student","course","realName","formatDate","dateString","date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getStatusType","getStatusText"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/admin/CourseManagement.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\r\n<template>\r\n  <div class=\"course-management\">\r\n    <h1>课程管理</h1>\r\n    \r\n    <el-card class=\"filter-card\">\r\n      <div class=\"filter-container\">\r\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"课程名称\">\r\n            <el-input v-model=\"queryParams.name\" placeholder=\"请输入课程名称\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"教师\">\r\n            <el-select \r\n              v-model=\"queryParams.teacherId\" \r\n              placeholder=\"请选择教师\" \r\n              clearable\r\n              v-bind=\"safeElementConfig\"\r\n            >\r\n              <el-option\r\n                v-for=\"teacher in teacherList\"\r\n                :key=\"teacher.id\"\r\n                :label=\"teacher.realName\"\r\n                :value=\"teacher.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\">\r\n            <el-select \r\n              v-model=\"queryParams.status\" \r\n              placeholder=\"请选择状态\" \r\n              clearable\r\n              v-bind=\"safeElementConfig\"\r\n            >\r\n              <el-option label=\"未开始\" :value=\"0\"></el-option>\r\n              <el-option label=\"进行中\" :value=\"1\"></el-option>\r\n              <el-option label=\"已结束\" :value=\"2\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"fetchCourses\">查询</el-button>\r\n            <el-button @click=\"resetQuery\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      \r\n      <div class=\"operation-container\">\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加课程</el-button>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <el-card class=\"table-card\">\r\n      <el-table :data=\"courseList\" style=\"width: 100%\" v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"课程名称\" width=\"200\"></el-table-column>\r\n        <el-table-column prop=\"teacherName\" label=\"任课教师\" width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"classTime\" label=\"上课时间\" width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"classLocation\" label=\"上课地点\" width=\"150\"></el-table-column>\r\n        <el-table-column label=\"结课方式\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.endForm === 0 ? '考试' : '大作业' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"结课时间\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.endTime ? formatDate(scope.row.endTime) : '-' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"endLocation\" label=\"考试地点\" width=\"150\"></el-table-column>\r\n        <el-table-column label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusText(scope.row.status) }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"220\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button type=\"success\" size=\"small\" @click=\"handleDetail(scope.row)\">详情</el-button>\r\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          :current-page=\"queryParams.pageNum\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 课程编辑对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\" \r\n      width=\"650px\"\r\n      v-bind=\"safeElementConfig\"\r\n    >\r\n      <el-form :model=\"courseForm\" :rules=\"courseRules\" ref=\"courseFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"课程名称\" prop=\"name\">\r\n          <el-input v-model=\"courseForm.name\" placeholder=\"请输入课程名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"课程描述\" prop=\"description\">\r\n          <el-input type=\"textarea\" v-model=\"courseForm.description\" placeholder=\"请输入课程描述\" rows=\"3\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"任课教师\" prop=\"teacherId\">\r\n          <el-select \r\n            v-model=\"courseForm.teacherId\" \r\n            placeholder=\"请选择任课教师\" \r\n            style=\"width: 100%\"\r\n            v-bind=\"safeElementConfig\"\r\n          >\r\n            <el-option\r\n              v-for=\"teacher in teacherList\"\r\n              :key=\"teacher.id\"\r\n              :label=\"teacher.realName\"\r\n              :value=\"teacher.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"上课时间\" prop=\"classTime\">\r\n          <el-input v-model=\"courseForm.classTime\" placeholder=\"例如：周一 8:00-9:40\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"上课地点\" prop=\"classLocation\">\r\n          <el-input v-model=\"courseForm.classLocation\" placeholder=\"例如：教学楼A-101\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"结课形式\" prop=\"endForm\">\r\n          <el-radio-group v-model=\"courseForm.endForm\">\r\n            <el-radio :label=\"0\">考试</el-radio>\r\n            <el-radio :label=\"1\">大作业</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"结课时间\" prop=\"endTime\">\r\n          <el-date-picker\r\n            v-model=\"courseForm.endTime\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择结课时间\"\r\n            style=\"width: 100%\"\r\n            v-bind=\"safeElementConfig\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"考试地点\" prop=\"endLocation\" v-if=\"courseForm.endForm === 0\">\r\n          <el-input v-model=\"courseForm.endLocation\" placeholder=\"例如：教学楼C-203\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"课程状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"courseForm.status\">\r\n            <el-radio :label=\"0\">未开始</el-radio>\r\n            <el-radio :label=\"1\">进行中</el-radio>\r\n            <el-radio :label=\"2\">已结束</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitCourseForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 课程详情对话框 -->\r\n    <el-dialog \r\n      title=\"课程详情\" \r\n      v-model=\"detailDialogVisible\" \r\n      width=\"800px\"\r\n      v-bind=\"safeElementConfig\"\r\n    >\r\n      <template v-if=\"courseDetail\">\r\n        <div class=\"detail-header\">\r\n          <h2>{{ courseDetail.course.name }}</h2>\r\n          <el-tag :type=\"getStatusType(courseDetail.course.status)\">{{ getStatusText(courseDetail.course.status) }}</el-tag>\r\n        </div>\r\n        \r\n        <div class=\"detail-info\">\r\n          <div class=\"info-item\">\r\n            <label>课程ID：</label>\r\n            <span>{{ courseDetail.course.id }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>课程描述：</label>\r\n            <span>{{ courseDetail.course.description || '无' }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>任课教师：</label>\r\n            <span>{{ courseDetail.teacher ? courseDetail.teacher.realName : '未知' }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>上课时间：</label>\r\n            <span>{{ courseDetail.course.classTime || '未设置' }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>上课地点：</label>\r\n            <span>{{ courseDetail.course.classLocation || '未设置' }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>结课形式：</label>\r\n            <span>{{ courseDetail.course.endForm === 0 ? '考试' : '大作业' }}</span>\r\n          </div>\r\n          <div class=\"info-item\">\r\n            <label>结课时间：</label>\r\n            <span>{{ courseDetail.course.endTime ? formatDate(courseDetail.course.endTime) : '未设置' }}</span>\r\n          </div>\r\n          <div class=\"info-item\" v-if=\"courseDetail.course.endForm === 0\">\r\n            <label>考试地点：</label>\r\n            <span>{{ courseDetail.course.endLocation || '未设置' }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-divider content-position=\"left\">选课学生</el-divider>\r\n        \r\n        <div class=\"student-list\">\r\n          <el-table :data=\"courseDetail.students\" style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"username\" label=\"学号\" width=\"150\"></el-table-column>\r\n            <el-table-column prop=\"realName\" label=\"姓名\" width=\"150\"></el-table-column>\r\n            <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n            <el-table-column prop=\"phone\" label=\"手机号\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"120\">\r\n              <template #default=\"scope\">\r\n                <el-button type=\"danger\" size=\"small\" @click=\"handleRemoveStudent(scope.row)\">移除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, nextTick } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\nimport { safeElementConfig } from '@/utils/resizeObserverFix'\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  pageNum: 1,\r\n  pageSize: 10,\r\n  name: '',\r\n  teacherId: null,\r\n  status: null\r\n})\r\n\r\n// 课程列表\r\nconst courseList = ref([])\r\n// 教师列表\r\nconst teacherList = ref([])\r\n// 总数据条数\r\nconst total = ref(0)\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 对话框相关\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst dialogType = ref('add') // add or edit\r\nconst courseFormRef = ref(null)\r\nconst courseForm = reactive({\r\n  id: undefined,\r\n  name: '',\r\n  description: '',\r\n  teacherId: null,\r\n  classTime: '',\r\n  classLocation: '',\r\n  endTime: null,\r\n  endForm: 0,\r\n  endLocation: '',\r\n  status: 1\r\n})\r\n\r\n// 课程表单验证规则\r\nconst courseRules = {\r\n  name: [\r\n    { required: true, message: '请输入课程名称', trigger: 'blur' },\r\n    { min: 2, max: 100, message: '长度在 2 到 100 个字符', trigger: 'blur' }\r\n  ],\r\n  teacherId: [\r\n    { required: true, message: '请选择任课教师', trigger: 'change' }\r\n  ],\r\n  classTime: [\r\n    { required: true, message: '请输入上课时间', trigger: 'blur' }\r\n  ],\r\n  classLocation: [\r\n    { required: true, message: '请输入上课地点', trigger: 'blur' }\r\n  ],\r\n  endTime: [\r\n    { required: true, message: '请选择结课时间', trigger: 'change' }\r\n  ],\r\n  endLocation: [\r\n    { required: true, message: '请输入考试地点', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 课程详情对话框\r\nconst detailDialogVisible = ref(false)\r\nconst courseDetail = ref(null)\r\n\r\n// 获取课程列表\r\nconst fetchCourses = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await axios.get('/api/admin/course-management/list', {\r\n      params: queryParams\r\n    })\r\n    if (response.data.code === 200) {\r\n      courseList.value = response.data.data.records\r\n      total.value = response.data.data.total\r\n    }\r\n  } catch (error) {\r\n    console.error('获取课程列表失败:', error)\r\n    ElMessage.error('获取课程列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取教师列表\r\nconst fetchTeachers = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/course-management/available-teachers')\r\n    if (response.data.code === 200) {\r\n      teacherList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取教师列表失败:', error)\r\n    ElMessage.error('获取教师列表失败')\r\n  }\r\n}\r\n\r\n// 重置查询条件\r\nconst resetQuery = () => {\r\n  queryParams.name = ''\r\n  queryParams.teacherId = null\r\n  queryParams.status = null\r\n  fetchCourses()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  queryParams.pageNum = val\r\n  fetchCourses()\r\n}\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (val) => {\r\n  queryParams.pageSize = val\r\n  fetchCourses()\r\n}\r\n\r\n// 处理添加课程\r\nconst handleAdd = () => {\r\n  dialogType.value = 'add'\r\n  dialogTitle.value = '添加课程'\r\n  courseForm.id = undefined\r\n  courseForm.name = ''\r\n  courseForm.description = ''\r\n  courseForm.teacherId = null\r\n  courseForm.classTime = ''\r\n  courseForm.classLocation = ''\r\n  courseForm.endTime = null\r\n  courseForm.endForm = 0\r\n  courseForm.endLocation = ''\r\n  courseForm.status = 1\r\n  \r\n  // 使用nextTick确保DOM已更新\r\n  nextTick(() => {\r\n    dialogVisible.value = true\r\n    // 等待DOM更新后再重置表单\r\n    setTimeout(() => {\r\n      courseFormRef.value && courseFormRef.value.resetFields()\r\n    }, 0)\r\n  })\r\n}\r\n\r\n// 处理编辑课程\r\nconst handleEdit = (row) => {\r\n  dialogType.value = 'edit'\r\n  dialogTitle.value = '编辑课程'\r\n  courseForm.id = row.id\r\n  courseForm.name = row.name\r\n  courseForm.description = row.description\r\n  courseForm.teacherId = row.teacherId\r\n  courseForm.classTime = row.classTime\r\n  courseForm.classLocation = row.classLocation\r\n  courseForm.endTime = row.endTime ? new Date(row.endTime) : null\r\n  courseForm.endForm = row.endForm\r\n  courseForm.endLocation = row.endLocation\r\n  courseForm.status = row.status\r\n  \r\n  // 使用nextTick确保DOM已更新\r\n  nextTick(() => {\r\n    dialogVisible.value = true\r\n  })\r\n}\r\n\r\n// 处理查看详情\r\nconst handleDetail = async (row) => {\r\n  try {\r\n    loading.value = true\r\n    const response = await axios.get(`/api/admin/course-management/${row.id}/detail`)\r\n    if (response.data.code === 200) {\r\n      // 先清空旧数据，避免显示上一次的内容\r\n      courseDetail.value = null\r\n      \r\n      // 使用nextTick确保DOM已更新\r\n      await nextTick()\r\n      \r\n      // 设置新数据\r\n      courseDetail.value = response.data.data\r\n      detailDialogVisible.value = true\r\n    }\r\n  } catch (error) {\r\n    console.error('获取课程详情失败:', error)\r\n    ElMessage.error('获取课程详情失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 处理删除课程\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(`确定要删除课程\"${row.name}\"吗？`, '提示', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    type: 'warning'\r\n  }).then(async () => {\r\n    try {\r\n      const response = await axios.delete(`/api/admin/course-management/${row.id}`)\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('删除成功')\r\n        fetchCourses()\r\n      } else {\r\n        ElMessage.error(response.data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除课程失败:', error)\r\n      ElMessage.error('删除课程失败')\r\n    }\r\n  }).catch(() => {})\r\n}\r\n\r\n// 提交课程表单\r\nconst submitCourseForm = () => {\r\n  courseFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        let response\r\n        if (dialogType.value === 'add') {\r\n          response = await axios.post('/api/admin/course-management', courseForm)\r\n        } else {\r\n          response = await axios.put('/api/admin/course-management', courseForm)\r\n        }\r\n        \r\n        if (response.data.code === 200) {\r\n          ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功')\r\n          dialogVisible.value = false\r\n          fetchCourses()\r\n        } else {\r\n          ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(dialogType.value === 'add' ? '添加课程失败:' : '修改课程失败:', error)\r\n        ElMessage.error(dialogType.value === 'add' ? '添加课程失败' : '修改课程失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理移除学生\r\nconst handleRemoveStudent = (student) => {\r\n  if (!courseDetail.value || !courseDetail.value.course) return\r\n  \r\n  ElMessageBox.confirm(`确定要将学生\"${student.realName}\"从课程中移除吗？`, '提示', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    type: 'warning'\r\n  }).then(async () => {\r\n    try {\r\n      const response = await axios.delete(`/api/admin/course-management/${courseDetail.value.course.id}/student/${student.id}`)\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('移除成功')\r\n        // 重新加载课程详情\r\n        handleDetail(courseDetail.value.course)\r\n      } else {\r\n        ElMessage.error(response.data.message || '移除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('移除学生失败:', error)\r\n      ElMessage.error('移除学生失败')\r\n    }\r\n  }).catch(() => {})\r\n}\r\n\r\n// 格式化日期\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString)\r\n  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\r\n}\r\n\r\n// 获取状态标签类型\r\nconst getStatusType = (status) => {\r\n  switch (status) {\r\n    case 0: return 'info'\r\n    case 1: return 'success'\r\n    case 2: return 'danger'\r\n    default: return 'info'\r\n  }\r\n}\r\n\r\n// 获取状态文本\r\nconst getStatusText = (status) => {\r\n  switch (status) {\r\n    case 0: return '未开始'\r\n    case 1: return '进行中'\r\n    case 2: return '已结束'\r\n    default: return '未知'\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchCourses()\r\n  fetchTeachers()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.course-management {\r\n  h1 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .operation-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  .table-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  .detail-header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    \r\n    h2 {\r\n      margin: 0;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  \r\n  .detail-info {\r\n    margin-bottom: 20px;\r\n    \r\n    .info-item {\r\n      margin-bottom: 10px;\r\n      \r\n      label {\r\n        font-weight: bold;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .student-list {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}