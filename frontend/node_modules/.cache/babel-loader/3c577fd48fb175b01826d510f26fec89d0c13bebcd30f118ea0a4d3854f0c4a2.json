{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { User, Lock } from '@element-plus/icons-vue';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const loginForm = ref(null);\n    const loading = ref(false);\n    const loginData = reactive({\n      username: '',\n      password: ''\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      if (!loginForm.value) return;\n      try {\n        await loginForm.value.validate();\n        loading.value = true;\n        try {\n          const response = await axios.post('/api/user/login', loginData);\n          if (response.data.code === 200) {\n            const {\n              data\n            } = response.data;\n\n            // 保存token和用户信息到localStorage\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('userInfo', JSON.stringify(data));\n            console.log('登录成功，保存的 token:', data.token);\n            console.log('登录成功，保存的用户信息:', data);\n\n            // 测试 localStorage 是否正确保存了 token\n            setTimeout(() => {\n              console.log('从 localStorage 获取的 token:', localStorage.getItem('token'));\n            }, 100);\n            ElMessage.success('登录成功');\n\n            // 根据角色跳转到不同的首页\n            if (data.role === 0) {\n              router.push('/student/home');\n            } else if (data.role === 1) {\n              router.push('/teacher/home');\n            } else if (data.role === 2) {\n              router.push('/admin/home');\n            }\n          } else {\n            ElMessage.error(response.data.message || '登录失败，请重试');\n          }\n        } catch (error) {\n          console.error(error);\n          ElMessage.error(error.response?.data?.message || '登录失败，请重试');\n        } finally {\n          loading.value = false;\n        }\n      } catch (error) {\n        console.error('表单验证失败', error);\n      }\n    };\n    const __returned__ = {\n      router,\n      loginForm,\n      loading,\n      loginData,\n      rules,\n      handleLogin,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get User() {\n        return User;\n      },\n      get Lock() {\n        return Lock;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","axios","User","Lock","router","loginForm","loading","loginData","username","password","rules","required","message","trigger","handleLogin","value","validate","response","post","data","code","localStorage","setItem","token","JSON","stringify","console","log","setTimeout","getItem","success","role","push","error"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <div class=\"login-title\">\r\n        <h2>教学课程资源管理系统</h2>\r\n      </div>\r\n      <el-form ref=\"loginForm\" :model=\"loginData\" :rules=\"rules\" label-width=\"0\" class=\"login-form\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginData.username\" placeholder=\"用户名/学号/工号\">\r\n            <template #prefix>\r\n              <el-icon><User /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginData.password\" type=\"password\" placeholder=\"密码\" show-password @keyup.enter=\"handleLogin\">\r\n            <template #prefix>\r\n              <el-icon><Lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" :loading=\"loading\" class=\"login-button\" @click=\"handleLogin\">登录</el-button>\r\n        </el-form-item>\r\n        <div class=\"login-options\">\r\n          <router-link to=\"/register\">没有账号？立即注册</router-link>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\nimport { User, Lock } from '@element-plus/icons-vue'\r\n\r\nconst router = useRouter()\r\nconst loginForm = ref(null)\r\nconst loading = ref(false)\r\n\r\nconst loginData = reactive({\r\n  username: '',\r\n  password: ''\r\n})\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleLogin = async () => {\r\n  if (!loginForm.value) return\r\n  \r\n  try {\r\n    await loginForm.value.validate()\r\n    loading.value = true\r\n    \r\n    try {\r\n      const response = await axios.post('/api/user/login', loginData)\r\n      \r\n      if (response.data.code === 200) {\r\n        const { data } = response.data\r\n        \r\n        // 保存token和用户信息到localStorage\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n        console.log('登录成功，保存的 token:', data.token)\r\n        console.log('登录成功，保存的用户信息:', data)\r\n        \r\n        // 测试 localStorage 是否正确保存了 token\r\n        setTimeout(() => {\r\n          console.log('从 localStorage 获取的 token:', localStorage.getItem('token'))\r\n        }, 100)\r\n        \r\n        ElMessage.success('登录成功')\r\n        \r\n        // 根据角色跳转到不同的首页\r\n        if (data.role === 0) {\r\n          router.push('/student/home')\r\n        } else if (data.role === 1) {\r\n          router.push('/teacher/home')\r\n        } else if (data.role === 2) {\r\n          router.push('/admin/home')\r\n        }\r\n      } else {\r\n        ElMessage.error(response.data.message || '登录失败，请重试')\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n      ElMessage.error(error.response?.data?.message || '登录失败，请重试')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  } catch (error) {\r\n    console.error('表单验证失败', error)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-box {\r\n  width: 400px;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.login-title h2 {\r\n  font-weight: 500;\r\n  color: #409eff;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n}\r\n\r\n.login-options {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-options a {\r\n  color: #409eff;\r\n  text-decoration: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}