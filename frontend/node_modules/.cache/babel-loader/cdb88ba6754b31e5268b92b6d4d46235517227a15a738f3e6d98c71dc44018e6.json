{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const registerForm = ref(null);\n    const loading = ref(false);\n    const registerData = reactive({\n      username: '',\n      password: '',\n      confirmPassword: '',\n      realName: '',\n      email: '',\n      phone: '',\n      role: 0\n    });\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (registerData.confirmPassword !== '') {\n          registerForm.value?.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== registerData.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '长度在 3 到 20 个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        validator: validatePass,\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能小于6位',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        validator: validatePass2,\n        trigger: 'blur'\n      }],\n      realName: [{\n        required: true,\n        message: '请输入真实姓名',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: false,\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: 'blur'\n      }],\n      phone: [{\n        required: false,\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入正确的手机号码',\n        trigger: 'blur'\n      }],\n      role: [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }]\n    };\n    const handleRegister = async () => {\n      if (!registerForm.value) return;\n      try {\n        await registerForm.value.validate();\n        loading.value = true;\n        try {\n          const response = await axios.post('/api/user/register', registerData);\n          if (response.data.code === 200) {\n            ElMessage.success('注册成功，请登录');\n            router.push('/login');\n          } else {\n            ElMessage.error(response.data.message || '注册失败，请重试');\n          }\n        } catch (error) {\n          console.error(error);\n          ElMessage.error(error.response?.data?.message || '注册失败，请重试');\n        } finally {\n          loading.value = false;\n        }\n      } catch (error) {\n        console.error('表单验证失败', error);\n      }\n    };\n    const goToLogin = () => {\n      router.push('/login');\n    };\n    const __returned__ = {\n      router,\n      registerForm,\n      loading,\n      registerData,\n      validatePass,\n      validatePass2,\n      rules,\n      handleRegister,\n      goToLogin,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","axios","router","registerForm","loading","registerData","username","password","confirmPassword","realName","email","phone","role","validatePass","rule","value","callback","Error","validateField","validatePass2","rules","required","message","trigger","min","max","validator","type","pattern","handleRegister","validate","response","post","data","code","success","push","error","console","goToLogin"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"register-box\">\r\n      <div class=\"register-title\">\r\n        <h2>用户注册</h2>\r\n      </div>\r\n      <el-form ref=\"registerForm\" :model=\"registerData\" :rules=\"rules\" label-width=\"100px\" class=\"register-form\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"registerData.username\" placeholder=\"请输入用户名/学号/工号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"registerData.password\" type=\"password\" placeholder=\"请输入密码\" show-password />\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input v-model=\"registerData.confirmPassword\" type=\"password\" placeholder=\"请再次输入密码\" show-password />\r\n        </el-form-item>\r\n        <el-form-item label=\"真实姓名\" prop=\"realName\">\r\n          <el-input v-model=\"registerData.realName\" placeholder=\"请输入真实姓名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"registerData.email\" placeholder=\"请输入邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"registerData.phone\" placeholder=\"请输入手机号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\" prop=\"role\">\r\n          <el-radio-group v-model=\"registerData.role\">\r\n            <el-radio :label=\"0\">学生</el-radio>\r\n            <el-radio :label=\"1\">教师</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" :loading=\"loading\" @click=\"handleRegister\">注册</el-button>\r\n          <el-button @click=\"goToLogin\">返回登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nconst router = useRouter()\r\nconst registerForm = ref(null)\r\nconst loading = ref(false)\r\n\r\nconst registerData = reactive({\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  realName: '',\r\n  email: '',\r\n  phone: '',\r\n  role: 0\r\n})\r\n\r\nconst validatePass = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('请输入密码'))\r\n  } else {\r\n    if (registerData.confirmPassword !== '') {\r\n      registerForm.value?.validateField('confirmPassword')\r\n    }\r\n    callback()\r\n  }\r\n}\r\n\r\nconst validatePass2 = (rule, value, callback) => {\r\n  if (value === '') {\r\n    callback(new Error('请再次输入密码'))\r\n  } else if (value !== registerData.password) {\r\n    callback(new Error('两次输入密码不一致'))\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, validator: validatePass, trigger: 'blur' },\r\n    { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n  ],\r\n  confirmPassword: [\r\n    { required: true, validator: validatePass2, trigger: 'blur' }\r\n  ],\r\n  realName: [\r\n    { required: true, message: '请输入真实姓名', trigger: 'blur' }\r\n  ],\r\n  email: [\r\n    { required: false, type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ],\r\n  phone: [\r\n    { required: false, pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n  ],\r\n  role: [\r\n    { required: true, message: '请选择角色', trigger: 'change' }\r\n  ]\r\n}\r\n\r\nconst handleRegister = async () => {\r\n  if (!registerForm.value) return\r\n  \r\n  try {\r\n    await registerForm.value.validate()\r\n    loading.value = true\r\n    \r\n    try {\r\n      const response = await axios.post('/api/user/register', registerData)\r\n      \r\n      if (response.data.code === 200) {\r\n        ElMessage.success('注册成功，请登录')\r\n        router.push('/login')\r\n      } else {\r\n        ElMessage.error(response.data.message || '注册失败，请重试')\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n      ElMessage.error(error.response?.data?.message || '注册失败，请重试')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  } catch (error) {\r\n    console.error('表单验证失败', error)\r\n  }\r\n}\r\n\r\nconst goToLogin = () => {\r\n  router.push('/login')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f5f7fa;\r\n  padding: 20px 0;\r\n}\r\n\r\n.register-box {\r\n  width: 500px;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.register-title {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.register-title h2 {\r\n  font-weight: 500;\r\n  color: #409eff;\r\n}\r\n\r\n.register-form {\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}