{"ast":null,"code":"import { ref, reactive, onMounted, computed, nextTick, onBeforeUnmount } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { safeElementConfig } from '@/utils/resizeObserverFix';\nexport default {\n  name: 'MaterialReview',\n  setup() {\n    const store = useStore();\n    const activeTab = ref('submit');\n\n    // 当前用户信息\n    const currentUser = computed(() => store.state.user);\n\n    // 学年列表\n    const academicYears = ref([]);\n    const generateAcademicYears = () => {\n      const currentYear = new Date().getFullYear();\n      const years = [];\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i;\n        years.push(`${year}-${year + 1}`);\n      }\n      academicYears.value = years;\n    };\n\n    // 我提交的审核\n    const submitQueryParams = reactive({\n      current: 1,\n      size: 10,\n      teacherId: null,\n      academicYear: null,\n      semester: null,\n      status: null\n    });\n    const submitReviews = ref([]);\n    const submitTotal = ref(0);\n    const submitLoading = ref(false);\n    const submitTableVisible = ref(true);\n    const fetchSubmitReviews = async () => {\n      submitLoading.value = true;\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let teacherId = currentUser.value?.id;\n        if (!teacherId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          teacherId = userInfo.id;\n        }\n        if (!teacherId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          submitLoading.value = false;\n          return;\n        }\n        submitQueryParams.teacherId = teacherId;\n        console.log('提交的审核查询参数:', submitQueryParams);\n        const response = await axios.get('/api/material-review/teacher-submit', {\n          params: submitQueryParams\n        });\n        console.log('提交的审核响应:', response.data);\n        if (response.data && response.data.data) {\n          submitReviews.value = response.data.data.records || [];\n          submitTotal.value = response.data.data.total || 0;\n        } else {\n          submitReviews.value = [];\n          submitTotal.value = 0;\n        }\n      } catch (error) {\n        console.error('获取提交的审核列表失败', error);\n        ElMessage.error('获取提交的审核列表失败');\n        submitReviews.value = [];\n        submitTotal.value = 0;\n      } finally {\n        submitLoading.value = false;\n      }\n    };\n    const handleSubmitCurrentChange = current => {\n      submitQueryParams.current = current;\n      fetchSubmitReviews();\n    };\n\n    // 待我审核\n    const pendingQueryParams = reactive({\n      current: 1,\n      size: 10,\n      reviewerId: null,\n      academicYear: null,\n      semester: null\n    });\n    const pendingReviews = ref([]);\n    const pendingTotal = ref(0);\n    const pendingLoading = ref(false);\n    const pendingTableVisible = ref(true);\n    const fetchPendingReviews = async () => {\n      pendingLoading.value = true;\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let reviewerId = currentUser.value?.id;\n        if (!reviewerId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          reviewerId = userInfo.id;\n        }\n        if (!reviewerId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          pendingLoading.value = false;\n          return;\n        }\n        pendingQueryParams.reviewerId = reviewerId;\n        console.log('待审核查询参数:', pendingQueryParams);\n\n        // 检查当前用户是否为专业负责人\n        let isMajorLeader = false;\n        try {\n          // 获取用户职称信息\n          const titlesResponse = await axios.get('/api/teacher/titles', {\n            params: {\n              teacherId: reviewerId\n            }\n          });\n          if (titlesResponse.data && titlesResponse.data.code === 200 && titlesResponse.data.data) {\n            const titles = titlesResponse.data.data;\n            // 检查是否有专业负责人职称(titleType=2)\n            isMajorLeader = titles.some(title => title.titleType === 2);\n            console.log('当前用户是否为专业负责人:', isMajorLeader);\n          }\n        } catch (error) {\n          console.warn('获取用户职称信息失败:', error);\n        }\n        const response = await axios.get('/api/material-review/teacher-pending', {\n          params: pendingQueryParams\n        });\n        console.log('待审核响应:', response.data);\n        if (response.data && response.data.data) {\n          // 获取原始数据\n          const rawRecords = response.data.data.records || [];\n\n          // 对于专业负责人，可能存在重复记录的问题，进行数据去重\n          // 使用Map来存储唯一的记录，以id为键\n          const uniqueRecordsMap = new Map();\n          for (const record of rawRecords) {\n            // 只有当Map中不存在该id的记录时才添加\n            if (!uniqueRecordsMap.has(record.id)) {\n              uniqueRecordsMap.set(record.id, record);\n            }\n          }\n\n          // 将Map转换回数组\n          pendingReviews.value = Array.from(uniqueRecordsMap.values());\n          pendingTotal.value = response.data.data.total || 0;\n\n          // 如果去重后数量减少，更新total\n          if (pendingReviews.value.length < rawRecords.length) {\n            console.log(`检测到并移除了 ${rawRecords.length - pendingReviews.value.length} 条重复记录`);\n\n            // 专业负责人问题的诊断日志\n            if (isMajorLeader) {\n              console.log('专业负责人模式: 记录重复问题诊断');\n\n              // 创建一个ID出现次数的映射\n              const idCounts = {};\n              rawRecords.forEach(record => {\n                idCounts[record.id] = (idCounts[record.id] || 0) + 1;\n              });\n\n              // 找出出现多次的ID\n              const duplicateIds = Object.entries(idCounts).filter(([, count]) => count > 1).map(([id, count]) => ({\n                id,\n                count\n              }));\n              if (duplicateIds.length > 0) {\n                console.log('重复ID列表:', duplicateIds);\n\n                // 对于每个重复的ID，输出它们的详细信息以找出差异\n                duplicateIds.forEach(({\n                  id\n                }) => {\n                  const duplicates = rawRecords.filter(record => record.id.toString() === id);\n                  console.log(`ID ${id} 的重复记录:`, duplicates);\n                });\n              }\n            }\n            pendingTotal.value = pendingReviews.value.length;\n          }\n        } else {\n          pendingReviews.value = [];\n          pendingTotal.value = 0;\n        }\n      } catch (error) {\n        console.error('获取待审核列表失败', error);\n        ElMessage.error('获取待审核列表失败');\n        pendingReviews.value = [];\n        pendingTotal.value = 0;\n      } finally {\n        pendingLoading.value = false;\n      }\n    };\n    const handlePendingCurrentChange = current => {\n      pendingQueryParams.current = current;\n      fetchPendingReviews();\n    };\n\n    // 审核详情\n    const detailDialogVisible = ref(false);\n    const reviewDetail = ref(null);\n    const reviewRecords = ref([]);\n    const reviewRecordTableVisible = ref(true);\n    const viewReviewDetail = async reviewId => {\n      try {\n        const detailResponse = await axios.get(`/api/material-review/detail/${reviewId}`);\n        console.log('审核详情响应:', detailResponse.data);\n        if (detailResponse.data && detailResponse.data.data) {\n          reviewDetail.value = detailResponse.data.data;\n          console.log('材料名称:', reviewDetail.value.material_name);\n          console.log('材料ID:', reviewDetail.value.material_id);\n          const recordsResponse = await axios.get(`/api/material-review/records/${reviewId}`);\n          console.log('审核记录响应:', recordsResponse.data);\n          if (recordsResponse.data && recordsResponse.data.data) {\n            reviewRecords.value = recordsResponse.data.data || [];\n          } else {\n            reviewRecords.value = [];\n          }\n          detailDialogVisible.value = true;\n          // 延迟渲染表格以防止ResizeObserver错误\n          reviewRecordTableVisible.value = false;\n          await nextTick();\n          reviewRecordTableVisible.value = true;\n        } else {\n          ElMessage.error('获取审核详情失败');\n        }\n      } catch (error) {\n        console.error('获取审核详情失败', error);\n        ElMessage.error('获取审核详情失败');\n        reviewRecords.value = [];\n      }\n    };\n\n    // 审核材料\n    const reviewDialogVisible = ref(false);\n    const reviewForm = reactive({\n      reviewId: null,\n      reviewerId: null,\n      reviewerTitle: null,\n      result: 1,\n      comment: ''\n    });\n    const submitReviewLoading = ref(false);\n    const reviewMaterial = async reviewId => {\n      try {\n        const response = await axios.get(`/api/material-review/detail/${reviewId}`);\n        console.log('审核材料详情响应:', response.data);\n        if (response.data && response.data.data) {\n          reviewDetail.value = response.data.data;\n\n          // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n          let reviewerId = currentUser.value?.id;\n          if (!reviewerId) {\n            const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n            reviewerId = userInfo.id;\n          }\n          if (!reviewerId) {\n            ElMessage.warning('无法获取用户信息，请重新登录');\n            return;\n          }\n          reviewForm.reviewId = reviewId;\n          reviewForm.reviewerId = reviewerId;\n\n          // 根据当前审核状态设置审核人职称\n          switch (reviewDetail.value.status) {\n            case 1:\n              // 课程负责人审核中\n              reviewForm.reviewerTitle = 1;\n              break;\n            case 2:\n              // 专业负责人审核中\n              reviewForm.reviewerTitle = 2;\n              break;\n            case 3:\n              // 副院长审核中\n              reviewForm.reviewerTitle = 3;\n              break;\n            case 4:\n              // 教务人员审核中\n              reviewForm.reviewerTitle = 4;\n              break;\n            default:\n              reviewForm.reviewerTitle = 0;\n          }\n          reviewForm.result = 1;\n          reviewForm.comment = '';\n          reviewDialogVisible.value = true;\n        } else {\n          ElMessage.error('获取审核详情失败');\n        }\n      } catch (error) {\n        console.error('获取审核详情失败', error);\n        ElMessage.error('获取审核详情失败');\n      }\n    };\n    const submitReview = async () => {\n      if (!reviewForm.comment) {\n        ElMessage.warning('请输入审核意见');\n        return;\n      }\n      submitReviewLoading.value = true;\n      try {\n        const response = await axios.post('/api/material-review/review', reviewForm);\n        if (response.data.code === 200) {\n          ElMessage.success('审核提交成功');\n          reviewDialogVisible.value = false;\n          fetchPendingReviews();\n        } else {\n          ElMessage.error(response.data.message || '审核提交失败');\n        }\n      } catch (error) {\n        console.error('审核提交失败', error);\n        ElMessage.error('审核提交失败');\n      } finally {\n        submitReviewLoading.value = false;\n      }\n    };\n\n    // 工具函数\n    const getStatusText = status => {\n      switch (status) {\n        case 0:\n          return '待审核';\n        case 1:\n          return '课程负责人审核中';\n        case 2:\n          return '专业负责人审核中';\n        case 3:\n          return '副院长审核中';\n        case 4:\n          return '教务人员审核中';\n        case 5:\n          return '审核通过';\n        case 6:\n          return '审核不通过';\n        default:\n          return '未知状态';\n      }\n    };\n    const getStatusType = status => {\n      switch (status) {\n        case 0:\n          return 'info';\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n          return 'warning';\n        case 5:\n          return 'success';\n        case 6:\n          return 'danger';\n        default:\n          return 'info';\n      }\n    };\n    const getReviewerTitleText = title => {\n      switch (title) {\n        case 0:\n          return '普通教师';\n        case 1:\n          return '课程负责人';\n        case 2:\n          return '专业负责人';\n        case 3:\n          return '副院长';\n        case 4:\n          return '教务人员';\n        default:\n          return '未知职称';\n      }\n    };\n    const formatFileSize = size => {\n      if (!size) return '0 B';\n      const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n      let index = 0;\n      let fileSize = size;\n      while (fileSize >= 1024 && index < units.length - 1) {\n        fileSize /= 1024;\n        index++;\n      }\n      return fileSize.toFixed(2) + ' ' + units[index];\n    };\n    const downloadFile = async materialId => {\n      if (!materialId) {\n        ElMessage.warning('材料ID为空');\n        return;\n      }\n      try {\n        console.log('下载材料ID:', materialId);\n        // 使用axios下载文件\n        const response = await axios.get(`/api/material/download/${materialId}`, {\n          responseType: 'blob'\n        });\n\n        // 创建Blob对象\n        const blob = new Blob([response.data]);\n\n        // 创建下载链接\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n\n        // 从响应头中获取文件名\n        const contentDisposition = response.headers['content-disposition'];\n        console.log('Content-Disposition头部:', contentDisposition);\n        let filename = '未知文件';\n\n        // 首先尝试从审核详情中获取材料名称\n        const hasReviewDetail = typeof reviewDetail !== 'undefined' && reviewDetail.value && reviewDetail.value.material_name;\n        const reviewDetailName = hasReviewDetail ? reviewDetail.value.material_name : null;\n        if (contentDisposition) {\n          if (reviewDetailName && reviewDetailName.trim() !== '') {\n            console.log('使用审核详情中的材料名称:', reviewDetailName);\n            filename = reviewDetailName;\n          } else {\n            // RFC 8187/5987格式: filename*=UTF-8''encoded-value\n            const filenameStarMatch = contentDisposition.match(/filename\\*=UTF-8''([^;]+)/i);\n            if (filenameStarMatch && filenameStarMatch[1]) {\n              // 解码UTF-8编码的文件名\n              filename = decodeURIComponent(filenameStarMatch[1].replace(/\\+/g, ' '));\n              console.log('从RFC 5987格式解析的文件名:', filename);\n            } else {\n              // 尝试RFC 6266建议的传统格式: filename=\"value\"\n              const filenameMatch = contentDisposition.match(/filename=\"([^\"]*?)\"/i);\n              if (filenameMatch && filenameMatch[1]) {\n                filename = filenameMatch[1];\n                console.log('从带引号格式解析的文件名:', filename);\n              } else {\n                // 尝试无引号格式: filename=value\n                const noQuotesMatch = contentDisposition.match(/filename=([^;,\\s]+)/i);\n                if (noQuotesMatch && noQuotesMatch[1]) {\n                  filename = noQuotesMatch[1].trim();\n                  console.log('从无引号格式解析的文件名:', filename);\n                }\n              }\n            }\n          }\n        } else {\n          // 如果没有Content-Disposition头部，但有审核详情\n          if (hasReviewDetail) {\n            filename = reviewDetailName;\n            console.log('使用审核详情中的材料名称:', filename);\n          }\n        }\n\n        // 确保从MIME类型猜测正确的文件扩展名\n        const contentType = response.headers['content-type'];\n        console.log('Content-Type:', contentType);\n        if (contentType) {\n          // 如果文件名没有扩展名或者仍然是默认的\"未知文件\"\n          if (!filename.includes('.') || filename === '未知文件') {\n            const extension = getExtensionFromMimeType(contentType);\n            if (extension) {\n              filename += extension;\n              console.log('添加扩展名后的文件名:', filename);\n            }\n          }\n        }\n\n        // 如果文件名仍然是\"未知文件\"且有审核详情，使用材料名称\n        if ((filename === '未知文件' || filename === '未知文件.txt') && hasReviewDetail) {\n          // 确保有文件扩展名\n          if (contentType && !reviewDetailName.includes('.')) {\n            const extension = getExtensionFromMimeType(contentType);\n            filename = reviewDetailName + (extension || '');\n          } else {\n            filename = reviewDetailName;\n          }\n          console.log('使用审核详情材料名作为最终文件名:', filename);\n        }\n\n        // 如果仍然没有合适的文件名，尝试从URL中提取\n        if (filename === '未知文件' || filename === '未知文件.txt') {\n          // 尝试从URL末尾获取文件名\n          const urlParts = materialId.toString().split('/');\n          const lastPart = urlParts[urlParts.length - 1];\n          if (lastPart) {\n            if (contentType) {\n              const extension = getExtensionFromMimeType(contentType);\n              filename = `教学材料_${lastPart}${extension || ''}`;\n            } else {\n              filename = `教学材料_${lastPart}`;\n            }\n            console.log('从URL生成的文件名:', filename);\n          }\n        }\n\n        // 设置下载文件名\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n\n        // 清理URL对象\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n          document.body.removeChild(link);\n        }, 100);\n\n        // 记录下载次数\n        axios.post(`/api/material/download/${materialId}`).catch(error => {\n          console.error('更新下载次数失败:', error);\n        });\n        ElMessage.success('文件下载成功');\n      } catch (error) {\n        console.error('下载文件失败:', error);\n        ElMessage.error('下载文件失败');\n      }\n    };\n\n    // 根据MIME类型获取文件扩展名\n    const getExtensionFromMimeType = mimeType => {\n      const mimeExtMap = {\n        'application/pdf': '.pdf',\n        'application/msword': '.doc',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',\n        'application/vnd.ms-excel': '.xls',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',\n        'application/vnd.ms-powerpoint': '.ppt',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',\n        'text/plain': '.txt',\n        'text/html': '.html',\n        'text/xml': '.xml',\n        'image/jpeg': '.jpg',\n        'image/png': '.png',\n        'image/gif': '.gif',\n        'application/zip': '.zip',\n        'application/x-rar-compressed': '.rar',\n        'video/mp4': '.mp4',\n        'audio/mpeg': '.mp3'\n      };\n      return mimeExtMap[mimeType] || '';\n    };\n\n    // 添加全局错误处理，忽略ResizeObserver错误\n    const ignoreResizeObserverErrors = () => {\n      const originalConsoleError = console.error;\n      console.error = (...args) => {\n        if (args[0] && args[0].toString().includes('ResizeObserver')) {\n          return;\n        }\n        originalConsoleError.apply(console, args);\n      };\n      return () => {\n        console.error = originalConsoleError;\n      };\n    };\n    const resetResizeObserver = ignoreResizeObserverErrors();\n    onBeforeUnmount(() => {\n      resetResizeObserver();\n    });\n    const handleTabClick = tab => {\n      if (tab.props.name === 'submit') {\n        // 防止快速重复渲染导致的ResizeObserver错误\n        pendingTableVisible.value = false;\n        nextTick(() => {\n          submitTableVisible.value = true;\n          fetchSubmitReviews();\n        });\n      } else if (tab.props.name === 'pending') {\n        submitTableVisible.value = false;\n        nextTick(() => {\n          pendingTableVisible.value = true;\n          fetchPendingReviews();\n        });\n      }\n    };\n\n    // 添加表格resize回调\n    const onTableResize = () => {\n      // 通过返回Promise来延迟ResizeObserver的回调\n      return new Promise(resolve => setTimeout(resolve, 0));\n    };\n\n    // 添加防抖函数\n    const debounce = (fn, delay) => {\n      let timer = null;\n      return function (...args) {\n        if (timer) clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, delay);\n      };\n    };\n    onMounted(() => {\n      generateAcademicYears();\n      fetchSubmitReviews();\n\n      // 使用防抖来减少ResizeObserver警告\n      const resizeHandler = debounce(() => {\n        if (activeTab.value === 'submit') {\n          if (submitTableVisible.value) {\n            submitTableVisible.value = false;\n            nextTick(() => {\n              submitTableVisible.value = true;\n            });\n          }\n        } else if (activeTab.value === 'pending') {\n          if (pendingTableVisible.value) {\n            pendingTableVisible.value = false;\n            nextTick(() => {\n              pendingTableVisible.value = true;\n            });\n          }\n        }\n      }, 300);\n      window.addEventListener('resize', resizeHandler);\n      onBeforeUnmount(() => {\n        window.removeEventListener('resize', resizeHandler);\n      });\n    });\n\n    // 添加对话框关闭处理，清理相关状态\n    const handleDialogClose = () => {\n      reviewRecordTableVisible.value = false;\n      nextTick(() => {\n        reviewRecordTableVisible.value = true;\n      });\n    };\n    return {\n      activeTab,\n      academicYears,\n      submitQueryParams,\n      submitReviews,\n      submitTotal,\n      submitLoading,\n      fetchSubmitReviews,\n      handleSubmitCurrentChange,\n      pendingQueryParams,\n      pendingReviews,\n      pendingTotal,\n      pendingLoading,\n      fetchPendingReviews,\n      handlePendingCurrentChange,\n      detailDialogVisible,\n      reviewDetail,\n      reviewRecords,\n      viewReviewDetail,\n      reviewDialogVisible,\n      reviewForm,\n      submitReviewLoading,\n      reviewMaterial,\n      submitReview,\n      getStatusText,\n      getStatusType,\n      getReviewerTitleText,\n      formatFileSize,\n      downloadFile,\n      handleTabClick,\n      getExtensionFromMimeType,\n      submitTableVisible,\n      pendingTableVisible,\n      onTableResize,\n      reviewRecordTableVisible,\n      handleDialogClose,\n      safeElementConfig\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","nextTick","onBeforeUnmount","ElMessage","axios","useStore","safeElementConfig","name","setup","store","activeTab","currentUser","state","user","academicYears","generateAcademicYears","currentYear","Date","getFullYear","years","i","year","push","value","submitQueryParams","current","size","teacherId","academicYear","semester","status","submitReviews","submitTotal","submitLoading","submitTableVisible","fetchSubmitReviews","id","userInfo","JSON","parse","localStorage","getItem","warning","console","log","response","get","params","data","records","total","error","handleSubmitCurrentChange","pendingQueryParams","reviewerId","pendingReviews","pendingTotal","pendingLoading","pendingTableVisible","fetchPendingReviews","isMajorLeader","titlesResponse","code","titles","some","title","titleType","warn","rawRecords","uniqueRecordsMap","Map","record","has","set","Array","from","values","length","idCounts","forEach","duplicateIds","Object","entries","filter","count","map","duplicates","toString","handlePendingCurrentChange","detailDialogVisible","reviewDetail","reviewRecords","reviewRecordTableVisible","viewReviewDetail","reviewId","detailResponse","material_name","material_id","recordsResponse","reviewDialogVisible","reviewForm","reviewerTitle","result","comment","submitReviewLoading","reviewMaterial","submitReview","post","success","message","getStatusText","getStatusType","getReviewerTitleText","formatFileSize","units","index","fileSize","toFixed","downloadFile","materialId","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","contentDisposition","headers","filename","hasReviewDetail","reviewDetailName","trim","filenameStarMatch","match","decodeURIComponent","replace","filenameMatch","noQuotesMatch","contentType","includes","extension","getExtensionFromMimeType","urlParts","split","lastPart","download","body","appendChild","click","setTimeout","revokeObjectURL","removeChild","catch","mimeType","mimeExtMap","ignoreResizeObserverErrors","originalConsoleError","args","apply","resetResizeObserver","handleTabClick","tab","props","onTableResize","Promise","resolve","debounce","fn","delay","timer","clearTimeout","resizeHandler","addEventListener","removeEventListener","handleDialogClose"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\TCRSystem\\TCRSystem\\frontend\\src\\views\\teacher\\MaterialReview.vue"],"sourcesContent":["<template>\n  <div class=\"material-review\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>教学材料审核</span>\n        </div>\n      </template>\n      \n      <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n        <el-tab-pane label=\"我提交的审核\" name=\"submit\">\n          <div class=\"filter-container\">\n            <el-form :inline=\"true\" :model=\"submitQueryParams\" class=\"demo-form-inline\">\n              <el-form-item label=\"学年\">\n                <el-select v-model=\"submitQueryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n                  <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"学期\">\n                <el-select v-model=\"submitQueryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n                  <el-option label=\"第一学期\" :value=\"1\"></el-option>\n                  <el-option label=\"第二学期\" :value=\"2\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"状态\">\n                <el-select v-model=\"submitQueryParams.status\" placeholder=\"请选择状态\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n                  <el-option label=\"待审核\" :value=\"0\"></el-option>\n                  <el-option label=\"课程负责人审核中\" :value=\"1\"></el-option>\n                  <el-option label=\"专业负责人审核中\" :value=\"2\"></el-option>\n                  <el-option label=\"副院长审核中\" :value=\"3\"></el-option>\n                  <el-option label=\"教务人员审核中\" :value=\"4\"></el-option>\n                  <el-option label=\"审核通过\" :value=\"5\"></el-option>\n                  <el-option label=\"审核不通过\" :value=\"6\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"fetchSubmitReviews\">查询</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n          \n          <el-table :data=\"submitReviews\" style=\"width: 100%\" v-loading=\"submitLoading\" @resize=\"onTableResize\" v-if=\"submitTableVisible\">\n            <el-table-column prop=\"material_name\" label=\"材料名称\" width=\"180\"></el-table-column>\n            <el-table-column prop=\"course_name\" label=\"所属课程\" width=\"180\"></el-table-column>\n            <el-table-column prop=\"material_type_name\" label=\"材料类型\"></el-table-column>\n            <el-table-column prop=\"academic_year\" label=\"学年\"></el-table-column>\n            <el-table-column prop=\"semester\" label=\"学期\">\n              <template #default=\"scope\">\n                {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusText(scope.row.status) }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"create_time\" label=\"提交时间\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template #default=\"scope\">\n                <el-button type=\"text\" size=\"small\" @click=\"viewReviewDetail(scope.row.id)\">查看详情</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              background\n              layout=\"total, prev, pager, next\"\n              :total=\"submitTotal\"\n              :page-size=\"submitQueryParams.size\"\n              :current-page=\"submitQueryParams.current\"\n              @current-change=\"handleSubmitCurrentChange\"\n            ></el-pagination>\n          </div>\n        </el-tab-pane>\n        \n        <el-tab-pane label=\"待我审核\" name=\"pending\">\n          <div class=\"filter-container\">\n            <el-form :inline=\"true\" :model=\"pendingQueryParams\" class=\"demo-form-inline\">\n              <el-form-item label=\"学年\">\n                <el-select v-model=\"pendingQueryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n                  <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"学期\">\n                <el-select v-model=\"pendingQueryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n                  <el-option label=\"第一学期\" :value=\"1\"></el-option>\n                  <el-option label=\"第二学期\" :value=\"2\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"fetchPendingReviews\">查询</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n          \n          <el-table :data=\"pendingReviews\" style=\"width: 100%\" v-loading=\"pendingLoading\" @resize=\"onTableResize\" v-if=\"pendingTableVisible\">\n            <el-table-column prop=\"material_name\" label=\"材料名称\" width=\"180\"></el-table-column>\n            <el-table-column prop=\"course_name\" label=\"所属课程\" width=\"180\"></el-table-column>\n            <el-table-column prop=\"material_type_name\" label=\"材料类型\"></el-table-column>\n            <el-table-column prop=\"academic_year\" label=\"学年\"></el-table-column>\n            <el-table-column prop=\"semester\" label=\"学期\">\n              <template #default=\"scope\">\n                {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"submit_user_name\" label=\"提交人\"></el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\">\n              <template #default=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusText(scope.row.status) }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"create_time\" label=\"提交时间\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template #default=\"scope\">\n                <el-button type=\"text\" size=\"small\" @click=\"reviewMaterial(scope.row.id)\">审核</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              background\n              layout=\"total, prev, pager, next\"\n              :total=\"pendingTotal\"\n              :page-size=\"pendingQueryParams.size\"\n              :current-page=\"pendingQueryParams.current\"\n              @current-change=\"handlePendingCurrentChange\"\n            ></el-pagination>\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n    \n    <!-- 审核详情对话框 -->\n    <el-dialog \n      title=\"审核详情\" \n      v-model=\"detailDialogVisible\" \n      width=\"60%\"\n      @close=\"handleDialogClose\"\n      v-bind=\"safeElementConfig\">\n      <div v-if=\"reviewDetail\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"材料名称\">{{ reviewDetail.material_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"所属课程\">{{ reviewDetail.course_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料类型\">{{ reviewDetail.material_type_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"学年/学期\">{{ reviewDetail.academic_year }} / {{ reviewDetail.semester === 1 ? '第一学期' : '第二学期' }}</el-descriptions-item>\n          <el-descriptions-item label=\"提交人\">{{ reviewDetail.submit_user_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"提交时间\">{{ reviewDetail.create_time }}</el-descriptions-item>\n          <el-descriptions-item label=\"当前状态\">\n            <el-tag :type=\"getStatusType(reviewDetail.status)\">{{ getStatusText(reviewDetail.status) }}</el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"当前审核人\">{{ reviewDetail.current_reviewer_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料描述\" :span=\"2\">{{ reviewDetail.material_description }}</el-descriptions-item>\n        </el-descriptions>\n        \n        <div class=\"file-info\">\n          <h3>材料文件</h3>\n          <p>文件名：{{ reviewDetail.material_name }}</p>\n          <p>文件大小：{{ formatFileSize(reviewDetail.file_size) }}</p>\n          <p>文件类型：{{ reviewDetail.file_type }}</p>\n          <el-button type=\"primary\" size=\"small\" @click=\"downloadFile(reviewDetail.material_id)\">下载文件</el-button>\n        </div>\n        \n        <div class=\"review-records\">\n          <h3>审核记录</h3>\n          <el-table \n            :data=\"reviewRecords\" \n            style=\"width: 100%\"\n            @resize=\"onTableResize\"\n            v-if=\"reviewRecordTableVisible\">\n            <el-table-column prop=\"reviewer_name\" label=\"审核人\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"reviewer_title\" label=\"审核人职称\" width=\"120\">\n              <template #default=\"scope\">\n                {{ getReviewerTitleText(scope.row.reviewer_title) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"审核结果\" width=\"100\">\n              <template #default=\"scope\">\n                <el-tag :type=\"scope.row.result === 1 ? 'success' : 'danger'\">\n                  {{ scope.row.result === 1 ? '通过' : '不通过' }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"comment\" label=\"审核意见\"></el-table-column>\n            <el-table-column prop=\"create_time\" label=\"审核时间\" width=\"180\"></el-table-column>\n          </el-table>\n        </div>\n      </div>\n    </el-dialog>\n    \n    <!-- 审核对话框 -->\n    <el-dialog \n      title=\"审核材料\" \n      v-model=\"reviewDialogVisible\" \n      width=\"50%\"\n      @close=\"handleDialogClose\"\n      v-bind=\"safeElementConfig\">\n      <div v-if=\"reviewDetail\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"材料名称\">{{ reviewDetail.material_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"所属课程\">{{ reviewDetail.course_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料类型\">{{ reviewDetail.material_type_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"学年/学期\">{{ reviewDetail.academic_year }} / {{ reviewDetail.semester === 1 ? '第一学期' : '第二学期' }}</el-descriptions-item>\n          <el-descriptions-item label=\"提交人\">{{ reviewDetail.submit_user_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"提交时间\">{{ reviewDetail.create_time }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料描述\" :span=\"2\">{{ reviewDetail.material_description }}</el-descriptions-item>\n        </el-descriptions>\n        \n        <div class=\"file-info\">\n          <h3>材料文件</h3>\n          <p>文件名：{{ reviewDetail.material_name }}</p>\n          <p>文件大小：{{ formatFileSize(reviewDetail.file_size) }}</p>\n          <p>文件类型：{{ reviewDetail.file_type }}</p>\n          <el-button type=\"primary\" size=\"small\" @click=\"downloadFile(reviewDetail.material_id)\">下载文件</el-button>\n        </div>\n        \n        <el-form :model=\"reviewForm\" label-width=\"100px\" class=\"review-form\">\n          <el-form-item label=\"审核结果\" required>\n            <el-radio-group v-model=\"reviewForm.result\">\n              <el-radio :label=\"1\">通过</el-radio>\n              <el-radio :label=\"0\">不通过</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"审核意见\" required>\n            <el-input v-model=\"reviewForm.comment\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入审核意见\"></el-input>\n          </el-form-item>\n        </el-form>\n        \n        <div class=\"dialog-footer\">\n          <el-button @click=\"reviewDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitReview\" :loading=\"submitReviewLoading\">提交审核</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed, nextTick, onBeforeUnmount } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { safeElementConfig } from '@/utils/resizeObserverFix'\n\nexport default {\n  name: 'MaterialReview',\n  setup() {\n    const store = useStore();\n    const activeTab = ref('submit');\n    \n    // 当前用户信息\n    const currentUser = computed(() => store.state.user);\n    \n    // 学年列表\n    const academicYears = ref([]);\n    const generateAcademicYears = () => {\n      const currentYear = new Date().getFullYear();\n      const years = [];\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i;\n        years.push(`${year}-${year + 1}`);\n      }\n      academicYears.value = years;\n    };\n    \n    // 我提交的审核\n    const submitQueryParams = reactive({\n      current: 1,\n      size: 10,\n      teacherId: null,\n      academicYear: null,\n      semester: null,\n      status: null\n    });\n    const submitReviews = ref([]);\n    const submitTotal = ref(0);\n    const submitLoading = ref(false);\n    \n    const submitTableVisible = ref(true);\n    \n    const fetchSubmitReviews = async () => {\n      submitLoading.value = true;\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let teacherId = currentUser.value?.id;\n        if (!teacherId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          teacherId = userInfo.id;\n        }\n        \n        if (!teacherId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          submitLoading.value = false;\n          return;\n        }\n        \n        submitQueryParams.teacherId = teacherId;\n        console.log('提交的审核查询参数:', submitQueryParams);\n        \n        const response = await axios.get('/api/material-review/teacher-submit', {\n          params: submitQueryParams\n        });\n        console.log('提交的审核响应:', response.data);\n        \n        if (response.data && response.data.data) {\n          submitReviews.value = response.data.data.records || [];\n          submitTotal.value = response.data.data.total || 0;\n        } else {\n          submitReviews.value = [];\n          submitTotal.value = 0;\n        }\n      } catch (error) {\n        console.error('获取提交的审核列表失败', error);\n        ElMessage.error('获取提交的审核列表失败');\n        submitReviews.value = [];\n        submitTotal.value = 0;\n      } finally {\n        submitLoading.value = false;\n      }\n    };\n    \n    const handleSubmitCurrentChange = (current) => {\n      submitQueryParams.current = current;\n      fetchSubmitReviews();\n    };\n    \n    // 待我审核\n    const pendingQueryParams = reactive({\n      current: 1,\n      size: 10,\n      reviewerId: null,\n      academicYear: null,\n      semester: null\n    });\n    const pendingReviews = ref([]);\n    const pendingTotal = ref(0);\n    const pendingLoading = ref(false);\n    \n    const pendingTableVisible = ref(true);\n    \n    const fetchPendingReviews = async () => {\n      pendingLoading.value = true;\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let reviewerId = currentUser.value?.id;\n        if (!reviewerId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          reviewerId = userInfo.id;\n        }\n        \n        if (!reviewerId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          pendingLoading.value = false;\n          return;\n        }\n        \n        pendingQueryParams.reviewerId = reviewerId;\n        console.log('待审核查询参数:', pendingQueryParams);\n        \n        // 检查当前用户是否为专业负责人\n        let isMajorLeader = false;\n        try {\n          // 获取用户职称信息\n          const titlesResponse = await axios.get('/api/teacher/titles', {\n            params: { teacherId: reviewerId }\n          });\n          \n          if (titlesResponse.data && titlesResponse.data.code === 200 && titlesResponse.data.data) {\n            const titles = titlesResponse.data.data;\n            // 检查是否有专业负责人职称(titleType=2)\n            isMajorLeader = titles.some(title => title.titleType === 2);\n            console.log('当前用户是否为专业负责人:', isMajorLeader);\n          }\n        } catch (error) {\n          console.warn('获取用户职称信息失败:', error);\n        }\n        \n        const response = await axios.get('/api/material-review/teacher-pending', {\n          params: pendingQueryParams\n        });\n        console.log('待审核响应:', response.data);\n        \n        if (response.data && response.data.data) {\n          // 获取原始数据\n          const rawRecords = response.data.data.records || [];\n          \n          // 对于专业负责人，可能存在重复记录的问题，进行数据去重\n          // 使用Map来存储唯一的记录，以id为键\n          const uniqueRecordsMap = new Map();\n          \n          for (const record of rawRecords) {\n            // 只有当Map中不存在该id的记录时才添加\n            if (!uniqueRecordsMap.has(record.id)) {\n              uniqueRecordsMap.set(record.id, record);\n            }\n          }\n          \n          // 将Map转换回数组\n          pendingReviews.value = Array.from(uniqueRecordsMap.values());\n          pendingTotal.value = response.data.data.total || 0;\n          \n          // 如果去重后数量减少，更新total\n          if (pendingReviews.value.length < rawRecords.length) {\n            console.log(`检测到并移除了 ${rawRecords.length - pendingReviews.value.length} 条重复记录`);\n            \n            // 专业负责人问题的诊断日志\n            if (isMajorLeader) {\n              console.log('专业负责人模式: 记录重复问题诊断');\n              \n              // 创建一个ID出现次数的映射\n              const idCounts = {};\n              rawRecords.forEach(record => {\n                idCounts[record.id] = (idCounts[record.id] || 0) + 1;\n              });\n              \n              // 找出出现多次的ID\n              const duplicateIds = Object.entries(idCounts)\n                .filter(([, count]) => count > 1)\n                .map(([id, count]) => ({ id, count }));\n                \n              if (duplicateIds.length > 0) {\n                console.log('重复ID列表:', duplicateIds);\n                \n                // 对于每个重复的ID，输出它们的详细信息以找出差异\n                duplicateIds.forEach(({ id }) => {\n                  const duplicates = rawRecords.filter(record => record.id.toString() === id);\n                  console.log(`ID ${id} 的重复记录:`, duplicates);\n                });\n              }\n            }\n            \n            pendingTotal.value = pendingReviews.value.length;\n          }\n        } else {\n          pendingReviews.value = [];\n          pendingTotal.value = 0;\n        }\n      } catch (error) {\n        console.error('获取待审核列表失败', error);\n        ElMessage.error('获取待审核列表失败');\n        pendingReviews.value = [];\n        pendingTotal.value = 0;\n      } finally {\n        pendingLoading.value = false;\n      }\n    };\n    \n    const handlePendingCurrentChange = (current) => {\n      pendingQueryParams.current = current;\n      fetchPendingReviews();\n    };\n    \n    // 审核详情\n    const detailDialogVisible = ref(false);\n    const reviewDetail = ref(null);\n    const reviewRecords = ref([]);\n    const reviewRecordTableVisible = ref(true);\n    \n    const viewReviewDetail = async (reviewId) => {\n      try {\n        const detailResponse = await axios.get(`/api/material-review/detail/${reviewId}`);\n        console.log('审核详情响应:', detailResponse.data);\n        if (detailResponse.data && detailResponse.data.data) {\n          reviewDetail.value = detailResponse.data.data;\n          console.log('材料名称:', reviewDetail.value.material_name);\n          console.log('材料ID:', reviewDetail.value.material_id);\n          \n          const recordsResponse = await axios.get(`/api/material-review/records/${reviewId}`);\n          console.log('审核记录响应:', recordsResponse.data);\n          if (recordsResponse.data && recordsResponse.data.data) {\n            reviewRecords.value = recordsResponse.data.data || [];\n          } else {\n            reviewRecords.value = [];\n          }\n          \n          detailDialogVisible.value = true;\n          // 延迟渲染表格以防止ResizeObserver错误\n          reviewRecordTableVisible.value = false;\n          await nextTick();\n          reviewRecordTableVisible.value = true;\n        } else {\n          ElMessage.error('获取审核详情失败');\n        }\n      } catch (error) {\n        console.error('获取审核详情失败', error);\n        ElMessage.error('获取审核详情失败');\n        reviewRecords.value = [];\n      }\n    };\n    \n    // 审核材料\n    const reviewDialogVisible = ref(false);\n    const reviewForm = reactive({\n      reviewId: null,\n      reviewerId: null,\n      reviewerTitle: null,\n      result: 1,\n      comment: ''\n    });\n    const submitReviewLoading = ref(false);\n    \n    const reviewMaterial = async (reviewId) => {\n      try {\n        const response = await axios.get(`/api/material-review/detail/${reviewId}`);\n        console.log('审核材料详情响应:', response.data);\n        if (response.data && response.data.data) {\n          reviewDetail.value = response.data.data;\n          \n          // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n          let reviewerId = currentUser.value?.id;\n          if (!reviewerId) {\n            const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n            reviewerId = userInfo.id;\n          }\n          \n          if (!reviewerId) {\n            ElMessage.warning('无法获取用户信息，请重新登录');\n            return;\n          }\n          \n          reviewForm.reviewId = reviewId;\n          reviewForm.reviewerId = reviewerId;\n          \n          // 根据当前审核状态设置审核人职称\n          switch (reviewDetail.value.status) {\n            case 1: // 课程负责人审核中\n              reviewForm.reviewerTitle = 1;\n              break;\n            case 2: // 专业负责人审核中\n              reviewForm.reviewerTitle = 2;\n              break;\n            case 3: // 副院长审核中\n              reviewForm.reviewerTitle = 3;\n              break;\n            case 4: // 教务人员审核中\n              reviewForm.reviewerTitle = 4;\n              break;\n            default:\n              reviewForm.reviewerTitle = 0;\n          }\n          \n          reviewForm.result = 1;\n          reviewForm.comment = '';\n          \n          reviewDialogVisible.value = true;\n        } else {\n          ElMessage.error('获取审核详情失败');\n        }\n      } catch (error) {\n        console.error('获取审核详情失败', error);\n        ElMessage.error('获取审核详情失败');\n      }\n    };\n    \n    const submitReview = async () => {\n      if (!reviewForm.comment) {\n        ElMessage.warning('请输入审核意见');\n        return;\n      }\n      \n      submitReviewLoading.value = true;\n      try {\n        const response = await axios.post('/api/material-review/review', reviewForm);\n        if (response.data.code === 200) {\n          ElMessage.success('审核提交成功');\n          reviewDialogVisible.value = false;\n          fetchPendingReviews();\n        } else {\n          ElMessage.error(response.data.message || '审核提交失败');\n        }\n      } catch (error) {\n        console.error('审核提交失败', error);\n        ElMessage.error('审核提交失败');\n      } finally {\n        submitReviewLoading.value = false;\n      }\n    };\n    \n    // 工具函数\n    const getStatusText = (status) => {\n      switch (status) {\n        case 0: return '待审核';\n        case 1: return '课程负责人审核中';\n        case 2: return '专业负责人审核中';\n        case 3: return '副院长审核中';\n        case 4: return '教务人员审核中';\n        case 5: return '审核通过';\n        case 6: return '审核不通过';\n        default: return '未知状态';\n      }\n    };\n    \n    const getStatusType = (status) => {\n      switch (status) {\n        case 0: return 'info';\n        case 1: case 2: case 3: case 4: return 'warning';\n        case 5: return 'success';\n        case 6: return 'danger';\n        default: return 'info';\n      }\n    };\n    \n    const getReviewerTitleText = (title) => {\n      switch (title) {\n        case 0: return '普通教师';\n        case 1: return '课程负责人';\n        case 2: return '专业负责人';\n        case 3: return '副院长';\n        case 4: return '教务人员';\n        default: return '未知职称';\n      }\n    };\n    \n    const formatFileSize = (size) => {\n      if (!size) return '0 B';\n      const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n      let index = 0;\n      let fileSize = size;\n      while (fileSize >= 1024 && index < units.length - 1) {\n        fileSize /= 1024;\n        index++;\n      }\n      return fileSize.toFixed(2) + ' ' + units[index];\n    };\n    \n    const downloadFile = async (materialId) => {\n      if (!materialId) {\n        ElMessage.warning('材料ID为空');\n        return;\n      }\n      \n      try {\n        console.log('下载材料ID:', materialId);\n        // 使用axios下载文件\n        const response = await axios.get(`/api/material/download/${materialId}`, {\n          responseType: 'blob'\n        });\n        \n        // 创建Blob对象\n        const blob = new Blob([response.data]);\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        \n        // 从响应头中获取文件名\n        const contentDisposition = response.headers['content-disposition'];\n        console.log('Content-Disposition头部:', contentDisposition);\n        let filename = '未知文件';\n        \n        // 首先尝试从审核详情中获取材料名称\n        const hasReviewDetail = typeof reviewDetail !== 'undefined' && reviewDetail.value && reviewDetail.value.material_name;\n        const reviewDetailName = hasReviewDetail ? reviewDetail.value.material_name : null;\n        \n        if (contentDisposition) {\n          if (reviewDetailName && reviewDetailName.trim() !== '') {\n            console.log('使用审核详情中的材料名称:', reviewDetailName);\n            filename = reviewDetailName;\n          } else {\n            // RFC 8187/5987格式: filename*=UTF-8''encoded-value\n            const filenameStarMatch = contentDisposition.match(/filename\\*=UTF-8''([^;]+)/i);\n            if (filenameStarMatch && filenameStarMatch[1]) {\n              // 解码UTF-8编码的文件名\n              filename = decodeURIComponent(filenameStarMatch[1].replace(/\\+/g, ' '));\n              console.log('从RFC 5987格式解析的文件名:', filename);\n            } else {\n              // 尝试RFC 6266建议的传统格式: filename=\"value\"\n              const filenameMatch = contentDisposition.match(/filename=\"([^\"]*?)\"/i);\n              if (filenameMatch && filenameMatch[1]) {\n                filename = filenameMatch[1];\n                console.log('从带引号格式解析的文件名:', filename);\n              } else {\n                // 尝试无引号格式: filename=value\n                const noQuotesMatch = contentDisposition.match(/filename=([^;,\\s]+)/i);\n                if (noQuotesMatch && noQuotesMatch[1]) {\n                  filename = noQuotesMatch[1].trim();\n                  console.log('从无引号格式解析的文件名:', filename);\n                }\n              }\n            }\n          }\n        } else {\n          // 如果没有Content-Disposition头部，但有审核详情\n          if (hasReviewDetail) {\n            filename = reviewDetailName;\n            console.log('使用审核详情中的材料名称:', filename);\n          }\n        }\n        \n        // 确保从MIME类型猜测正确的文件扩展名\n        const contentType = response.headers['content-type'];\n        console.log('Content-Type:', contentType);\n        if (contentType) {\n          // 如果文件名没有扩展名或者仍然是默认的\"未知文件\"\n          if (!filename.includes('.') || filename === '未知文件') {\n            const extension = getExtensionFromMimeType(contentType);\n            if (extension) {\n              filename += extension;\n              console.log('添加扩展名后的文件名:', filename);\n            }\n          }\n        }\n        \n        // 如果文件名仍然是\"未知文件\"且有审核详情，使用材料名称\n        if ((filename === '未知文件' || filename === '未知文件.txt') && hasReviewDetail) {\n          // 确保有文件扩展名\n          if (contentType && !reviewDetailName.includes('.')) {\n            const extension = getExtensionFromMimeType(contentType);\n            filename = reviewDetailName + (extension || '');\n          } else {\n            filename = reviewDetailName;\n          }\n          console.log('使用审核详情材料名作为最终文件名:', filename);\n        }\n        \n        // 如果仍然没有合适的文件名，尝试从URL中提取\n        if (filename === '未知文件' || filename === '未知文件.txt') {\n          // 尝试从URL末尾获取文件名\n          const urlParts = materialId.toString().split('/');\n          const lastPart = urlParts[urlParts.length - 1];\n          if (lastPart) {\n            if (contentType) {\n              const extension = getExtensionFromMimeType(contentType);\n              filename = `教学材料_${lastPart}${extension || ''}`;\n            } else {\n              filename = `教学材料_${lastPart}`;\n            }\n            console.log('从URL生成的文件名:', filename);\n          }\n        }\n        \n        // 设置下载文件名\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        \n        // 清理URL对象\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n          document.body.removeChild(link);\n        }, 100);\n        \n        // 记录下载次数\n        axios.post(`/api/material/download/${materialId}`)\n          .catch(error => {\n            console.error('更新下载次数失败:', error);\n          });\n        \n        ElMessage.success('文件下载成功');\n      } catch (error) {\n        console.error('下载文件失败:', error);\n        ElMessage.error('下载文件失败');\n      }\n    };\n    \n    // 根据MIME类型获取文件扩展名\n    const getExtensionFromMimeType = (mimeType) => {\n      const mimeExtMap = {\n        'application/pdf': '.pdf',\n        'application/msword': '.doc',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',\n        'application/vnd.ms-excel': '.xls',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',\n        'application/vnd.ms-powerpoint': '.ppt',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',\n        'text/plain': '.txt',\n        'text/html': '.html',\n        'text/xml': '.xml',\n        'image/jpeg': '.jpg',\n        'image/png': '.png',\n        'image/gif': '.gif',\n        'application/zip': '.zip',\n        'application/x-rar-compressed': '.rar',\n        'video/mp4': '.mp4',\n        'audio/mpeg': '.mp3'\n      };\n      \n      return mimeExtMap[mimeType] || '';\n    };\n    \n    // 添加全局错误处理，忽略ResizeObserver错误\n    const ignoreResizeObserverErrors = () => {\n      const originalConsoleError = console.error;\n      console.error = (...args) => {\n        if (args[0] && args[0].toString().includes('ResizeObserver')) {\n          return;\n        }\n        originalConsoleError.apply(console, args);\n      };\n      \n      return () => {\n        console.error = originalConsoleError;\n      };\n    };\n    \n    const resetResizeObserver = ignoreResizeObserverErrors();\n    \n    onBeforeUnmount(() => {\n      resetResizeObserver();\n    });\n    \n    const handleTabClick = (tab) => {\n      if (tab.props.name === 'submit') {\n        // 防止快速重复渲染导致的ResizeObserver错误\n        pendingTableVisible.value = false;\n        nextTick(() => {\n          submitTableVisible.value = true;\n          fetchSubmitReviews();\n        });\n      } else if (tab.props.name === 'pending') {\n        submitTableVisible.value = false;\n        nextTick(() => {\n          pendingTableVisible.value = true;\n          fetchPendingReviews();\n        });\n      }\n    };\n    \n    // 添加表格resize回调\n    const onTableResize = () => {\n      // 通过返回Promise来延迟ResizeObserver的回调\n      return new Promise(resolve => setTimeout(resolve, 0));\n    };\n    \n    // 添加防抖函数\n    const debounce = (fn, delay) => {\n      let timer = null;\n      return function(...args) {\n        if (timer) clearTimeout(timer);\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n        }, delay);\n      };\n    };\n    \n    onMounted(() => {\n      generateAcademicYears();\n      fetchSubmitReviews();\n      \n      // 使用防抖来减少ResizeObserver警告\n      const resizeHandler = debounce(() => {\n        if (activeTab.value === 'submit') {\n          if (submitTableVisible.value) {\n            submitTableVisible.value = false;\n            nextTick(() => {\n              submitTableVisible.value = true;\n            });\n          }\n        } else if (activeTab.value === 'pending') {\n          if (pendingTableVisible.value) {\n            pendingTableVisible.value = false;\n            nextTick(() => {\n              pendingTableVisible.value = true;\n            });\n          }\n        }\n      }, 300);\n      \n      window.addEventListener('resize', resizeHandler);\n      \n      onBeforeUnmount(() => {\n        window.removeEventListener('resize', resizeHandler);\n      });\n    });\n    \n    // 添加对话框关闭处理，清理相关状态\n    const handleDialogClose = () => {\n      reviewRecordTableVisible.value = false;\n      nextTick(() => {\n        reviewRecordTableVisible.value = true;\n      });\n    };\n    \n    return {\n      activeTab,\n      academicYears,\n      submitQueryParams,\n      submitReviews,\n      submitTotal,\n      submitLoading,\n      fetchSubmitReviews,\n      handleSubmitCurrentChange,\n      pendingQueryParams,\n      pendingReviews,\n      pendingTotal,\n      pendingLoading,\n      fetchPendingReviews,\n      handlePendingCurrentChange,\n      detailDialogVisible,\n      reviewDetail,\n      reviewRecords,\n      viewReviewDetail,\n      reviewDialogVisible,\n      reviewForm,\n      submitReviewLoading,\n      reviewMaterial,\n      submitReview,\n      getStatusText,\n      getStatusType,\n      getReviewerTitleText,\n      formatFileSize,\n      downloadFile,\n      handleTabClick,\n      getExtensionFromMimeType,\n      submitTableVisible,\n      pendingTableVisible,\n      onTableResize,\n      reviewRecordTableVisible,\n      handleDialogClose,\n      safeElementConfig\n    };\n  }\n};\n</script>\n\n<style scoped>\n.material-review {\n  padding: 20px;\n}\n\n.filter-container {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.file-info {\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n}\n\n.review-records {\n  margin-top: 20px;\n}\n\n.review-form {\n  margin-top: 20px;\n}\n\n.dialog-footer {\n  margin-top: 20px;\n  text-align: right;\n}\n\n/* 确保下拉框中的选项文本不会被截断 */\n:deep(.el-select-dropdown__item) {\n  white-space: normal;\n  height: auto;\n  line-height: 1.5;\n  padding: 8px 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}