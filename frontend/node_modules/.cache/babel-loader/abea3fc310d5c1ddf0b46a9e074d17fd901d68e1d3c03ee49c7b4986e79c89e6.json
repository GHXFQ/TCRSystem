{"ast":null,"code":"import { ref, reactive, onMounted, nextTick } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport { safeElementConfig, safeTabsConfig } from '@/utils/resizeObserverFix';\n\n// 查询参数\n\nexport default {\n  __name: 'StudentManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const queryParams = reactive({\n      pageNum: 1,\n      pageSize: 10,\n      realName: '',\n      username: '',\n      classId: undefined\n    });\n\n    // 学生列表\n    const studentList = ref([]);\n    // 班级列表\n    const classList = ref([]);\n    // 专业列表\n    const majorList = ref([]);\n    // 总数据条数\n    const total = ref(0);\n    // 加载状态\n    const loading = ref(false);\n\n    // 学生对话框相关\n    const dialogVisible = ref(false);\n    const dialogTitle = ref('');\n    const dialogType = ref('add'); // add or edit\n    const studentFormRef = ref(null);\n    const studentForm = reactive({\n      id: undefined,\n      username: '',\n      realName: '',\n      password: '',\n      classId: undefined,\n      email: '',\n      phone: '',\n      status: 1,\n      role: 0 // 学生角色固定为0\n    });\n\n    // 学生表单验证规则\n    const studentRules = {\n      username: [{\n        required: true,\n        message: '请输入学号',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '长度在 3 到 20 个字符',\n        trigger: 'blur'\n      }],\n      realName: [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: dialogType === 'add',\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '长度在 6 到 20 个字符',\n        trigger: 'blur'\n      }],\n      classId: [{\n        required: true,\n        message: '请选择班级',\n        trigger: 'change'\n      }],\n      email: [{\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: 'blur'\n      }]\n    };\n\n    // 班级对话框相关\n    const classDialogVisible = ref(false);\n    const classFormRef = ref(null);\n    const classForm = reactive({\n      name: '',\n      majorId: undefined,\n      year: '',\n      description: ''\n    });\n\n    // 班级表单验证规则\n    const classRules = {\n      name: [{\n        required: true,\n        message: '请输入班级名称',\n        trigger: 'blur'\n      }],\n      majorId: [{\n        required: true,\n        message: '请选择所属专业',\n        trigger: 'change'\n      }],\n      year: [{\n        required: true,\n        message: '请选择入学年份',\n        trigger: 'change'\n      }]\n    };\n\n    // 选课对话框相关\n    const courseDialogVisible = ref(false);\n    const courseActiveTab = ref('selected');\n    const courseLoading = ref(false);\n    const currentStudent = ref({});\n    const selectedCourses = ref([]);\n    const availableCourses = ref([]);\n    const selectLoading = ref(false);\n    const dropLoading = ref(false);\n\n    // 获取学生列表\n    const fetchStudents = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/admin/student/list', {\n          params: queryParams\n        });\n        if (response.data.code === 200) {\n          studentList.value = response.data.data.records;\n          total.value = response.data.data.total;\n\n          // 确保班级名称正确显示\n          studentList.value.forEach(student => {\n            if (!student.className && student.classId) {\n              const classInfo = classList.value.find(c => c.id === student.classId);\n              if (classInfo) {\n                student.className = classInfo.name;\n              }\n            }\n          });\n        }\n      } catch (error) {\n        console.error('获取学生列表失败:', error);\n        ElMessage.error('获取学生列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取班级列表\n    const fetchClasses = async () => {\n      try {\n        const response = await axios.get('/api/admin/class/list');\n        if (response.data.code === 200) {\n          classList.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取班级列表失败:', error);\n        ElMessage.error('获取班级列表失败');\n      }\n    };\n\n    // 获取专业列表\n    const fetchMajors = async () => {\n      try {\n        const response = await axios.get('/api/admin/major/list');\n        if (response.data.code === 200) {\n          majorList.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取专业列表失败:', error);\n        ElMessage.error('获取专业列表失败');\n      }\n    };\n\n    // 重置查询条件\n    const resetQuery = () => {\n      queryParams.realName = '';\n      queryParams.username = '';\n      queryParams.classId = undefined;\n      fetchStudents();\n    };\n\n    // 处理页码变化\n    const handleCurrentChange = val => {\n      queryParams.pageNum = val;\n      fetchStudents();\n    };\n\n    // 处理每页条数变化\n    const handleSizeChange = val => {\n      queryParams.pageSize = val;\n      fetchStudents();\n    };\n\n    // 处理添加学生\n    const handleAdd = () => {\n      dialogType.value = 'add';\n      dialogTitle.value = '添加学生';\n      studentForm.id = undefined;\n      studentForm.username = '';\n      studentForm.realName = '';\n      studentForm.password = '';\n      studentForm.classId = undefined;\n      studentForm.email = '';\n      studentForm.phone = '';\n      studentForm.status = 1;\n      studentForm.role = 0;\n      dialogVisible.value = true;\n    };\n\n    // 处理编辑学生\n    const handleEdit = row => {\n      dialogType.value = 'edit';\n      dialogTitle.value = '编辑学生';\n      studentForm.id = row.id;\n      studentForm.username = row.username;\n      studentForm.realName = row.realName;\n      studentForm.password = ''; // 清空密码字段\n      studentForm.classId = row.classId;\n      studentForm.email = row.email;\n      studentForm.phone = row.phone;\n      studentForm.status = row.status;\n      studentForm.role = row.role;\n      dialogVisible.value = true;\n    };\n\n    // 处理删除学生\n    const handleDelete = row => {\n      ElMessageBox.confirm('确定要删除该学生吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await axios.delete(`/api/admin/student/${row.id}`);\n          if (response.data.code === 200) {\n            ElMessage.success('删除成功');\n            fetchStudents();\n          } else {\n            ElMessage.error(response.data.message || '删除失败');\n          }\n        } catch (error) {\n          console.error('删除学生失败:', error);\n          ElMessage.error('删除学生失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 处理状态变化\n    const handleStatusChange = async row => {\n      try {\n        const response = await axios.put('/api/admin/student/status', {\n          id: row.id,\n          status: row.status\n        });\n        if (response.data.code === 200) {\n          ElMessage.success(`${row.status === 1 ? '启用' : '禁用'}成功`);\n        } else {\n          ElMessage.error(response.data.message || '操作失败');\n          // 恢复原状态\n          row.status = row.status === 1 ? 0 : 1;\n        }\n      } catch (error) {\n        console.error('修改状态失败:', error);\n        ElMessage.error('修改状态失败');\n        // 恢复原状态\n        row.status = row.status === 1 ? 0 : 1;\n      }\n    };\n\n    // 提交学生表单\n    const submitStudentForm = () => {\n      studentFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            let response;\n            if (dialogType.value === 'add') {\n              response = await axios.post('/api/admin/student', studentForm);\n            } else {\n              response = await axios.put('/api/admin/student', studentForm);\n            }\n            if (response.data.code === 200) {\n              ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功');\n              dialogVisible.value = false;\n              fetchStudents();\n            } else {\n              ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'));\n            }\n          } catch (error) {\n            console.error(dialogType.value === 'add' ? '添加学生失败:' : '修改学生失败:', error);\n            ElMessage.error(dialogType.value === 'add' ? '添加学生失败' : '修改学生失败');\n          }\n        }\n      });\n    };\n\n    // 处理添加班级\n    const handleAddClass = () => {\n      classForm.name = '';\n      classForm.majorId = undefined;\n      classForm.year = '';\n      classForm.description = '';\n      classDialogVisible.value = true;\n    };\n\n    // 提交班级表单\n    const submitClassForm = () => {\n      classFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            const response = await axios.post('/api/admin/class', classForm);\n            if (response.data.code === 200) {\n              ElMessage.success('添加班级成功');\n              classDialogVisible.value = false;\n              fetchClasses();\n            } else {\n              ElMessage.error(response.data.message || '添加班级失败');\n            }\n          } catch (error) {\n            console.error('添加班级失败:', error);\n            ElMessage.error('添加班级失败');\n          }\n        }\n      });\n    };\n\n    // 处理管理选课\n    const handleManageCourses = async row => {\n      currentStudent.value = row;\n      courseDialogVisible.value = true;\n      courseActiveTab.value = 'selected';\n      await fetchStudentCourses(row.id);\n    };\n\n    // 获取学生课程\n    const fetchStudentCourses = async studentId => {\n      courseLoading.value = true;\n      try {\n        // 获取已选课程\n        const selectedResponse = await axios.get(`/api/student/course/${studentId}`);\n        if (selectedResponse.data.code === 200) {\n          selectedCourses.value = selectedResponse.data.data || [];\n        }\n\n        // 获取可选课程\n        const availableResponse = await axios.get('/api/admin/course/available', {\n          params: {\n            studentId\n          }\n        });\n        if (availableResponse.data.code === 200) {\n          availableCourses.value = availableResponse.data.data || [];\n        }\n\n        // 强制下一帧更新UI\n        await nextTick();\n        window.dispatchEvent(new Event('resize'));\n      } catch (error) {\n        console.error('获取学生课程失败:', error);\n        ElMessage.error('获取学生课程失败');\n      } finally {\n        courseLoading.value = false;\n      }\n    };\n\n    // 处理标签页切换\n    const handleTabChange = () => {\n      // 强制刷新表格\n      nextTick(() => {\n        window.dispatchEvent(new Event('resize'));\n      });\n    };\n\n    // 处理选课\n    const handleSelectCourse = async course => {\n      selectLoading.value = true;\n      try {\n        const response = await axios.post('/api/admin/student/course/select', {\n          studentId: currentStudent.value.id,\n          courseId: course.id\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('选课成功');\n          await fetchStudentCourses(currentStudent.value.id);\n        } else {\n          ElMessage.error(response.data.message || '选课失败');\n          console.error('选课返回错误:', response.data);\n        }\n      } catch (error) {\n        console.error('选课异常:', error);\n        ElMessage.error('选课失败，系统异常');\n\n        // 尝试重新加载课程数据\n        await fetchStudentCourses(currentStudent.value.id);\n      } finally {\n        selectLoading.value = false;\n      }\n    };\n\n    // 处理退课\n    const handleDropCourse = async course => {\n      dropLoading.value = true;\n      try {\n        const response = await axios.delete(`/api/admin/course-management/${course.id}/student/${currentStudent.value.id}`);\n        if (response.data.code === 200) {\n          ElMessage.success('退课成功');\n          await fetchStudentCourses(currentStudent.value.id);\n        } else {\n          ElMessage.error(response.data.message || '退课失败');\n          console.error('退课返回错误:', response.data);\n        }\n      } catch (error) {\n        console.error('退课异常:', error);\n        ElMessage.error('退课失败，系统异常');\n\n        // 尝试重新加载课程数据\n        await fetchStudentCourses(currentStudent.value.id);\n      } finally {\n        dropLoading.value = false;\n      }\n    };\n    onMounted(() => {\n      fetchStudents();\n      fetchClasses();\n      fetchMajors();\n    });\n    const __returned__ = {\n      queryParams,\n      studentList,\n      classList,\n      majorList,\n      total,\n      loading,\n      dialogVisible,\n      dialogTitle,\n      dialogType,\n      studentFormRef,\n      studentForm,\n      studentRules,\n      classDialogVisible,\n      classFormRef,\n      classForm,\n      classRules,\n      courseDialogVisible,\n      courseActiveTab,\n      courseLoading,\n      currentStudent,\n      selectedCourses,\n      availableCourses,\n      selectLoading,\n      dropLoading,\n      fetchStudents,\n      fetchClasses,\n      fetchMajors,\n      resetQuery,\n      handleCurrentChange,\n      handleSizeChange,\n      handleAdd,\n      handleEdit,\n      handleDelete,\n      handleStatusChange,\n      submitStudentForm,\n      handleAddClass,\n      submitClassForm,\n      handleManageCourses,\n      fetchStudentCourses,\n      handleTabChange,\n      handleSelectCourse,\n      handleDropCourse,\n      ref,\n      reactive,\n      onMounted,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      },\n      get safeElementConfig() {\n        return safeElementConfig;\n      },\n      get safeTabsConfig() {\n        return safeTabsConfig;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","ElMessage","ElMessageBox","axios","safeElementConfig","safeTabsConfig","queryParams","pageNum","pageSize","realName","username","classId","undefined","studentList","classList","majorList","total","loading","dialogVisible","dialogTitle","dialogType","studentFormRef","studentForm","id","password","email","phone","status","role","studentRules","required","message","trigger","min","max","type","classDialogVisible","classFormRef","classForm","name","majorId","year","description","classRules","courseDialogVisible","courseActiveTab","courseLoading","currentStudent","selectedCourses","availableCourses","selectLoading","dropLoading","fetchStudents","value","response","get","params","data","code","records","forEach","student","className","classInfo","find","c","error","console","fetchClasses","fetchMajors","resetQuery","handleCurrentChange","val","handleSizeChange","handleAdd","handleEdit","row","handleDelete","confirm","confirmButtonText","cancelButtonText","then","delete","success","catch","handleStatusChange","put","submitStudentForm","validate","valid","post","handleAddClass","submitClassForm","handleManageCourses","fetchStudentCourses","studentId","selectedResponse","availableResponse","window","dispatchEvent","Event","handleTabChange","handleSelectCourse","course","courseId","handleDropCourse"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/admin/StudentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-management\">\r\n    <h1>学生管理</h1>\r\n    \r\n    <el-card class=\"filter-card\">\r\n      <div class=\"filter-container\">\r\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"学生姓名\">\r\n            <el-input v-model=\"queryParams.realName\" placeholder=\"请输入学生姓名\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"学号\">\r\n            <el-input v-model=\"queryParams.username\" placeholder=\"请输入学号\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"班级\">\r\n            <el-select v-model=\"queryParams.classId\" placeholder=\"请选择班级\" clearable v-bind=\"safeElementConfig\">\r\n              <el-option\r\n                v-for=\"item in classList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"fetchStudents\">查询</el-button>\r\n            <el-button @click=\"resetQuery\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      \r\n      <div class=\"operation-container\">\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加学生</el-button>\r\n        <el-button type=\"success\" @click=\"handleAddClass\">添加班级</el-button>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <el-card class=\"table-card\">\r\n      <el-table :data=\"studentList\" style=\"width: 100%\" v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"学号\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"realName\" label=\"姓名\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"className\" label=\"班级\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"手机号\"></el-table-column>\r\n        <el-table-column label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.status\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              @change=\"handleStatusChange(scope.row)\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"250\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button type=\"success\" size=\"small\" @click=\"handleManageCourses(scope.row)\">管理选课</el-button>\r\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          :current-page=\"queryParams.pageNum\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          @current-change=\"handleCurrentChange\"\r\n          @size-change=\"handleSizeChange\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 添加/编辑学生对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"500px\" v-bind=\"safeElementConfig\">\r\n      <el-form :model=\"studentForm\" :rules=\"studentRules\" ref=\"studentFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"学号\" prop=\"username\">\r\n          <el-input v-model=\"studentForm.username\" placeholder=\"请输入学号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"realName\">\r\n          <el-input v-model=\"studentForm.realName\" placeholder=\"请输入姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogType === 'add'\">\r\n          <el-input v-model=\"studentForm.password\" placeholder=\"请输入密码\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"修改密码\" v-if=\"dialogType === 'edit'\">\r\n          <el-input v-model=\"studentForm.password\" placeholder=\"不修改请留空\" show-password></el-input>\r\n          <span class=\"tip-text\">不修改密码请留空</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"classId\">\r\n          <el-select v-model=\"studentForm.classId\" placeholder=\"请选择班级\" v-bind=\"safeElementConfig\">\r\n            <el-option\r\n              v-for=\"item in classList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"studentForm.email\" placeholder=\"请输入邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"studentForm.phone\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"studentForm.status\">\r\n            <el-radio :label=\"1\">启用</el-radio>\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitStudentForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 添加班级对话框 -->\r\n    <el-dialog title=\"添加班级\" v-model=\"classDialogVisible\" width=\"500px\" v-bind=\"safeElementConfig\">\r\n      <el-form :model=\"classForm\" :rules=\"classRules\" ref=\"classFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"班级名称\" prop=\"name\">\r\n          <el-input v-model=\"classForm.name\" placeholder=\"请输入班级名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"所属专业\" prop=\"majorId\">\r\n          <el-select v-model=\"classForm.majorId\" placeholder=\"请选择所属专业\" v-bind=\"safeElementConfig\">\r\n            <el-option\r\n              v-for=\"item in majorList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"入学年份\" prop=\"year\">\r\n          <el-date-picker\r\n            v-model=\"classForm.year\"\r\n            type=\"year\"\r\n            placeholder=\"选择年份\"\r\n            format=\"YYYY\"\r\n            value-format=\"YYYY\"\r\n            style=\"width: 100%\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"description\">\r\n          <el-input\r\n            v-model=\"classForm.description\"\r\n            type=\"textarea\"\r\n            placeholder=\"请输入班级描述\"\r\n            rows=\"3\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"classDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitClassForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 管理选课对话框 -->\r\n    <el-dialog \r\n      :title=\"`管理选课 - ${currentStudent.realName}`\" \r\n      v-model=\"courseDialogVisible\" \r\n      width=\"700px\" \r\n      v-bind=\"safeElementConfig\"\r\n      :destroy-on-close=\"true\"\r\n      :close-on-click-modal=\"false\"\r\n    >\r\n      <div class=\"course-management\">\r\n        <el-tabs \r\n          v-model=\"courseActiveTab\" \r\n          v-bind=\"safeTabsConfig\"\r\n          @tab-change=\"handleTabChange\"\r\n        >\r\n          <el-tab-pane label=\"已选课程\" name=\"selected\">\r\n            <el-table \r\n              :data=\"selectedCourses\" \r\n              style=\"width: 100%\" \r\n              v-loading=\"courseLoading\"\r\n              row-key=\"id\"\r\n            >\r\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\r\n              <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n              <el-table-column prop=\"classTime\" label=\"上课时间\"></el-table-column>\r\n              <el-table-column prop=\"classLocation\" label=\"上课地点\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button type=\"danger\" size=\"small\" @click=\"handleDropCourse(scope.row)\" :loading=\"dropLoading\">退选</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"可选课程\" name=\"available\">\r\n            <el-table \r\n              :data=\"availableCourses\" \r\n              style=\"width: 100%\" \r\n              v-loading=\"courseLoading\"\r\n              row-key=\"id\"\r\n            >\r\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\r\n              <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n              <el-table-column prop=\"classTime\" label=\"上课时间\"></el-table-column>\r\n              <el-table-column prop=\"classLocation\" label=\"上课地点\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button type=\"success\" size=\"small\" @click=\"handleSelectCourse(scope.row)\" :loading=\"selectLoading\">选课</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, nextTick } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\nimport { safeElementConfig, safeTabsConfig } from '@/utils/resizeObserverFix'\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  pageNum: 1,\r\n  pageSize: 10,\r\n  realName: '',\r\n  username: '',\r\n  classId: undefined\r\n})\r\n\r\n// 学生列表\r\nconst studentList = ref([])\r\n// 班级列表\r\nconst classList = ref([])\r\n// 专业列表\r\nconst majorList = ref([])\r\n// 总数据条数\r\nconst total = ref(0)\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 学生对话框相关\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst dialogType = ref('add') // add or edit\r\nconst studentFormRef = ref(null)\r\nconst studentForm = reactive({\r\n  id: undefined,\r\n  username: '',\r\n  realName: '',\r\n  password: '',\r\n  classId: undefined,\r\n  email: '',\r\n  phone: '',\r\n  status: 1,\r\n  role: 0 // 学生角色固定为0\r\n})\r\n\r\n// 学生表单验证规则\r\nconst studentRules = {\r\n  username: [\r\n    { required: true, message: '请输入学号', trigger: 'blur' },\r\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  realName: [\r\n    { required: true, message: '请输入姓名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: dialogType === 'add', message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  classId: [\r\n    { required: true, message: '请选择班级', trigger: 'change' }\r\n  ],\r\n  email: [\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 班级对话框相关\r\nconst classDialogVisible = ref(false)\r\nconst classFormRef = ref(null)\r\nconst classForm = reactive({\r\n  name: '',\r\n  majorId: undefined,\r\n  year: '',\r\n  description: ''\r\n})\r\n\r\n// 班级表单验证规则\r\nconst classRules = {\r\n  name: [\r\n    { required: true, message: '请输入班级名称', trigger: 'blur' }\r\n  ],\r\n  majorId: [\r\n    { required: true, message: '请选择所属专业', trigger: 'change' }\r\n  ],\r\n  year: [\r\n    { required: true, message: '请选择入学年份', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 选课对话框相关\r\nconst courseDialogVisible = ref(false)\r\nconst courseActiveTab = ref('selected')\r\nconst courseLoading = ref(false)\r\nconst currentStudent = ref({})\r\nconst selectedCourses = ref([])\r\nconst availableCourses = ref([])\r\nconst selectLoading = ref(false)\r\nconst dropLoading = ref(false)\r\n\r\n// 获取学生列表\r\nconst fetchStudents = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await axios.get('/api/admin/student/list', {\r\n      params: queryParams\r\n    })\r\n    if (response.data.code === 200) {\r\n      studentList.value = response.data.data.records\r\n      total.value = response.data.data.total\r\n      \r\n      // 确保班级名称正确显示\r\n      studentList.value.forEach(student => {\r\n        if (!student.className && student.classId) {\r\n          const classInfo = classList.value.find(c => c.id === student.classId)\r\n          if (classInfo) {\r\n            student.className = classInfo.name\r\n          }\r\n        }\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取学生列表失败:', error)\r\n    ElMessage.error('获取学生列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取班级列表\r\nconst fetchClasses = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/class/list')\r\n    if (response.data.code === 200) {\r\n      classList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取班级列表失败:', error)\r\n    ElMessage.error('获取班级列表失败')\r\n  }\r\n}\r\n\r\n// 获取专业列表\r\nconst fetchMajors = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/major/list')\r\n    if (response.data.code === 200) {\r\n      majorList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取专业列表失败:', error)\r\n    ElMessage.error('获取专业列表失败')\r\n  }\r\n}\r\n\r\n// 重置查询条件\r\nconst resetQuery = () => {\r\n  queryParams.realName = ''\r\n  queryParams.username = ''\r\n  queryParams.classId = undefined\r\n  fetchStudents()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  queryParams.pageNum = val\r\n  fetchStudents()\r\n}\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (val) => {\r\n  queryParams.pageSize = val\r\n  fetchStudents()\r\n}\r\n\r\n// 处理添加学生\r\nconst handleAdd = () => {\r\n  dialogType.value = 'add'\r\n  dialogTitle.value = '添加学生'\r\n  studentForm.id = undefined\r\n  studentForm.username = ''\r\n  studentForm.realName = ''\r\n  studentForm.password = ''\r\n  studentForm.classId = undefined\r\n  studentForm.email = ''\r\n  studentForm.phone = ''\r\n  studentForm.status = 1\r\n  studentForm.role = 0\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 处理编辑学生\r\nconst handleEdit = (row) => {\r\n  dialogType.value = 'edit'\r\n  dialogTitle.value = '编辑学生'\r\n  studentForm.id = row.id\r\n  studentForm.username = row.username\r\n  studentForm.realName = row.realName\r\n  studentForm.password = '' // 清空密码字段\r\n  studentForm.classId = row.classId\r\n  studentForm.email = row.email\r\n  studentForm.phone = row.phone\r\n  studentForm.status = row.status\r\n  studentForm.role = row.role\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 处理删除学生\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm('确定要删除该学生吗？', '提示', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    type: 'warning'\r\n  }).then(async () => {\r\n    try {\r\n      const response = await axios.delete(`/api/admin/student/${row.id}`)\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('删除成功')\r\n        fetchStudents()\r\n      } else {\r\n        ElMessage.error(response.data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除学生失败:', error)\r\n      ElMessage.error('删除学生失败')\r\n    }\r\n  }).catch(() => {})\r\n}\r\n\r\n// 处理状态变化\r\nconst handleStatusChange = async (row) => {\r\n  try {\r\n    const response = await axios.put('/api/admin/student/status', {\r\n      id: row.id,\r\n      status: row.status\r\n    })\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(`${row.status === 1 ? '启用' : '禁用'}成功`)\r\n    } else {\r\n      ElMessage.error(response.data.message || '操作失败')\r\n      // 恢复原状态\r\n      row.status = row.status === 1 ? 0 : 1\r\n    }\r\n  } catch (error) {\r\n    console.error('修改状态失败:', error)\r\n    ElMessage.error('修改状态失败')\r\n    // 恢复原状态\r\n    row.status = row.status === 1 ? 0 : 1\r\n  }\r\n}\r\n\r\n// 提交学生表单\r\nconst submitStudentForm = () => {\r\n  studentFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        let response\r\n        if (dialogType.value === 'add') {\r\n          response = await axios.post('/api/admin/student', studentForm)\r\n        } else {\r\n          response = await axios.put('/api/admin/student', studentForm)\r\n        }\r\n        \r\n        if (response.data.code === 200) {\r\n          ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功')\r\n          dialogVisible.value = false\r\n          fetchStudents()\r\n        } else {\r\n          ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(dialogType.value === 'add' ? '添加学生失败:' : '修改学生失败:', error)\r\n        ElMessage.error(dialogType.value === 'add' ? '添加学生失败' : '修改学生失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理添加班级\r\nconst handleAddClass = () => {\r\n  classForm.name = ''\r\n  classForm.majorId = undefined\r\n  classForm.year = ''\r\n  classForm.description = ''\r\n  classDialogVisible.value = true\r\n}\r\n\r\n// 提交班级表单\r\nconst submitClassForm = () => {\r\n  classFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const response = await axios.post('/api/admin/class', classForm)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('添加班级成功')\r\n          classDialogVisible.value = false\r\n          fetchClasses()\r\n        } else {\r\n          ElMessage.error(response.data.message || '添加班级失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('添加班级失败:', error)\r\n        ElMessage.error('添加班级失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理管理选课\r\nconst handleManageCourses = async (row) => {\r\n  currentStudent.value = row\r\n  courseDialogVisible.value = true\r\n  courseActiveTab.value = 'selected'\r\n  await fetchStudentCourses(row.id)\r\n}\r\n\r\n// 获取学生课程\r\nconst fetchStudentCourses = async (studentId) => {\r\n  courseLoading.value = true\r\n  try {\r\n    // 获取已选课程\r\n    const selectedResponse = await axios.get(`/api/student/course/${studentId}`)\r\n    if (selectedResponse.data.code === 200) {\r\n      selectedCourses.value = selectedResponse.data.data || []\r\n    }\r\n    \r\n    // 获取可选课程\r\n    const availableResponse = await axios.get('/api/admin/course/available', {\r\n      params: { studentId }\r\n    })\r\n    if (availableResponse.data.code === 200) {\r\n      availableCourses.value = availableResponse.data.data || []\r\n    }\r\n    \r\n    // 强制下一帧更新UI\r\n    await nextTick()\r\n    window.dispatchEvent(new Event('resize'))\r\n  } catch (error) {\r\n    console.error('获取学生课程失败:', error)\r\n    ElMessage.error('获取学生课程失败')\r\n  } finally {\r\n    courseLoading.value = false\r\n  }\r\n}\r\n\r\n// 处理标签页切换\r\nconst handleTabChange = () => {\r\n  // 强制刷新表格\r\n  nextTick(() => {\r\n    window.dispatchEvent(new Event('resize'))\r\n  })\r\n}\r\n\r\n// 处理选课\r\nconst handleSelectCourse = async (course) => {\r\n  selectLoading.value = true\r\n  try {\r\n    const response = await axios.post('/api/admin/student/course/select', {\r\n      studentId: currentStudent.value.id,\r\n      courseId: course.id\r\n    })\r\n    \r\n    if (response.data.code === 200) {\r\n      ElMessage.success('选课成功')\r\n      await fetchStudentCourses(currentStudent.value.id)\r\n    } else {\r\n      ElMessage.error(response.data.message || '选课失败')\r\n      console.error('选课返回错误:', response.data)\r\n    }\r\n  } catch (error) {\r\n    console.error('选课异常:', error)\r\n    ElMessage.error('选课失败，系统异常')\r\n    \r\n    // 尝试重新加载课程数据\r\n    await fetchStudentCourses(currentStudent.value.id)\r\n  } finally {\r\n    selectLoading.value = false\r\n  }\r\n}\r\n\r\n// 处理退课\r\nconst handleDropCourse = async (course) => {\r\n  dropLoading.value = true\r\n  try {\r\n    const response = await axios.delete(`/api/admin/course-management/${course.id}/student/${currentStudent.value.id}`)\r\n    \r\n    if (response.data.code === 200) {\r\n      ElMessage.success('退课成功')\r\n      await fetchStudentCourses(currentStudent.value.id)\r\n    } else {\r\n      ElMessage.error(response.data.message || '退课失败')\r\n      console.error('退课返回错误:', response.data)\r\n    }\r\n  } catch (error) {\r\n    console.error('退课异常:', error)\r\n    ElMessage.error('退课失败，系统异常')\r\n    \r\n    // 尝试重新加载课程数据\r\n    await fetchStudentCourses(currentStudent.value.id)\r\n  } finally {\r\n    dropLoading.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchStudents()\r\n  fetchClasses()\r\n  fetchMajors()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.student-management {\r\n  h1 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .operation-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .table-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  .course-management {\r\n    .el-tabs {\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    /* 解决标签页切换时的ResizeObserver错误 */\r\n    :deep(.el-tabs__content) {\r\n      min-height: 350px;\r\n      transform: translateZ(0);\r\n      contain: layout style;\r\n    }\r\n    \r\n    /* 为表格应用特殊的CSS修复 */\r\n    :deep(.el-table) {\r\n      overflow: hidden !important;\r\n      transform: translateZ(0);\r\n      min-height: 300px;\r\n      max-height: 450px;\r\n    }\r\n    \r\n    /* 确保表格内容能够滚动 */\r\n    :deep(.el-table__body-wrapper) {\r\n      overflow-y: auto !important;\r\n      min-height: 250px;\r\n    }\r\n  }\r\n  \r\n  .tip-text {\r\n    color: #909399;\r\n    font-size: 12px;\r\n    margin-top: 5px;\r\n    display: block;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}