{"ast":null,"code":"import { ref, reactive, onMounted, nextTick } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { Document, Timer, CircleCheck, CloseBold, ArrowDown } from '@element-plus/icons-vue';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'AssignmentManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n\n    // 状态变量\n    const loading = ref(false);\n    const submitting = ref(false);\n    const assignmentList = ref([]);\n    const courseList = ref([]);\n    const total = ref(0);\n    const publishDialogVisible = ref(false);\n    const detailDialogVisible = ref(false);\n    const currentAssignment = ref(null);\n    const submissionStats = ref(null);\n    const statistics = ref({});\n    const courseAssignmentStats = ref([]);\n    const submissionRateStats = ref([]);\n    const courseChartRef = ref(null);\n    const submissionChartRef = ref(null);\n    let courseChart = null;\n    let submissionChart = null;\n\n    // 查询参数\n    const queryParams = reactive({\n      current: 1,\n      pageSize: 10,\n      courseId: null,\n      status: null\n    });\n\n    // 作业表单\n    const assignmentFormRef = ref(null);\n    const assignmentForm = reactive({\n      id: null,\n      title: '',\n      description: '',\n      courseId: '',\n      deadline: '',\n      maxScore: 100,\n      status: 1 // 默认为进行中\n    });\n\n    // 表单校验规则\n    const rules = {\n      title: [{\n        required: true,\n        message: '请输入作业标题',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '标题长度在2到50个字符之间',\n        trigger: 'blur'\n      }],\n      courseId: [{\n        required: true,\n        message: '请选择所属课程',\n        trigger: 'change'\n      }],\n      deadline: [{\n        required: true,\n        message: '请选择截止时间',\n        trigger: 'change'\n      }]\n    };\n\n    // 获取状态类型\n    const getStatusType = status => {\n      switch (status) {\n        case 0:\n          return 'danger';\n        // 已关闭\n        case 1:\n          return 'primary';\n        // 进行中\n        case 2:\n          return 'success';\n        // 已结束\n        default:\n          return 'info';\n      }\n    };\n\n    // 获取状态文本\n    const getStatusText = status => {\n      switch (status) {\n        case 0:\n          return '已关闭';\n        case 1:\n          return '进行中';\n        case 2:\n          return '已结束';\n        default:\n          return '未知';\n      }\n    };\n\n    // 格式化日期时间\n    const formatDatetime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return dateTimeStr;\n      }\n    };\n\n    // 获取课程列表\n    const fetchCourseList = async () => {\n      try {\n        const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        const teacherId = userInfo.id;\n        if (!teacherId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          return;\n        }\n        const response = await axios.get(`/api/course/teacher/${teacherId}`);\n        courseList.value = response.data.data || [];\n      } catch (error) {\n        console.error('获取课程列表失败:', error);\n        ElMessage.error('获取课程列表失败');\n      }\n    };\n\n    // 获取作业列表\n    const fetchAssignments = async () => {\n      loading.value = true;\n      try {\n        const params = {\n          current: queryParams.current,\n          size: queryParams.pageSize,\n          courseId: queryParams.courseId,\n          status: queryParams.status\n        };\n        const response = await axios.get('/api/assignment/teacher/list', {\n          params\n        });\n        if (response.data.code === 200) {\n          assignmentList.value = response.data.data.records || [];\n          total.value = response.data.data.total || 0;\n        } else {\n          ElMessage.error(response.data.message || '获取作业列表失败');\n        }\n      } catch (error) {\n        console.error('获取作业列表失败:', error);\n        ElMessage.error('获取作业列表失败：' + (error.response?.data?.message || error.message));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取统计数据\n    const fetchStatistics = async () => {\n      try {\n        const response = await axios.get('/api/assignment/statistics');\n        if (response.data.code === 200) {\n          statistics.value = response.data.data || {};\n          courseAssignmentStats.value = response.data.data.courseAssignmentStats || [];\n\n          // 初始化图表\n          nextTick(() => {\n            initCourseChart();\n          });\n        }\n      } catch (error) {\n        console.error('获取统计数据失败:', error);\n        ElMessage.error('获取统计数据失败');\n      }\n    };\n\n    // 获取提交率统计\n    const fetchSubmissionRateInfo = async () => {\n      try {\n        const response = await axios.get('/api/assignment/submission-rate');\n        if (response.data.code === 200) {\n          submissionRateStats.value = response.data.data || [];\n\n          // 初始化图表\n          nextTick(() => {\n            initSubmissionChart();\n          });\n        }\n      } catch (error) {\n        console.error('获取提交率统计失败:', error);\n        ElMessage.error('获取提交率统计失败');\n      }\n    };\n\n    // 初始化课程作业统计图表\n    const initCourseChart = () => {\n      if (!courseChartRef.value || courseAssignmentStats.value.length === 0) return;\n\n      // 销毁已有的图表实例\n      if (courseChart) {\n        courseChart.dispose();\n      }\n      courseChart = echarts.init(courseChartRef.value);\n      const courseNames = courseAssignmentStats.value.map(item => item.courseName);\n      const assignmentCounts = courseAssignmentStats.value.map(item => item.assignmentCount);\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '作业数量',\n          nameLocation: 'end'\n        },\n        yAxis: {\n          type: 'category',\n          data: courseNames,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        series: [{\n          name: '作业数量',\n          type: 'bar',\n          data: assignmentCounts,\n          itemStyle: {\n            color: '#409EFF'\n          }\n        }]\n      };\n      courseChart.setOption(option);\n\n      // 监听窗口大小变化，调整图表大小\n      window.addEventListener('resize', () => {\n        courseChart && courseChart.resize();\n      });\n    };\n\n    // 初始化提交率统计图表\n    const initSubmissionChart = () => {\n      if (!submissionChartRef.value || submissionRateStats.value.length === 0) return;\n\n      // 销毁已有的图表实例\n      if (submissionChart) {\n        submissionChart.dispose();\n      }\n      submissionChart = echarts.init(submissionChartRef.value);\n      const titles = submissionRateStats.value.map(item => item.title);\n      const submissionRates = submissionRateStats.value.map(item => parseFloat(item.submissionRate));\n      const gradingRates = submissionRateStats.value.map(item => parseFloat(item.gradingRate));\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['提交率']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: titles,\n          axisLabel: {\n            interval: 0,\n            rotate: 30,\n            formatter: function (value) {\n              return value.length > 10 ? value.substring(0, 10) + '...' : value;\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '百分比',\n          min: 0,\n          max: 100,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        },\n        series: [{\n          name: '提交率',\n          type: 'bar',\n          stack: 'total',\n          itemStyle: {\n            color: '#67C23A'\n          },\n          data: submissionRates\n        }, {\n          name: '批改率',\n          type: 'bar',\n          stack: 'total',\n          itemStyle: {\n            color: '#409EFF'\n          },\n          data: gradingRates\n        }]\n      };\n      submissionChart.setOption(option);\n\n      // 监听窗口大小变化，调整图表大小\n      window.addEventListener('resize', () => {\n        submissionChart && submissionChart.resize();\n      });\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      queryParams.courseId = null;\n      queryParams.status = null;\n      queryParams.current = 1;\n      fetchAssignments();\n    };\n\n    // 处理页码变化\n    const handleCurrentChange = current => {\n      queryParams.current = current;\n      fetchAssignments();\n    };\n\n    // 处理每页条数变化\n    const handleSizeChange = size => {\n      queryParams.pageSize = size;\n      queryParams.current = 1;\n      fetchAssignments();\n    };\n\n    // 打开发布对话框\n    const openPublishDialog = () => {\n      // 重置表单\n      assignmentForm.id = null;\n      assignmentForm.title = '';\n      assignmentForm.description = '';\n      assignmentForm.courseId = null;\n      assignmentForm.deadline = '';\n      assignmentForm.maxScore = 100;\n      assignmentForm.status = 1;\n\n      // 打开对话框\n      publishDialogVisible.value = true;\n\n      // 重置表单验证\n      nextTick(() => {\n        assignmentFormRef.value?.resetFields();\n      });\n    };\n\n    // 提交作业表单\n    const submitAssignment = async () => {\n      // 表单验证\n      if (!assignmentFormRef.value) return;\n      await assignmentFormRef.value.validate(async valid => {\n        if (!valid) {\n          return false;\n        }\n        submitting.value = true;\n        try {\n          const response = await axios.post('/api/assignment/publish', assignmentForm);\n          if (response.data.code === 200) {\n            ElMessage.success('作业发布成功');\n            publishDialogVisible.value = false;\n\n            // 重新加载作业列表和统计数据\n            fetchAssignments();\n            fetchStatistics();\n            fetchSubmissionRateInfo();\n          } else {\n            ElMessage.error(response.data.message || '作业发布失败');\n          }\n        } catch (error) {\n          console.error('作业发布失败:', error);\n          ElMessage.error('作业发布失败：' + (error.response?.data?.message || error.message));\n        } finally {\n          submitting.value = false;\n        }\n      });\n    };\n\n    // 查看作业详情\n    const viewDetail = async assignment => {\n      currentAssignment.value = assignment;\n      detailDialogVisible.value = true;\n\n      // 获取提交统计\n      try {\n        const response = await axios.get(`/api/assignment/submission/statistics/${assignment.id}`);\n        if (response.data.code === 200) {\n          submissionStats.value = response.data.data || {};\n        }\n      } catch (error) {\n        console.error('获取提交统计失败:', error);\n        ElMessage.error('获取提交统计失败');\n      }\n    };\n\n    // 查看提交记录\n    const viewSubmissions = assignment => {\n      detailDialogVisible.value = false;\n\n      // 跳转到提交列表页面\n      router.push({\n        name: 'AssignmentSubmissions',\n        query: {\n          assignmentId: assignment.id,\n          title: assignment.title\n        }\n      });\n    };\n\n    // 处理状态更改命令\n    const handleCommand = async (command, assignment) => {\n      let status = null;\n      let statusText = '';\n      switch (command) {\n        case 'setOngoing':\n          status = 1;\n          statusText = '进行中';\n          break;\n        case 'setCompleted':\n          status = 2;\n          statusText = '已结束';\n          break;\n        case 'setClosed':\n          status = 0;\n          statusText = '已关闭';\n          break;\n        default:\n          return;\n      }\n      try {\n        // 确认操作\n        await ElMessageBox.confirm(`确定要将作业\"${assignment.title}\"设置为${statusText}吗？`, '确认操作', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        // 发送请求\n        const response = await axios.put(`/api/assignment/status/${assignment.id}?status=${status}`);\n        if (response.data.code === 200) {\n          ElMessage.success(`已将作业设置为${statusText}`);\n\n          // 更新本地数据\n          const index = assignmentList.value.findIndex(item => item.id === assignment.id);\n          if (index !== -1) {\n            assignmentList.value[index].status = status;\n          }\n\n          // 如果当前对话框打开，也更新详情中的状态\n          if (currentAssignment.value && currentAssignment.value.id === assignment.id) {\n            currentAssignment.value.status = status;\n          }\n\n          // 重新获取统计数据\n          fetchStatistics();\n        } else {\n          ElMessage.error(response.data.message || '操作失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('操作失败:', error);\n          ElMessage.error('操作失败：' + (error.response?.data?.message || error.message));\n        }\n      }\n    };\n\n    // 页面加载时获取数据\n    onMounted(async () => {\n      await fetchCourseList();\n      await fetchAssignments();\n      await fetchStatistics();\n      await fetchSubmissionRateInfo();\n    });\n    const __returned__ = {\n      router,\n      loading,\n      submitting,\n      assignmentList,\n      courseList,\n      total,\n      publishDialogVisible,\n      detailDialogVisible,\n      currentAssignment,\n      submissionStats,\n      statistics,\n      courseAssignmentStats,\n      submissionRateStats,\n      courseChartRef,\n      submissionChartRef,\n      get courseChart() {\n        return courseChart;\n      },\n      set courseChart(v) {\n        courseChart = v;\n      },\n      get submissionChart() {\n        return submissionChart;\n      },\n      set submissionChart(v) {\n        submissionChart = v;\n      },\n      queryParams,\n      assignmentFormRef,\n      assignmentForm,\n      rules,\n      getStatusType,\n      getStatusText,\n      formatDatetime,\n      fetchCourseList,\n      fetchAssignments,\n      fetchStatistics,\n      fetchSubmissionRateInfo,\n      initCourseChart,\n      initSubmissionChart,\n      resetQuery,\n      handleCurrentChange,\n      handleSizeChange,\n      openPublishDialog,\n      submitAssignment,\n      viewDetail,\n      viewSubmissions,\n      handleCommand,\n      ref,\n      reactive,\n      onMounted,\n      nextTick,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get Document() {\n        return Document;\n      },\n      get Timer() {\n        return Timer;\n      },\n      get CircleCheck() {\n        return CircleCheck;\n      },\n      get CloseBold() {\n        return CloseBold;\n      },\n      get ArrowDown() {\n        return ArrowDown;\n      },\n      get axios() {\n        return axios;\n      },\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","useRouter","ElMessage","ElMessageBox","Document","Timer","CircleCheck","CloseBold","ArrowDown","axios","echarts","router","loading","submitting","assignmentList","courseList","total","publishDialogVisible","detailDialogVisible","currentAssignment","submissionStats","statistics","courseAssignmentStats","submissionRateStats","courseChartRef","submissionChartRef","courseChart","submissionChart","queryParams","current","pageSize","courseId","status","assignmentFormRef","assignmentForm","id","title","description","deadline","maxScore","rules","required","message","trigger","min","max","getStatusType","getStatusText","formatDatetime","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","error","console","fetchCourseList","userInfo","JSON","parse","localStorage","getItem","teacherId","warning","response","get","value","data","fetchAssignments","params","size","code","records","fetchStatistics","initCourseChart","fetchSubmissionRateInfo","initSubmissionChart","length","dispose","init","courseNames","map","item","courseName","assignmentCounts","assignmentCount","option","tooltip","axisPointer","type","grid","left","right","bottom","containLabel","xAxis","name","nameLocation","yAxis","axisLabel","interval","rotate","series","itemStyle","color","setOption","window","addEventListener","resize","titles","submissionRates","parseFloat","submissionRate","gradingRates","gradingRate","legend","formatter","substring","stack","resetQuery","handleCurrentChange","handleSizeChange","openPublishDialog","resetFields","submitAssignment","validate","valid","post","success","viewDetail","assignment","viewSubmissions","push","query","assignmentId","handleCommand","command","statusText","confirm","confirmButtonText","cancelButtonText","put","index","findIndex"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/teacher/AssignmentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"assignment-management-container\">\r\n    <h1>课程任务管理</h1>\r\n    \r\n    <!-- 统计信息卡片组 -->\r\n    <div class=\"statistics-cards\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card total-card\">\r\n            <div class=\"stat-title\">作业任务总数</div>\r\n            <div class=\"stat-value\">{{ statistics.totalCount || 0 }}</div>\r\n            <div class=\"stat-icon\"><el-icon><Document /></el-icon></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card ongoing-card\">\r\n            <div class=\"stat-title\">进行中作业</div>\r\n            <div class=\"stat-value\">{{ statistics.ongoingCount || 0 }}</div>\r\n            <div class=\"stat-progress\">{{ statistics.ongoingRate || '0%' }}</div>\r\n            <div class=\"stat-icon\"><el-icon><Timer /></el-icon></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card completed-card\">\r\n            <div class=\"stat-title\">已结束作业</div>\r\n            <div class=\"stat-value\">{{ statistics.completedCount || 0 }}</div>\r\n            <div class=\"stat-progress\">{{ statistics.completedRate || '0%' }}</div>\r\n            <div class=\"stat-icon\"><el-icon><CircleCheck /></el-icon></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card closed-card\">\r\n            <div class=\"stat-title\">已关闭作业</div>\r\n            <div class=\"stat-value\">{{ statistics.closedCount || 0 }}</div>\r\n            <div class=\"stat-progress\">{{ statistics.closedRate || '0%' }}</div>\r\n            <div class=\"stat-icon\"><el-icon><CloseBold /></el-icon></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n    \r\n    <!-- 课程作业统计图表 -->\r\n    <el-card class=\"chart-card\" v-if=\"courseAssignmentStats.length > 0\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>课程作业统计</span>\r\n        </div>\r\n      </template>\r\n      <div class=\"chart-container\" ref=\"courseChartRef\"></div>\r\n    </el-card>\r\n    \r\n    <!-- 作业提交情况统计图表 -->\r\n    <el-card class=\"chart-card\" v-if=\"submissionRateStats.length > 0\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>作业提交率统计</span>\r\n        </div>\r\n      </template>\r\n      <div class=\"chart-container\" ref=\"submissionChartRef\"></div>\r\n    </el-card>\r\n    \r\n    <!-- 查询过滤卡片 -->\r\n    <el-card class=\"filter-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>作业管理</span>\r\n          <el-button type=\"primary\" @click=\"openPublishDialog\">发布新作业</el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"filter-form\">\r\n        <el-form-item label=\"课程\">\r\n          <el-select \r\n            v-model=\"queryParams.courseId\" \r\n            placeholder=\"选择课程\" \r\n            clearable \r\n            filterable\r\n            style=\"width: 220px;\"\r\n          >\r\n            <el-option\r\n              v-for=\"course in courseList\"\r\n              :key=\"course.id\"\r\n              :label=\"course.name\"\r\n              :value=\"course.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"状态\">\r\n          <el-select \r\n            v-model=\"queryParams.status\" \r\n            placeholder=\"选择状态\" \r\n            clearable \r\n            style=\"width: 120px;\"\r\n          >\r\n            <el-option label=\"进行中\" :value=\"1\"></el-option>\r\n            <el-option label=\"已结束\" :value=\"2\"></el-option>\r\n            <el-option label=\"已关闭\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"fetchAssignments\">查询</el-button>\r\n          <el-button @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    \r\n    <!-- 作业列表 -->\r\n    <el-card v-loading=\"loading\" class=\"assignments-card\">\r\n      <div class=\"assignments-tip\" v-if=\"!assignmentList.length && !loading\">\r\n        <el-empty description=\"暂无符合条件的作业，点击发布新作业开始\"></el-empty>\r\n      </div>\r\n      \r\n      <el-table \r\n        v-else \r\n        :data=\"assignmentList\" \r\n        style=\"width: 100%\"\r\n        border\r\n      >\r\n        <el-table-column prop=\"title\" label=\"作业标题\" min-width=\"180\" show-overflow-tooltip />\r\n        <el-table-column prop=\"courseName\" label=\"所属课程\" width=\"150\" show-overflow-tooltip />\r\n        <el-table-column prop=\"deadline\" label=\"截止时间\" width=\"180\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"submissionCount\" label=\"提交数\" width=\"100\" align=\"center\">\r\n          <template #default=\"scope\">\r\n            <el-badge :value=\"scope.row.submittedCount || 0\" :max=\"99\" type=\"primary\">\r\n              <el-button size=\"small\" text @click=\"viewSubmissions(scope.row)\">查看</el-button>\r\n            </el-badge>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"submissionRate\" label=\"提交率\" width=\"100\" align=\"center\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.submissionRate || '0%' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"avgScore\" label=\"平均分数\" width=\"100\" align=\"center\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.avgScore || '暂无' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"发布时间\" width=\"180\" />\r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button \r\n              type=\"primary\" \r\n              size=\"small\" \r\n              plain\r\n              @click=\"viewDetail(scope.row)\"\r\n            >详情</el-button>\r\n            \r\n            <el-dropdown trigger=\"click\" @command=\"(command) => handleCommand(command, scope.row)\">\r\n              <el-button size=\"small\" type=\"success\" plain>\r\n                状态<el-icon class=\"el-icon--right\"><ArrowDown /></el-icon>\r\n              </el-button>\r\n              <template #dropdown>\r\n                <el-dropdown-menu>\r\n                  <el-dropdown-item :disabled=\"scope.row.status === 1\" command=\"setOngoing\">设为进行中</el-dropdown-item>\r\n                  <el-dropdown-item :disabled=\"scope.row.status === 2\" command=\"setCompleted\">设为已结束</el-dropdown-item>\r\n                  <el-dropdown-item :disabled=\"scope.row.status === 0\" command=\"setClosed\">设为已关闭</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </template>\r\n            </el-dropdown>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          :current-page=\"queryParams.current\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 发布作业对话框 -->\r\n    <el-dialog\r\n      v-model=\"publishDialogVisible\"\r\n      title=\"发布新作业\"\r\n      width=\"600px\"\r\n      :close-on-click-modal=\"false\"\r\n    >\r\n      <el-form :model=\"assignmentForm\" :rules=\"rules\" ref=\"assignmentFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"作业标题\" prop=\"title\">\r\n          <el-input v-model=\"assignmentForm.title\" placeholder=\"请输入作业标题\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"所属课程\" prop=\"courseId\">\r\n          <el-select \r\n            v-model=\"assignmentForm.courseId\" \r\n            placeholder=\"选择课程\" \r\n            style=\"width: 100%;\"\r\n            filterable\r\n          >\r\n            <el-option\r\n              v-for=\"course in courseList\"\r\n              :key=\"course.id\"\r\n              :label=\"course.name\"\r\n              :value=\"course.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"作业描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"assignmentForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"4\" \r\n            placeholder=\"请输入作业描述\" \r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"截止日期\" prop=\"deadline\">\r\n          <el-date-picker v-model=\"assignmentForm.deadline\" type=\"datetime\" placeholder=\"选择日期时间\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"满分分数\" prop=\"maxScore\">\r\n          <el-input-number v-model=\"assignmentForm.maxScore\" :min=\"0\" :max=\"100\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"publishDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitAssignment\" :loading=\"submitting\">发布</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 作业详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"detailDialogVisible\"\r\n      title=\"作业详情\"\r\n      width=\"700px\"\r\n    >\r\n      <div v-if=\"currentAssignment\" class=\"assignment-detail\">\r\n        <h2>{{ currentAssignment.title }}</h2>\r\n        \r\n        <div class=\"detail-row\">\r\n          <div class=\"detail-label\">所属课程：</div>\r\n          <div class=\"detail-value\">{{ currentAssignment.courseName }}</div>\r\n        </div>\r\n        \r\n        <div class=\"detail-row\">\r\n          <div class=\"detail-label\">截止日期：</div>\r\n          <div class=\"detail-value\">{{ formatDatetime(currentAssignment.deadline) }}</div>\r\n        </div>\r\n        \r\n        <div class=\"detail-row\">\r\n          <div class=\"detail-label\">状态：</div>\r\n          <div class=\"detail-value\">\r\n            <el-tag :type=\"getStatusType(currentAssignment.status)\">\r\n              {{ getStatusText(currentAssignment.status) }}\r\n            </el-tag>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"detail-row\">\r\n          <div class=\"detail-label\">满分分数：</div>\r\n          <div class=\"detail-value\">{{ currentAssignment.maxScore || 100 }}</div>\r\n        </div>\r\n        \r\n        <div class=\"detail-description\">\r\n          <div class=\"detail-label\">作业描述：</div>\r\n          <div class=\"detail-content\">{{ currentAssignment.description || '无' }}</div>\r\n        </div>\r\n        \r\n        <!-- 提交统计信息 -->\r\n        <div class=\"submission-stats\" v-if=\"submissionStats\">\r\n          <h3>提交统计</h3>\r\n          \r\n          <div class=\"stats-row\">\r\n            <div class=\"stat-box\">\r\n              <div class=\"stat-label\">学生总数</div>\r\n              <div class=\"stat-number\">{{ submissionStats.totalStudents || 0 }}</div>\r\n            </div>\r\n            \r\n            <div class=\"stat-box\">\r\n              <div class=\"stat-label\">已提交数</div>\r\n              <div class=\"stat-number\">{{ submissionStats.submittedCount || 0 }}</div>\r\n            </div>\r\n            \r\n            <div class=\"stat-box\">\r\n              <div class=\"stat-label\">提交率</div>\r\n              <div class=\"stat-number\">{{ submissionStats.submissionRate || '0%' }}</div>\r\n            </div>\r\n            \r\n            <div class=\"stat-box\">\r\n              <div class=\"stat-label\">批改数</div>\r\n              <div class=\"stat-number\">{{ submissionStats.gradedCount || 0 }}</div>\r\n            </div>\r\n            \r\n            <div class=\"stat-box\">\r\n              <div class=\"stat-label\">批改率</div>\r\n              <div class=\"stat-number\">{{ submissionStats.gradingRate || '0%' }}</div>\r\n            </div>\r\n            \r\n            <div class=\"stat-box\">\r\n              <div class=\"stat-label\">平均分</div>\r\n              <div class=\"stat-number\">{{ submissionStats.avgScore || '暂无' }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"detailDialogVisible = false\">关闭</el-button>\r\n          <el-button type=\"primary\" @click=\"viewSubmissions(currentAssignment)\">查看提交</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive,  onMounted, nextTick } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Document, Timer, CircleCheck, CloseBold, ArrowDown } from '@element-plus/icons-vue'\r\nimport axios from 'axios'\r\nimport * as echarts from 'echarts'\r\n\r\nconst router = useRouter()\r\n\r\n// 状态变量\r\nconst loading = ref(false)\r\nconst submitting = ref(false)\r\nconst assignmentList = ref([])\r\nconst courseList = ref([])\r\nconst total = ref(0)\r\nconst publishDialogVisible = ref(false)\r\nconst detailDialogVisible = ref(false)\r\nconst currentAssignment = ref(null)\r\nconst submissionStats = ref(null)\r\nconst statistics = ref({})\r\nconst courseAssignmentStats = ref([])\r\nconst submissionRateStats = ref([])\r\nconst courseChartRef = ref(null)\r\nconst submissionChartRef = ref(null)\r\nlet courseChart = null\r\nlet submissionChart = null\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  current: 1,\r\n  pageSize: 10,\r\n  courseId: null,\r\n  status: null\r\n})\r\n\r\n// 作业表单\r\nconst assignmentFormRef = ref(null)\r\nconst assignmentForm = reactive({\r\n  id: null,\r\n  title: '',\r\n  description: '',\r\n  courseId: '',\r\n  deadline: '',\r\n  maxScore: 100,\r\n  status: 1 // 默认为进行中\r\n})\r\n\r\n// 表单校验规则\r\nconst rules = {\r\n  title: [\r\n    { required: true, message: '请输入作业标题', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '标题长度在2到50个字符之间', trigger: 'blur' }\r\n  ],\r\n  courseId: [\r\n    { required: true, message: '请选择所属课程', trigger: 'change' }\r\n  ],\r\n  deadline: [\r\n    { required: true, message: '请选择截止时间', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 获取状态类型\r\nconst getStatusType = (status) => {\r\n  switch (status) {\r\n    case 0: return 'danger'   // 已关闭\r\n    case 1: return 'primary'  // 进行中\r\n    case 2: return 'success'  // 已结束\r\n    default: return 'info'\r\n  }\r\n}\r\n\r\n// 获取状态文本\r\nconst getStatusText = (status) => {\r\n  switch (status) {\r\n    case 0: return '已关闭'\r\n    case 1: return '进行中'\r\n    case 2: return '已结束'\r\n    default: return '未知'\r\n  }\r\n}\r\n\r\n// 格式化日期时间\r\nconst formatDatetime = (dateTimeStr) => {\r\n  if (!dateTimeStr) return ''\r\n  \r\n  try {\r\n    const date = new Date(dateTimeStr)\r\n    return date.toLocaleString('zh-CN', { \r\n      year: 'numeric', \r\n      month: '2-digit', \r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    })\r\n  } catch (error) {\r\n    console.error('日期格式化错误:', error)\r\n    return dateTimeStr\r\n  }\r\n}\r\n\r\n// 获取课程列表\r\nconst fetchCourseList = async () => {\r\n  try {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}')\r\n    const teacherId = userInfo.id\r\n    \r\n    if (!teacherId) {\r\n      ElMessage.warning('无法获取用户信息，请重新登录')\r\n      return\r\n    }\r\n    \r\n    const response = await axios.get(`/api/course/teacher/${teacherId}`)\r\n    courseList.value = response.data.data || []\r\n  } catch (error) {\r\n    console.error('获取课程列表失败:', error)\r\n    ElMessage.error('获取课程列表失败')\r\n  }\r\n}\r\n\r\n// 获取作业列表\r\nconst fetchAssignments = async () => {\r\n  loading.value = true\r\n  try {\r\n    const params = {\r\n      current: queryParams.current,\r\n      size: queryParams.pageSize,\r\n      courseId: queryParams.courseId,\r\n      status: queryParams.status\r\n    }\r\n    \r\n    const response = await axios.get('/api/assignment/teacher/list', { params })\r\n    \r\n    if (response.data.code === 200) {\r\n      assignmentList.value = response.data.data.records || []\r\n      total.value = response.data.data.total || 0\r\n    } else {\r\n      ElMessage.error(response.data.message || '获取作业列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取作业列表失败:', error)\r\n    ElMessage.error('获取作业列表失败：' + (error.response?.data?.message || error.message))\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取统计数据\r\nconst fetchStatistics = async () => {\r\n  try {\r\n    const response = await axios.get('/api/assignment/statistics')\r\n    \r\n    if (response.data.code === 200) {\r\n      statistics.value = response.data.data || {}\r\n      courseAssignmentStats.value = response.data.data.courseAssignmentStats || []\r\n      \r\n      // 初始化图表\r\n      nextTick(() => {\r\n        initCourseChart()\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取统计数据失败:', error)\r\n    ElMessage.error('获取统计数据失败')\r\n  }\r\n}\r\n\r\n// 获取提交率统计\r\nconst fetchSubmissionRateInfo = async () => {\r\n  try {\r\n    const response = await axios.get('/api/assignment/submission-rate')\r\n    \r\n    if (response.data.code === 200) {\r\n      submissionRateStats.value = response.data.data || []\r\n      \r\n      // 初始化图表\r\n      nextTick(() => {\r\n        initSubmissionChart()\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取提交率统计失败:', error)\r\n    ElMessage.error('获取提交率统计失败')\r\n  }\r\n}\r\n\r\n// 初始化课程作业统计图表\r\nconst initCourseChart = () => {\r\n  if (!courseChartRef.value || courseAssignmentStats.value.length === 0) return\r\n  \r\n  // 销毁已有的图表实例\r\n  if (courseChart) {\r\n    courseChart.dispose()\r\n  }\r\n  \r\n  courseChart = echarts.init(courseChartRef.value)\r\n  \r\n  const courseNames = courseAssignmentStats.value.map(item => item.courseName)\r\n  const assignmentCounts = courseAssignmentStats.value.map(item => item.assignmentCount)\r\n  \r\n  const option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'shadow'\r\n      }\r\n    },\r\n    grid: {\r\n      left: '3%',\r\n      right: '4%',\r\n      bottom: '3%',\r\n      containLabel: true\r\n    },\r\n    xAxis: {\r\n      type: 'value',\r\n      name: '作业数量',\r\n      nameLocation: 'end'\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: courseNames,\r\n      axisLabel: {\r\n        interval: 0,\r\n        rotate: 30\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: '作业数量',\r\n        type: 'bar',\r\n        data: assignmentCounts,\r\n        itemStyle: {\r\n          color: '#409EFF'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  \r\n  courseChart.setOption(option)\r\n  \r\n  // 监听窗口大小变化，调整图表大小\r\n  window.addEventListener('resize', () => {\r\n    courseChart && courseChart.resize()\r\n  })\r\n}\r\n\r\n// 初始化提交率统计图表\r\nconst initSubmissionChart = () => {\r\n  if (!submissionChartRef.value || submissionRateStats.value.length === 0) return\r\n  \r\n  // 销毁已有的图表实例\r\n  if (submissionChart) {\r\n    submissionChart.dispose()\r\n  }\r\n  \r\n  submissionChart = echarts.init(submissionChartRef.value)\r\n  \r\n  const titles = submissionRateStats.value.map(item => item.title)\r\n  const submissionRates = submissionRateStats.value.map(item => parseFloat(item.submissionRate))\r\n  const gradingRates = submissionRateStats.value.map(item => parseFloat(item.gradingRate))\r\n  \r\n  const option = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'shadow'\r\n      }\r\n    },\r\n    legend: {\r\n      data: ['提交率']\r\n    },\r\n    grid: {\r\n      left: '3%',\r\n      right: '4%',\r\n      bottom: '3%',\r\n      containLabel: true\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: titles,\r\n      axisLabel: {\r\n        interval: 0,\r\n        rotate: 30,\r\n        formatter: function(value) {\r\n          return value.length > 10 ? value.substring(0, 10) + '...' : value\r\n        }\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      name: '百分比',\r\n      min: 0,\r\n      max: 100,\r\n      axisLabel: {\r\n        formatter: '{value}%'\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: '提交率',\r\n        type: 'bar',\r\n        stack: 'total',\r\n        itemStyle: {\r\n          color: '#67C23A'\r\n        },\r\n        data: submissionRates\r\n      },\r\n      {\r\n        name: '批改率',\r\n        type: 'bar',\r\n        stack: 'total',\r\n        itemStyle: {\r\n          color: '#409EFF'\r\n        },\r\n        data: gradingRates\r\n      }\r\n    ]\r\n  }\r\n  \r\n  submissionChart.setOption(option)\r\n  \r\n  // 监听窗口大小变化，调整图表大小\r\n  window.addEventListener('resize', () => {\r\n    submissionChart && submissionChart.resize()\r\n  })\r\n}\r\n\r\n// 重置查询\r\nconst resetQuery = () => {\r\n  queryParams.courseId = null\r\n  queryParams.status = null\r\n  queryParams.current = 1\r\n  fetchAssignments()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (current) => {\r\n  queryParams.current = current\r\n  fetchAssignments()\r\n}\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  queryParams.pageSize = size\r\n  queryParams.current = 1\r\n  fetchAssignments()\r\n}\r\n\r\n// 打开发布对话框\r\nconst openPublishDialog = () => {\r\n  // 重置表单\r\n  assignmentForm.id = null\r\n  assignmentForm.title = ''\r\n  assignmentForm.description = ''\r\n  assignmentForm.courseId = null\r\n  assignmentForm.deadline = ''\r\n  assignmentForm.maxScore = 100\r\n  assignmentForm.status = 1\r\n  \r\n  // 打开对话框\r\n  publishDialogVisible.value = true\r\n  \r\n  // 重置表单验证\r\n  nextTick(() => {\r\n    assignmentFormRef.value?.resetFields()\r\n  })\r\n}\r\n\r\n// 提交作业表单\r\nconst submitAssignment = async () => {\r\n  // 表单验证\r\n  if (!assignmentFormRef.value) return\r\n  \r\n  await assignmentFormRef.value.validate(async (valid) => {\r\n    if (!valid) {\r\n      return false\r\n    }\r\n    \r\n    submitting.value = true\r\n    try {\r\n      const response = await axios.post('/api/assignment/publish', assignmentForm)\r\n      \r\n      if (response.data.code === 200) {\r\n        ElMessage.success('作业发布成功')\r\n        publishDialogVisible.value = false\r\n        \r\n        // 重新加载作业列表和统计数据\r\n        fetchAssignments()\r\n        fetchStatistics()\r\n        fetchSubmissionRateInfo()\r\n      } else {\r\n        ElMessage.error(response.data.message || '作业发布失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('作业发布失败:', error)\r\n      ElMessage.error('作业发布失败：' + (error.response?.data?.message || error.message))\r\n    } finally {\r\n      submitting.value = false\r\n    }\r\n  })\r\n}\r\n\r\n// 查看作业详情\r\nconst viewDetail = async (assignment) => {\r\n  currentAssignment.value = assignment\r\n  detailDialogVisible.value = true\r\n  \r\n  // 获取提交统计\r\n  try {\r\n    const response = await axios.get(`/api/assignment/submission/statistics/${assignment.id}`)\r\n    \r\n    if (response.data.code === 200) {\r\n      submissionStats.value = response.data.data || {}\r\n    }\r\n  } catch (error) {\r\n    console.error('获取提交统计失败:', error)\r\n    ElMessage.error('获取提交统计失败')\r\n  }\r\n}\r\n\r\n// 查看提交记录\r\nconst viewSubmissions = (assignment) => {\r\n  detailDialogVisible.value = false\r\n  \r\n  // 跳转到提交列表页面\r\n  router.push({\r\n    name: 'AssignmentSubmissions',\r\n    query: {\r\n      assignmentId: assignment.id,\r\n      title: assignment.title\r\n    }\r\n  })\r\n}\r\n\r\n// 处理状态更改命令\r\nconst handleCommand = async (command, assignment) => {\r\n  let status = null\r\n  let statusText = ''\r\n  \r\n  switch (command) {\r\n    case 'setOngoing':\r\n      status = 1\r\n      statusText = '进行中'\r\n      break\r\n    case 'setCompleted':\r\n      status = 2\r\n      statusText = '已结束'\r\n      break\r\n    case 'setClosed':\r\n      status = 0\r\n      statusText = '已关闭'\r\n      break\r\n    default:\r\n      return\r\n  }\r\n  \r\n  try {\r\n    // 确认操作\r\n    await ElMessageBox.confirm(\r\n      `确定要将作业\"${assignment.title}\"设置为${statusText}吗？`,\r\n      '确认操作',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    // 发送请求\r\n    const response = await axios.put(`/api/assignment/status/${assignment.id}?status=${status}`)\r\n    \r\n    if (response.data.code === 200) {\r\n      ElMessage.success(`已将作业设置为${statusText}`)\r\n      \r\n      // 更新本地数据\r\n      const index = assignmentList.value.findIndex(item => item.id === assignment.id)\r\n      if (index !== -1) {\r\n        assignmentList.value[index].status = status\r\n      }\r\n      \r\n      // 如果当前对话框打开，也更新详情中的状态\r\n      if (currentAssignment.value && currentAssignment.value.id === assignment.id) {\r\n        currentAssignment.value.status = status\r\n      }\r\n      \r\n      // 重新获取统计数据\r\n      fetchStatistics()\r\n    } else {\r\n      ElMessage.error(response.data.message || '操作失败')\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      console.error('操作失败:', error)\r\n      ElMessage.error('操作失败：' + (error.response?.data?.message || error.message))\r\n    }\r\n  }\r\n}\r\n\r\n// 页面加载时获取数据\r\nonMounted(async () => {\r\n  await fetchCourseList()\r\n  await fetchAssignments()\r\n  await fetchStatistics()\r\n  await fetchSubmissionRateInfo()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.assignment-management-container {\r\n  padding: 20px;\r\n  \r\n  h1 {\r\n    margin-bottom: 20px;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    color: #303133;\r\n  }\r\n  \r\n  .statistics-cards {\r\n    margin-bottom: 20px;\r\n    \r\n    .stat-card {\r\n      height: 120px;\r\n      position: relative;\r\n      overflow: hidden;\r\n      \r\n      .stat-title {\r\n        font-size: 16px;\r\n        color: #606266;\r\n        margin-bottom: 15px;\r\n      }\r\n      \r\n      .stat-value {\r\n        font-size: 28px;\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .stat-progress {\r\n        margin-top: 5px;\r\n        font-size: 14px;\r\n        color: #909399;\r\n      }\r\n      \r\n      .stat-icon {\r\n        position: absolute;\r\n        right: 20px;\r\n        bottom: 20px;\r\n        font-size: 48px;\r\n        opacity: 0.2;\r\n      }\r\n      \r\n      &.total-card .stat-value {\r\n        color: #409EFF;\r\n      }\r\n      \r\n      &.ongoing-card .stat-value {\r\n        color: #E6A23C;\r\n      }\r\n      \r\n      &.completed-card .stat-value {\r\n        color: #67C23A;\r\n      }\r\n      \r\n      &.closed-card .stat-value {\r\n        color: #F56C6C;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .chart-card {\r\n    margin-bottom: 20px;\r\n    \r\n    .chart-container {\r\n      height: 300px;\r\n    }\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 20px;\r\n    \r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  .assignments-card {\r\n    .assignments-tip {\r\n      padding: 30px 0;\r\n    }\r\n    \r\n    .pagination-container {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  \r\n  .assignment-detail {\r\n    h2 {\r\n      margin-bottom: 20px;\r\n      font-size: 20px;\r\n      font-weight: 500;\r\n      color: #303133;\r\n    }\r\n    \r\n    .detail-row {\r\n      display: flex;\r\n      margin-bottom: 15px;\r\n      \r\n      .detail-label {\r\n        width: 100px;\r\n        color: #606266;\r\n        font-weight: 500;\r\n      }\r\n      \r\n      .detail-value {\r\n        flex: 1;\r\n      }\r\n    }\r\n    \r\n    .detail-description {\r\n      margin-bottom: 15px;\r\n      \r\n      .detail-label {\r\n        color: #606266;\r\n        font-weight: 500;\r\n        margin-bottom: 10px;\r\n      }\r\n      \r\n      .detail-content {\r\n        padding: 10px;\r\n        background-color: #f9f9f9;\r\n        border-radius: 4px;\r\n        min-height: 80px;\r\n        white-space: pre-line;\r\n      }\r\n    }\r\n    \r\n    .submission-stats {\r\n      margin-top: 30px;\r\n      border-top: 1px solid #EBEEF5;\r\n      padding-top: 20px;\r\n      \r\n      h3 {\r\n        margin-bottom: 15px;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        color: #303133;\r\n      }\r\n      \r\n      .stats-row {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 15px;\r\n        \r\n        .stat-box {\r\n          background-color: #f9f9f9;\r\n          border-radius: 4px;\r\n          padding: 15px;\r\n          width: calc(33.33% - 10px);\r\n          text-align: center;\r\n          \r\n          .stat-label {\r\n            font-size: 14px;\r\n            color: #909399;\r\n            margin-bottom: 10px;\r\n          }\r\n          \r\n          .stat-number {\r\n            font-size: 20px;\r\n            font-weight: bold;\r\n            color: #409EFF;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}