{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, withKeys as _withKeys, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-box\"\n};\nconst _hoisted_3 = {\n  class: \"login-options\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"login-title\"\n  }, [_createElementVNode(\"h2\", null, \"教学课程资源管理系统\")], -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    ref: \"loginForm\",\n    model: $setup.loginData,\n    rules: $setup.rules,\n    \"label-width\": \"0\",\n    class: \"login-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.loginData.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginData.username = $event),\n        placeholder: \"用户名/学号/工号\"\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode($setup[\"User\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.loginData.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginData.password = $event),\n        type: \"password\",\n        placeholder: \"密码\",\n        \"show-password\": \"\",\n        onKeyup: _withKeys($setup.handleLogin, [\"enter\"])\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode($setup[\"Lock\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        loading: $setup.loading,\n        class: \"login-button\",\n        onClick: $setup.handleLogin\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"登录\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n      to: \"/register\"\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"没有账号？立即注册\")])),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","ref","model","$setup","loginData","rules","default","_withCtx","_component_el_form_item","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","prefix","_component_el_icon","_","password","type","onKeyup","_withKeys","handleLogin","_component_el_button","loading","onClick","_createTextVNode","_hoisted_3","_component_router_link","to"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\TCRSystem\\TCRSystem\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <div class=\"login-title\">\r\n        <h2>教学课程资源管理系统</h2>\r\n      </div>\r\n      <el-form ref=\"loginForm\" :model=\"loginData\" :rules=\"rules\" label-width=\"0\" class=\"login-form\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginData.username\" placeholder=\"用户名/学号/工号\">\r\n            <template #prefix>\r\n              <el-icon><User /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginData.password\" type=\"password\" placeholder=\"密码\" show-password @keyup.enter=\"handleLogin\">\r\n            <template #prefix>\r\n              <el-icon><Lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" :loading=\"loading\" class=\"login-button\" @click=\"handleLogin\">登录</el-button>\r\n        </el-form-item>\r\n        <div class=\"login-options\">\r\n          <router-link to=\"/register\">没有账号？立即注册</router-link>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\nimport { User, Lock } from '@element-plus/icons-vue'\r\n\r\nconst router = useRouter()\r\nconst loginForm = ref(null)\r\nconst loading = ref(false)\r\n\r\nconst loginData = reactive({\r\n  username: '',\r\n  password: ''\r\n})\r\n\r\nconst rules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleLogin = async () => {\r\n  if (!loginForm.value) return\r\n  \r\n  try {\r\n    await loginForm.value.validate()\r\n    loading.value = true\r\n    \r\n    try {\r\n      const response = await axios.post('/api/user/login', loginData)\r\n      \r\n      if (response.data.code === 200) {\r\n        const { data } = response.data\r\n        \r\n        // 保存token和用户信息到localStorage\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n        console.log('登录成功，保存的 token:', data.token)\r\n        console.log('登录成功，保存的用户信息:', data)\r\n        \r\n        // 测试 localStorage 是否正确保存了 token\r\n        setTimeout(() => {\r\n          console.log('从 localStorage 获取的 token:', localStorage.getItem('token'))\r\n        }, 100)\r\n        \r\n        ElMessage.success('登录成功')\r\n        \r\n        // 根据角色跳转到不同的首页\r\n        if (data.role === 0) {\r\n          router.push('/student/home')\r\n        } else if (data.role === 1) {\r\n          router.push('/teacher/home')\r\n        } else if (data.role === 2) {\r\n          router.push('/admin/home')\r\n        }\r\n      } else {\r\n        ElMessage.error(response.data.message || '登录失败，请重试')\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n      ElMessage.error(error.response?.data?.message || '登录失败，请重试')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  } catch (error) {\r\n    console.error('表单验证失败', error)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-box {\r\n  width: 400px;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.login-title h2 {\r\n  font-weight: 500;\r\n  color: #409eff;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n}\r\n\r\n.login-options {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-options a {\r\n  color: #409eff;\r\n  text-decoration: none;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAW;;EAsBbA,KAAK,EAAC;AAAe;;;;;;;;uBAvBhCC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJD,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAa,IACtBG,mBAAA,CAAmB,YAAf,YAAU,E,sBAEhBE,YAAA,CAqBUC,kBAAA;IArBDC,GAAG,EAAC,WAAW;IAAEC,KAAK,EAAEC,MAAA,CAAAC,SAAS;IAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IAAE,aAAW,EAAC,GAAG;IAACX,KAAK,EAAC;;IANvFY,OAAA,EAAAC,QAAA,CAOQ,MAMe,CANfR,YAAA,CAMeS,uBAAA;MANDC,IAAI,EAAC;IAAU;MAPrCH,OAAA,EAAAC,QAAA,CAQU,MAIW,CAJXR,YAAA,CAIWW,mBAAA;QAZrBC,UAAA,EAQ6BR,MAAA,CAAAC,SAAS,CAACQ,QAAQ;QAR/C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQ6BX,MAAA,CAAAC,SAAS,CAACQ,QAAQ,GAAAE,MAAA;QAAEC,WAAW,EAAC;;QACtCC,MAAM,EAAAT,QAAA,CACf,MAA2B,CAA3BR,YAAA,CAA2BkB,kBAAA;UAVzCX,OAAA,EAAAC,QAAA,CAUuB,MAAQ,CAARR,YAAA,CAAQI,MAAA,U;UAV/Be,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAcQnB,YAAA,CAMeS,uBAAA;MANDC,IAAI,EAAC;IAAU;MAdrCH,OAAA,EAAAC,QAAA,CAeU,MAIW,CAJXR,YAAA,CAIWW,mBAAA;QAnBrBC,UAAA,EAe6BR,MAAA,CAAAC,SAAS,CAACe,QAAQ;QAf/C,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe6BX,MAAA,CAAAC,SAAS,CAACe,QAAQ,GAAAL,MAAA;QAAEM,IAAI,EAAC,UAAU;QAACL,WAAW,EAAC,IAAI;QAAC,eAAa,EAAb,EAAa;QAAEM,OAAK,EAftGC,SAAA,CAe8GnB,MAAA,CAAAoB,WAAW;;QAClGP,MAAM,EAAAT,QAAA,CACf,MAA2B,CAA3BR,YAAA,CAA2BkB,kBAAA;UAjBzCX,OAAA,EAAAC,QAAA,CAiBuB,MAAQ,CAARR,YAAA,CAAQI,MAAA,U;UAjB/Be,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAqBQnB,YAAA,CAEeS,uBAAA;MAvBvBF,OAAA,EAAAC,QAAA,CAsBU,MAAqG,CAArGR,YAAA,CAAqGyB,oBAAA;QAA1FJ,IAAI,EAAC,SAAS;QAAEK,OAAO,EAAEtB,MAAA,CAAAsB,OAAO;QAAE/B,KAAK,EAAC,cAAc;QAAEgC,OAAK,EAAEvB,MAAA,CAAAoB;;QAtBpFjB,OAAA,EAAAC,QAAA,CAsBiG,MAAEM,MAAA,QAAAA,MAAA,OAtBnGc,gBAAA,CAsBiG,IAAE,E;QAtBnGT,CAAA;;MAAAA,CAAA;QAwBQrB,mBAAA,CAEM,OAFN+B,UAEM,GADJ7B,YAAA,CAAmD8B,sBAAA;MAAtCC,EAAE,EAAC;IAAW;MAzBrCxB,OAAA,EAAAC,QAAA,CAyBsC,MAASM,MAAA,QAAAA,MAAA,OAzB/Cc,gBAAA,CAyBsC,WAAS,E;MAzB/CT,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}