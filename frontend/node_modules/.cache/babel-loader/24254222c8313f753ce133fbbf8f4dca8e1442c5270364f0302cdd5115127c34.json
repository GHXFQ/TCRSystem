{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"material-upload\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"filter-container\"\n};\nconst _hoisted_4 = {\n  class: \"pagination-container\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"review-records\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => _cache[12] || (_cache[12] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", null, \"教学材料上传\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.uploadForm,\n      rules: $setup.rules,\n      ref: \"uploadFormRef\",\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"课程\",\n        prop: \"courseId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.uploadForm.courseId,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.uploadForm.courseId = $event),\n          placeholder: \"请选择课程\",\n          onChange: $setup.handleCourseChange,\n          style: {\n            \"width\": \"350px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.courses, course => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: course.id,\n              label: course.name,\n              value: course.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"材料类型\",\n        prop: \"materialTypeId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.uploadForm.materialTypeId,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.uploadForm.materialTypeId = $event),\n          placeholder: \"请选择材料类型\",\n          style: {\n            \"width\": \"350px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.materialTypes, type => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: type.id,\n              label: type.name,\n              value: type.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"学年\",\n        prop: \"academicYear\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.uploadForm.academicYear,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.uploadForm.academicYear = $event),\n          placeholder: \"请选择学年\",\n          style: {\n            \"width\": \"350px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.academicYears, year => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: year,\n              label: year,\n              value: year\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"学期\",\n        prop: \"semester\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.uploadForm.semester,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.uploadForm.semester = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: 1\n          }, {\n            default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"第一学期\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio, {\n            label: 2\n          }, {\n            default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"第二学期\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"任务标题\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.uploadForm.taskId,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.uploadForm.taskId = $event),\n          placeholder: \"请选择任务标题（非必选）\",\n          clearable: \"\",\n          style: {\n            \"width\": \"350px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.teacherTasks, task => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: task.id,\n              label: task.title,\n              value: task.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"]), _cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n          class: \"el-form-item__description\"\n        }, [_createElementVNode(\"small\", null, \"关联到教学材料任务可以自动记录任务完成情况\")], -1 /* HOISTED */))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"材料名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.uploadForm.name,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.uploadForm.name = $event),\n          placeholder: \"请输入材料名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"材料描述\",\n        prop: \"description\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.uploadForm.description,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.uploadForm.description = $event),\n          type: \"textarea\",\n          rows: 3,\n          placeholder: \"请输入材料描述\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"上传文件\",\n        prop: \"file\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          class: \"upload-demo\",\n          action: $setup.uploadUrl,\n          headers: $setup.uploadHeaders,\n          \"on-preview\": $setup.handlePreview,\n          \"on-remove\": $setup.handleRemove,\n          \"on-success\": $setup.handleUploadSuccess,\n          \"on-error\": $setup.handleUploadError,\n          \"before-upload\": $setup.beforeUpload,\n          limit: 1,\n          \"file-list\": $setup.fileList\n        }, {\n          tip: _withCtx(() => _cache[17] || (_cache[17] = [_createElementVNode(\"div\", {\n            class: \"el-upload__tip\"\n          }, \" 只能上传 doc/docx/pdf 文件，且不超过 10MB \", -1 /* HOISTED */)])),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"点击上传\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"action\", \"headers\", \"on-preview\", \"on-remove\", \"on-success\", \"on-error\", \"before-upload\", \"file-list\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.submitUpload,\n          loading: $setup.uploading\n        }, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"提交\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n          onClick: $setup.resetForm\n        }, {\n          default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"重置\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, {\n    class: \"box-card\",\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[21] || (_cache[21] = _createElementVNode(\"span\", null, \"已上传材料\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n      inline: true,\n      model: $setup.queryParams,\n      class: \"demo-form-inline\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"课程\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.courseId,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.queryParams.courseId = $event),\n          placeholder: \"请选择课程\",\n          clearable: \"\",\n          style: {\n            \"width\": \"250px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.courses, course => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: course.id,\n              label: course.name,\n              value: course.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"材料类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.materialTypeId,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.queryParams.materialTypeId = $event),\n          placeholder: \"请选择材料类型\",\n          clearable: \"\",\n          style: {\n            \"width\": \"250px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.materialTypes, type => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: type.id,\n              label: type.name,\n              value: type.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"学年\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.academicYear,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.queryParams.academicYear = $event),\n          placeholder: \"请选择学年\",\n          clearable: \"\",\n          style: {\n            \"width\": \"250px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.academicYears, year => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: year,\n              label: year,\n              value: year\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"学期\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.queryParams.semester,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.queryParams.semester = $event),\n          placeholder: \"请选择学期\",\n          clearable: \"\",\n          style: {\n            \"width\": \"250px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"第一学期\",\n            value: 1\n          }), _createVNode(_component_el_option, {\n            label: \"第二学期\",\n            value: 2\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.fetchMaterials\n        }, {\n          default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])])])]),\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.materials,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"材料名称\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"course_name\",\n        label: \"所属课程\",\n        width: \"150\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"material_type_name\",\n        label: \"材料类型\",\n        width: \"120\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.material_type_name || '未知类型'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"academic_year\",\n        label: \"学年\",\n        width: \"100\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.academic_year || '未知学年'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"semester\",\n        label: \"学期\",\n        width: \"100\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.semester === 1 ? '第一学期' : scope.row.semester === 2 ? '第二学期' : '未知学期'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"description\",\n        label: \"描述\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"create_time\",\n        label: \"上传时间\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"250\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          type: \"text\",\n          size: \"small\",\n          onClick: $event => $setup.downloadMaterial(scope.row)\n        }, {\n          default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"下载\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !scope.row.review_id ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"text\",\n          size: \"small\",\n          onClick: $event => $setup.submitToReview(scope.row)\n        }, {\n          default: _withCtx(() => _cache[23] || (_cache[23] = [_createTextVNode(\"提交审核\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), scope.row.review_id ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 1,\n          type: \"text\",\n          size: \"small\",\n          onClick: $event => $setup.viewReviewStatus(scope.row)\n        }, {\n          default: _withCtx(() => _cache[24] || (_cache[24] = [_createTextVNode(\"查看审核状态\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n          type: \"text\",\n          size: \"small\",\n          onClick: $event => $setup.deleteMaterial(scope.row),\n          class: \"danger-button\"\n        }, {\n          default: _withCtx(() => _cache[25] || (_cache[25] = [_createTextVNode(\"删除\")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_pagination, {\n      background: \"\",\n      layout: \"total, prev, pager, next\",\n      total: $setup.total,\n      \"page-size\": $setup.queryParams.size,\n      \"current-page\": $setup.queryParams.current,\n      onCurrentChange: $setup.handleCurrentChange\n    }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\", \"onCurrentChange\"])])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 审核状态对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"审核状态\",\n    modelValue: $setup.reviewDialogVisible,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.reviewDialogVisible = $event),\n    width: \"60%\"\n  }, {\n    default: _withCtx(() => [$setup.reviewDetail ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_descriptions, {\n      column: 2,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"材料名称\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.reviewDetail.material_name), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"所属课程\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.reviewDetail.course_name || '未知课程'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"材料类型\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.reviewDetail.material_type_name || '未知类型'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"学年/学期\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.reviewDetail.academic_year || '未知学年') + \" / \" + _toDisplayString($setup.reviewDetail.semester === 1 ? '第一学期' : '第二学期'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"当前状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tag, {\n          type: $setup.getStatusType($setup.reviewDetail.status)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getStatusText($setup.reviewDetail.status)), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"当前审核人\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.reviewDetail.current_reviewer_name || '暂无审核人'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_6, [_cache[26] || (_cache[26] = _createElementVNode(\"h3\", null, \"审核记录\", -1 /* HOISTED */)), _createVNode(_component_el_table, {\n      data: $setup.reviewRecords,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"reviewer_name\",\n        label: \"审核人\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"reviewer_title\",\n        label: \"审核人职称\",\n        width: \"120\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString($setup.getReviewerTitleText(scope.row.reviewer_title)), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"result\",\n        label: \"审核结果\",\n        width: \"100\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_tag, {\n          type: scope.row.result === 1 ? 'success' : 'danger'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.result === 1 ? '通过' : '不通过'), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"comment\",\n        label: \"审核意见\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"create_time\",\n        label: \"审核时间\",\n        width: \"180\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","default","_component_el_form","model","$setup","uploadForm","rules","ref","_component_el_form_item","label","prop","_component_el_select","modelValue","courseId","$event","placeholder","onChange","handleCourseChange","style","_Fragment","_renderList","courses","course","_createBlock","_component_el_option","id","name","value","_","materialTypeId","materialTypes","type","academicYear","academicYears","year","_component_el_radio_group","semester","_component_el_radio","_createTextVNode","taskId","clearable","teacherTasks","task","title","_component_el_input","description","rows","_component_el_upload","action","uploadUrl","headers","uploadHeaders","handlePreview","handleRemove","handleUploadSuccess","handleUploadError","beforeUpload","limit","fileList","tip","_component_el_button","onClick","submitUpload","loading","uploading","resetForm","_hoisted_2","_hoisted_3","inline","queryParams","fetchMaterials","_component_el_table","data","materials","_component_el_table_column","width","scope","_toDisplayString","row","material_type_name","academic_year","size","downloadMaterial","review_id","submitToReview","_createCommentVNode","viewReviewStatus","deleteMaterial","_hoisted_4","_component_el_pagination","background","layout","total","current","onCurrentChange","handleCurrentChange","_component_el_dialog","reviewDialogVisible","reviewDetail","_hoisted_5","_component_el_descriptions","column","border","_component_el_descriptions_item","material_name","course_name","_component_el_tag","getStatusType","status","getStatusText","current_reviewer_name","_hoisted_6","reviewRecords","getReviewerTitleText","reviewer_title","result"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\TCRSystem\\TCRSystem\\frontend\\src\\views\\teacher\\MaterialUpload.vue"],"sourcesContent":["<template>\n  <div class=\"material-upload\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>教学材料上传</span>\n        </div>\n      </template>\n      \n      <el-form :model=\"uploadForm\" :rules=\"rules\" ref=\"uploadFormRef\" label-width=\"100px\">\n        <el-form-item label=\"课程\" prop=\"courseId\">\n          <el-select v-model=\"uploadForm.courseId\" placeholder=\"请选择课程\" @change=\"handleCourseChange\" style=\"width: 350px;\">\n            <el-option\n              v-for=\"course in courses\"\n              :key=\"course.id\"\n              :label=\"course.name\"\n              :value=\"course.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"材料类型\" prop=\"materialTypeId\">\n          <el-select v-model=\"uploadForm.materialTypeId\" placeholder=\"请选择材料类型\" style=\"width: 350px;\">\n            <el-option\n              v-for=\"type in materialTypes\"\n              :key=\"type.id\"\n              :label=\"type.name\"\n              :value=\"type.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"学年\" prop=\"academicYear\">\n          <el-select v-model=\"uploadForm.academicYear\" placeholder=\"请选择学年\" style=\"width: 350px;\">\n            <el-option\n              v-for=\"year in academicYears\"\n              :key=\"year\"\n              :label=\"year\"\n              :value=\"year\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"学期\" prop=\"semester\">\n          <el-radio-group v-model=\"uploadForm.semester\">\n            <el-radio :label=\"1\">第一学期</el-radio>\n            <el-radio :label=\"2\">第二学期</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item label=\"任务标题\">\n          <el-select v-model=\"uploadForm.taskId\" placeholder=\"请选择任务标题（非必选）\" clearable style=\"width: 350px;\">\n            <el-option\n              v-for=\"task in teacherTasks\"\n              :key=\"task.id\"\n              :label=\"task.title\"\n              :value=\"task.id\"\n            ></el-option>\n          </el-select>\n          <div class=\"el-form-item__description\">\n            <small>关联到教学材料任务可以自动记录任务完成情况</small>\n          </div>\n        </el-form-item>\n        \n        <el-form-item label=\"材料名称\" prop=\"name\">\n          <el-input v-model=\"uploadForm.name\" placeholder=\"请输入材料名称\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"材料描述\" prop=\"description\">\n          <el-input v-model=\"uploadForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入材料描述\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"上传文件\" prop=\"file\">\n          <el-upload\n            class=\"upload-demo\"\n            :action=\"uploadUrl\"\n            :headers=\"uploadHeaders\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :on-success=\"handleUploadSuccess\"\n            :on-error=\"handleUploadError\"\n            :before-upload=\"beforeUpload\"\n            :limit=\"1\"\n            :file-list=\"fileList\"\n          >\n            <el-button type=\"primary\">点击上传</el-button>\n            <template #tip>\n              <div class=\"el-upload__tip\">\n                只能上传 doc/docx/pdf 文件，且不超过 10MB\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">提交</el-button>\n          <el-button @click=\"resetForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <el-card class=\"box-card\" style=\"margin-top: 20px;\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>已上传材料</span>\n          <div class=\"filter-container\">\n            <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n              <el-form-item label=\"课程\">\n                <el-select v-model=\"queryParams.courseId\" placeholder=\"请选择课程\" clearable style=\"width: 250px;\">\n                  <el-option\n                    v-for=\"course in courses\"\n                    :key=\"course.id\"\n                    :label=\"course.name\"\n                    :value=\"course.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"材料类型\">\n                <el-select v-model=\"queryParams.materialTypeId\" placeholder=\"请选择材料类型\" clearable style=\"width: 250px;\">\n                  <el-option\n                    v-for=\"type in materialTypes\"\n                    :key=\"type.id\"\n                    :label=\"type.name\"\n                    :value=\"type.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"学年\">\n                <el-select v-model=\"queryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 250px;\">\n                  <el-option\n                    v-for=\"year in academicYears\"\n                    :key=\"year\"\n                    :label=\"year\"\n                    :value=\"year\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"学期\">\n                <el-select v-model=\"queryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 250px;\">\n                  <el-option label=\"第一学期\" :value=\"1\"></el-option>\n                  <el-option label=\"第二学期\" :value=\"2\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"fetchMaterials\">查询</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n      </template>\n      \n      <el-table :data=\"materials\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column prop=\"name\" label=\"材料名称\" width=\"180\"></el-table-column>\n        <el-table-column prop=\"course_name\" label=\"所属课程\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"material_type_name\" label=\"材料类型\" width=\"120\">\n          <template #default=\"scope\">\n            {{ scope.row.material_type_name || '未知类型' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"academic_year\" label=\"学年\" width=\"100\">\n          <template #default=\"scope\">\n            {{ scope.row.academic_year || '未知学年' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"semester\" label=\"学期\" width=\"100\">\n          <template #default=\"scope\">\n            {{ scope.row.semester === 1 ? '第一学期' : scope.row.semester === 2 ? '第二学期' : '未知学期' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\n        <el-table-column prop=\"create_time\" label=\"上传时间\" width=\"180\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"250\">\n          <template #default=\"scope\">\n            <el-button type=\"text\" size=\"small\" @click=\"downloadMaterial(scope.row)\">下载</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"submitToReview(scope.row)\" v-if=\"!scope.row.review_id\">提交审核</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"viewReviewStatus(scope.row)\" v-if=\"scope.row.review_id\">查看审核状态</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"deleteMaterial(scope.row)\" class=\"danger-button\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"total, prev, pager, next\"\n          :total=\"total\"\n          :page-size=\"queryParams.size\"\n          :current-page=\"queryParams.current\"\n          @current-change=\"handleCurrentChange\"\n        ></el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 审核状态对话框 -->\n    <el-dialog title=\"审核状态\" v-model=\"reviewDialogVisible\" width=\"60%\">\n      <div v-if=\"reviewDetail\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"材料名称\">{{ reviewDetail.material_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"所属课程\">{{ reviewDetail.course_name || '未知课程' }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料类型\">{{ reviewDetail.material_type_name || '未知类型' }}</el-descriptions-item>\n          <el-descriptions-item label=\"学年/学期\">{{ reviewDetail.academic_year || '未知学年' }} / {{ reviewDetail.semester === 1 ? '第一学期' : '第二学期' }}</el-descriptions-item>\n          <el-descriptions-item label=\"当前状态\">\n            <el-tag :type=\"getStatusType(reviewDetail.status)\">{{ getStatusText(reviewDetail.status) }}</el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"当前审核人\">{{ reviewDetail.current_reviewer_name || '暂无审核人' }}</el-descriptions-item>\n        </el-descriptions>\n        \n        <div class=\"review-records\">\n          <h3>审核记录</h3>\n          <el-table :data=\"reviewRecords\" style=\"width: 100%\">\n            <el-table-column prop=\"reviewer_name\" label=\"审核人\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"reviewer_title\" label=\"审核人职称\" width=\"120\">\n              <template #default=\"scope\">\n                {{ getReviewerTitleText(scope.row.reviewer_title) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"审核结果\" width=\"100\">\n              <template #default=\"scope\">\n                <el-tag :type=\"scope.row.result === 1 ? 'success' : 'danger'\">\n                  {{ scope.row.result === 1 ? '通过' : '不通过' }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"comment\" label=\"审核意见\"></el-table-column>\n            <el-table-column prop=\"create_time\" label=\"审核时间\" width=\"180\"></el-table-column>\n          </el-table>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\n\nexport default {\n  name: 'MaterialUpload',\n  setup() {\n    const store = useStore();\n    const uploadFormRef = ref(null);\n    const route = useRoute();\n    \n    // 当前用户信息\n    const currentUser = computed(() => store.state.user);\n    \n    // 上传表单\n    const uploadForm = reactive({\n      courseId: '',\n      materialTypeId: '',\n      academicYear: '',\n      semester: 1,\n      taskId: null,\n      name: '',\n      description: '',\n      file: null\n    });\n    \n    // 表单验证规则\n    const rules = {\n      courseId: [{ required: true, message: '请选择课程', trigger: 'change' }],\n      materialTypeId: [{ required: true, message: '请选择材料类型', trigger: 'change' }],\n      academicYear: [{ required: true, message: '请选择学年', trigger: 'change' }],\n      semester: [{ required: true, message: '请选择学期', trigger: 'change' }],\n      name: [{ required: true, message: '请输入材料名称', trigger: 'blur' }],\n      description: [{ required: true, message: '请输入材料描述', trigger: 'blur' }]\n    };\n    \n    // 上传相关\n    const uploadUrl = '/api/material/upload';\n    const uploadHeaders = {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    };\n    const fileList = ref([]);\n    const uploading = ref(false);\n    \n    // 课程列表\n    const courses = ref([]);\n    const fetchCourses = async () => {\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let teacherId = currentUser.value?.id;\n        if (!teacherId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          teacherId = userInfo.id;\n        }\n        \n        if (!teacherId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          return;\n        }\n        \n        console.log('当前教师ID:', teacherId);\n        const response = await axios.get(`/api/course/teacher/${teacherId}`);\n        courses.value = response.data.data;\n      } catch (error) {\n        console.error('获取课程列表失败', error);\n        ElMessage.error('获取课程列表失败');\n      }\n    };\n    \n    // 材料类型列表\n    const materialTypes = ref([]);\n    const fetchMaterialTypes = async () => {\n      try {\n        const response = await axios.get('/api/material-type/list');\n        materialTypes.value = response.data.data;\n      } catch (error) {\n        console.error('获取材料类型列表失败', error);\n        ElMessage.error('获取材料类型列表失败');\n      }\n    };\n    \n    // 学年列表\n    const academicYears = ref([]);\n    const generateAcademicYears = () => {\n      const currentYear = new Date().getFullYear();\n      const years = [];\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i;\n        years.push(`${year}-${year + 1}`);\n      }\n      academicYears.value = years;\n    };\n    \n    // 教师任务列表\n    const teacherTasks = ref([]);\n    const fetchTeacherTasks = async () => {\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let teacherId = currentUser.value?.id;\n        if (!teacherId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          teacherId = userInfo.id;\n        }\n        \n        if (!teacherId) {\n          console.warn('无法获取教师ID，未加载用户信息');\n          return;\n        }\n\n        console.log('获取教师任务列表，教师ID:', teacherId);\n        const response = await axios.get('/api/material-task/teacher/tasks', {\n          params: { teacherId }\n        });\n        \n        if (response.data.code === 200) {\n          teacherTasks.value = response.data.data || [];\n          console.log('获取到教师任务列表:', teacherTasks.value.length);\n        } else {\n          console.error('获取教师任务列表失败:', response.data.message);\n          teacherTasks.value = [];\n        }\n      } catch (error) {\n        console.error('获取教师任务列表失败:', error);\n        teacherTasks.value = [];\n      }\n    };\n    \n    // 上传文件相关方法\n    const handlePreview = (/* file */) => {\n      // console.log(file);\n    };\n    \n    const handleRemove = (/* file, fileList */) => {\n      uploadForm.file = null;\n    };\n    \n    const beforeUpload = (file) => {\n      // 简化文件类型判断和处理\n      let isValidType = false;\n      let simpleFileType = '';\n      \n      if (file.type === 'application/msword' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\n        isValidType = true;\n        simpleFileType = 'doc';\n      } else if (file.type === 'application/pdf') {\n        isValidType = true;\n        simpleFileType = 'pdf';\n      }\n      \n      const isLt10M = file.size / 1024 / 1024 < 10;\n      \n      if (!isValidType) {\n        ElMessage.error('上传文件只能是 doc/docx/pdf 格式!');\n        return false;\n      }\n      \n      if (!isLt10M) {\n        ElMessage.error('上传文件大小不能超过 10MB!');\n        return false;\n      }\n      \n      uploadForm.file = file;\n      uploadForm.fileType = simpleFileType;\n      return true;\n    };\n    \n    const handleUploadSuccess = (response, /* file, fileList */) => {\n      if (response.code === 200) {\n        uploadForm.filePath = response.data.filePath;\n        uploadForm.fileSize = response.data.fileSize;\n        // 使用简化后的文件类型\n        uploadForm.fileType = uploadForm.fileType || 'unknown';\n        ElMessage.success('文件上传成功');\n      } else {\n        ElMessage.error(response.message || '文件上传失败');\n      }\n    };\n    \n    const handleUploadError = (error, /* file, fileList */) => {\n      console.error('文件上传失败', error);\n      ElMessage.error('文件上传失败');\n    };\n    \n    // 提交上传\n    const submitUpload = async () => {\n      if (!uploadForm.file) {\n        ElMessage.warning('请先上传文件');\n        return;\n      }\n      \n      uploadFormRef.value.validate(async (valid) => {\n        if (valid) {\n          uploading.value = true;\n          try {\n            // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n            let teacherId = currentUser.value?.id;\n            if (!teacherId) {\n              const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n              teacherId = userInfo.id;\n            }\n            \n            if (!teacherId) {\n              ElMessage.warning('无法获取用户信息，请重新登录');\n              uploading.value = false;\n              return;\n            }\n            \n            // 添加日志，检查taskId\n            console.log('提交材料时的表单数据:', JSON.stringify(uploadForm));\n            console.log('任务ID:', uploadForm.taskId, '类型:', typeof uploadForm.taskId);\n            \n            const formData = new FormData();\n            formData.append('file', uploadForm.file);\n            formData.append('courseId', uploadForm.courseId);\n            formData.append('materialTypeId', uploadForm.materialTypeId);\n            formData.append('academicYear', uploadForm.academicYear);\n            formData.append('semester', uploadForm.semester);\n            formData.append('name', uploadForm.name);\n            formData.append('description', uploadForm.description);\n            formData.append('type', 0); // 0-课程材料\n            formData.append('teacherId', teacherId); // 添加教师ID\n            \n            // 如果选择了任务，添加任务ID\n            if (uploadForm.taskId) {\n              console.log('添加任务ID到表单:', uploadForm.taskId);\n              formData.append('taskId', uploadForm.taskId);\n            } else {\n              console.log('未选择任务，不添加taskId');\n            }\n            \n            // 上传材料\n            const response = await axios.post('/api/material/upload', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            \n            if (response.data.code === 200) {\n              ElMessage.success('材料上传成功，已提交审核');\n              resetForm();\n              fetchMaterials();\n            } else {\n              ElMessage.error(response.data.message || '材料上传失败');\n            }\n          } catch (error) {\n            console.error('材料上传失败', error);\n            ElMessage.error('材料上传失败: ' + (error.response?.data?.message || error.message || '未知错误'));\n          } finally {\n            uploading.value = false;\n          }\n        }\n      });\n    };\n    \n    // 重置表单\n    const resetForm = () => {\n      uploadFormRef.value.resetFields();\n      fileList.value = [];\n      uploadForm.file = null;\n    };\n    \n    // 查询已上传材料\n    const queryParams = reactive({\n      current: 1,\n      size: 10,\n      teacherId: null,\n      courseId: null,\n      materialTypeId: null,\n      academicYear: null,\n      semester: null,\n      type: 0 // 0-课程材料\n    });\n    const materials = ref([]);\n    const total = ref(0);\n    const loading = ref(false);\n    \n    const fetchMaterials = async () => {\n      loading.value = true;\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let teacherId = currentUser.value?.id;\n        if (!teacherId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          teacherId = userInfo.id;\n        }\n        \n        if (!teacherId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          loading.value = false;\n          return;\n        }\n        \n        queryParams.teacherId = teacherId;\n        const response = await axios.get('/api/material/teacher', {\n          params: queryParams\n        });\n        if (response.data && response.data.data) {\n          // 处理并格式化返回的数据\n          const records = response.data.data.records || [];\n          materials.value = records.map(record => {\n            // 确保所有必要字段都存在\n            return {\n              ...record,\n              // 如果缺少某些字段，使用默认值\n              material_type_name: record.material_type_name || '未知类型',\n              course_name: record.course_name || '未知课程',\n              academic_year: record.academic_year || '未知学年',\n              // 确保学期为数字类型\n              semester: record.semester ? Number(record.semester) : null\n            };\n          });\n          \n          total.value = response.data.data.total || 0;\n          \n          // 打印查询结果，检查字段\n          console.log('获取到的材料列表:', materials.value);\n          if (materials.value.length > 0) {\n            console.log('第一条材料数据样例:', materials.value[0]);\n            console.log('材料类型名称:', materials.value[0].material_type_name);\n            console.log('学年:', materials.value[0].academic_year);\n            console.log('学期:', materials.value[0].semester, '类型:', typeof materials.value[0].semester);\n          }\n        } else {\n          materials.value = [];\n          total.value = 0;\n        }\n      } catch (error) {\n        console.error('获取材料列表失败', error);\n        ElMessage.error('获取材料列表失败');\n        materials.value = [];\n        total.value = 0;\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    const handleCurrentChange = (current) => {\n      queryParams.current = current;\n      fetchMaterials();\n    };\n    \n    const handleCourseChange = (/* courseId */) => {\n      // 可以在这里根据课程ID获取相关信息\n    };\n    \n    // 下载材料\n    const downloadMaterial = (material) => {\n      if (!material.id) {\n        ElMessage.warning('材料ID为空');\n        return;\n      }\n      \n      try {\n        // 创建下载链接 - 使用API接口路径\n        const downloadUrl = `/api/material/download/${material.id}`;\n        \n        // 创建一个隐藏的a标签，用于下载\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.target = '_blank';\n        link.setAttribute('download', ''); // 强制使用下载属性\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        // 记录下载次数\n        axios.post(`/api/material/download/${material.id}`)\n          .catch(error => console.error('更新下载次数失败:', error));\n        \n        ElMessage.success('开始下载文件');\n      } catch (error) {\n        console.error('下载文件失败:', error);\n        ElMessage.error('下载文件失败');\n      }\n    };\n    \n    // 删除材料\n    const deleteMaterial = (material) => {\n      ElMessageBox.confirm('确定要删除该材料吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await axios.delete(`/api/material/${material.id}`);\n          if (response.data.code === 200) {\n            ElMessage.success('删除成功');\n            fetchMaterials();\n          } else {\n            ElMessage.error(response.data.message || '删除失败');\n          }\n        } catch (error) {\n          console.error('删除失败', error);\n          ElMessage.error('删除失败');\n        }\n      }).catch(() => {});\n    };\n    \n    // 提交审核\n    const submitToReview = async (material) => {\n      try {\n        // 首先尝试从Vuex获取用户ID，如果不存在则从localStorage获取\n        let teacherId = currentUser.value?.id;\n        if (!teacherId) {\n          const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n          teacherId = userInfo.id;\n        }\n        \n        if (!teacherId) {\n          ElMessage.warning('无法获取用户信息，请重新登录');\n          return;\n        }\n        \n        const response = await axios.post('/api/material-review/submit', {\n          materialId: material.id,\n          academicYear: material.academic_year,\n          semester: material.semester,\n          materialTypeId: material.material_type_id,\n          teacherId: teacherId,\n          courseId: material.course_id\n        });\n        \n        if (response.data.code === 200) {\n          ElMessage.success('提交审核成功');\n          fetchMaterials();\n        } else {\n          ElMessage.error(response.data.message || '提交审核失败');\n        }\n      } catch (error) {\n        console.error('提交审核失败', error);\n        ElMessage.error('提交审核失败');\n      }\n    };\n    \n    // 查看审核状态\n    const reviewDialogVisible = ref(false);\n    const reviewDetail = ref(null);\n    const reviewRecords = ref([]);\n    \n    const viewReviewStatus = async (material) => {\n      try {\n        const detailResponse = await axios.get(`/api/material-review/detail/${material.review_id}`);\n        reviewDetail.value = detailResponse.data.data;\n        \n        // 打印审核详情，检查字段\n        console.log('审核详情:', reviewDetail.value);\n        \n        const recordsResponse = await axios.get(`/api/material-review/records/${material.review_id}`);\n        reviewRecords.value = recordsResponse.data.data;\n        \n        // 确保审核详情包含所需字段\n        if (reviewDetail.value) {\n          if (!reviewDetail.value.material_type_name) {\n            console.warn('审核详情中缺少材料类型名称');\n          }\n          if (!reviewDetail.value.academic_year) {\n            console.warn('审核详情中缺少学年信息');\n          }\n        }\n        \n        reviewDialogVisible.value = true;\n      } catch (error) {\n        console.error('获取审核详情失败', error);\n        ElMessage.error('获取审核详情失败');\n      }\n    };\n    \n    // 工具函数\n    const getStatusText = (status) => {\n      switch (status) {\n        case 0: return '待审核';\n        case 1: return '课程负责人审核中';\n        case 2: return '专业负责人审核中';\n        case 3: return '副院长审核中';\n        case 4: return '教务人员审核中';\n        case 5: return '审核通过';\n        case 6: return '审核不通过';\n        default: return '未知状态';\n      }\n    };\n    \n    const getStatusType = (status) => {\n      switch (status) {\n        case 0: return 'info';\n        case 1: case 2: case 3: case 4: return 'warning';\n        case 5: return 'success';\n        case 6: return 'danger';\n        default: return 'info';\n      }\n    };\n    \n    const getReviewerTitleText = (title) => {\n      switch (title) {\n        case 0: return '普通教师';\n        case 1: return '课程负责人';\n        case 2: return '专业负责人';\n        case 3: return '副院长';\n        case 4: return '教务人员';\n        default: return '未知职称';\n      }\n    };\n    \n    onMounted(() => {\n      // 初始化获取数据\n      fetchCourses();\n      fetchMaterialTypes();\n      generateAcademicYears();\n      fetchTeacherTasks(); // 获取教师任务列表\n      \n      // 获取URL中的查询参数\n      const { taskId, materialTypeId, courseId, academicYear, semester } = route.query;\n      \n      if (taskId) {\n        uploadForm.taskId = Number(taskId);\n      }\n      if (materialTypeId) {\n        uploadForm.materialTypeId = Number(materialTypeId);\n      }\n      if (courseId) {\n        uploadForm.courseId = Number(courseId);\n      }\n      if (academicYear) {\n        uploadForm.academicYear = academicYear;\n      }\n      if (semester) {\n        uploadForm.semester = Number(semester);\n      }\n      \n      fetchMaterials();\n    });\n    \n    return {\n      uploadFormRef,\n      uploadForm,\n      rules,\n      uploadUrl,\n      uploadHeaders,\n      fileList,\n      uploading,\n      courses,\n      materialTypes,\n      academicYears,\n      handlePreview,\n      handleRemove,\n      beforeUpload,\n      handleUploadSuccess,\n      handleUploadError,\n      submitUpload,\n      resetForm,\n      queryParams,\n      materials,\n      total,\n      loading,\n      fetchMaterials,\n      handleCurrentChange,\n      handleCourseChange,\n      downloadMaterial,\n      deleteMaterial,\n      submitToReview,\n      reviewDialogVisible,\n      reviewDetail,\n      reviewRecords,\n      viewReviewStatus,\n      getStatusText,\n      getStatusType,\n      getReviewerTitleText,\n      teacherTasks\n    };\n  }\n};\n</script>\n\n<style scoped>\n.material-upload {\n  padding: 20px;\n}\n\n.filter-container {\n  margin-top: 10px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.review-records {\n  margin-top: 20px;\n}\n\n.danger-button {\n  color: #F56C6C;\n}\n\n.el-form-item__description {\n  padding-top: 5px;\n  color: #909399;\n  font-size: 12px;\n  line-height: 1.2;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}