{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { safeElementConfig } from '@/utils/resizeObserverFix';\nexport default {\n  name: 'AdminMaterialReview',\n  setup() {\n    // 检查用户信息\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n    if (!userInfo.id) {\n      ElMessage.error('未获取到用户信息，请重新登录');\n      // 可以在这里添加重定向到登录页的逻辑\n      // router.push('/login');\n      return;\n    }\n\n    // 学年列表\n    const academicYears = ref([]);\n    const generateAcademicYears = () => {\n      const currentYear = new Date().getFullYear();\n      const years = [];\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i;\n        years.push(`${year}-${year + 1}`);\n      }\n      academicYears.value = years;\n    };\n\n    // 查询参数\n    const queryParams = reactive({\n      current: 1,\n      size: 10,\n      academicYear: null,\n      semester: null,\n      status: null\n    });\n    const reviews = ref([]);\n    const total = ref(0);\n    const loading = ref(false);\n    const fetchReviews = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/material-review/admin/list', {\n          params: queryParams\n        });\n        if (response.data && response.data.data) {\n          reviews.value = response.data.data.records || [];\n          total.value = response.data.data.total || 0;\n        } else {\n          reviews.value = [];\n          total.value = 0;\n        }\n      } catch (error) {\n        console.error('获取审核列表失败', error);\n        ElMessage.error('获取审核列表失败');\n        reviews.value = [];\n        total.value = 0;\n      } finally {\n        loading.value = false;\n      }\n    };\n    const handleCurrentChange = current => {\n      queryParams.current = current;\n      fetchReviews();\n    };\n\n    // 审核详情\n    const detailDialogVisible = ref(false);\n    const reviewDetail = ref(null);\n    const reviewRecords = ref([]);\n    const viewReviewDetail = async reviewId => {\n      try {\n        const detailResponse = await axios.get(`/api/material-review/detail/${reviewId}`);\n        if (detailResponse.data && detailResponse.data.data) {\n          reviewDetail.value = detailResponse.data.data;\n          const recordsResponse = await axios.get(`/api/material-review/records/${reviewId}`);\n          if (recordsResponse.data && recordsResponse.data.data) {\n            reviewRecords.value = recordsResponse.data.data || [];\n          } else {\n            reviewRecords.value = [];\n          }\n          detailDialogVisible.value = true;\n        } else {\n          ElMessage.error('获取审核详情失败');\n        }\n      } catch (error) {\n        console.error('获取审核详情失败', error);\n        ElMessage.error('获取审核详情失败');\n        reviewRecords.value = [];\n      }\n    };\n\n    // 工具函数\n    const getStatusText = status => {\n      switch (status) {\n        case 0:\n          return '待审核';\n        case 1:\n          return '课程负责人审核中';\n        case 2:\n          return '专业负责人审核中';\n        case 3:\n          return '副院长审核中';\n        case 4:\n          return '教务人员审核中';\n        case 5:\n          return '审核通过';\n        case 6:\n          return '审核不通过';\n        default:\n          return '未知状态';\n      }\n    };\n    const getStatusType = status => {\n      switch (status) {\n        case 0:\n          return 'info';\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n          return 'warning';\n        case 5:\n          return 'success';\n        case 6:\n          return 'danger';\n        default:\n          return 'info';\n      }\n    };\n    const getReviewerTitleText = title => {\n      switch (title) {\n        case 0:\n          return '普通教师';\n        case 1:\n          return '课程负责人';\n        case 2:\n          return '专业负责人';\n        case 3:\n          return '副院长';\n        case 4:\n          return '教务人员';\n        default:\n          return '未知职称';\n      }\n    };\n    const formatFileSize = size => {\n      if (!size) return '0 B';\n      const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n      let index = 0;\n      let fileSize = size;\n      while (fileSize >= 1024 && index < units.length - 1) {\n        fileSize /= 1024;\n        index++;\n      }\n      return fileSize.toFixed(2) + ' ' + units[index];\n    };\n    const downloadFile = async materialId => {\n      if (!materialId) {\n        ElMessage.warning('材料ID为空');\n        return;\n      }\n      try {\n        // 添加日志，跟踪下载过程\n        console.log(`开始下载材料，ID: ${materialId}`);\n        const response = await axios.get(`/api/material/download/${materialId}`, {\n          responseType: 'blob'\n        });\n\n        // 记录响应头信息，用于调试\n        console.log('下载响应头:', response.headers);\n        const blob = new Blob([response.data]);\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n\n        // 获取Content-Disposition头部\n        const contentDisposition = response.headers['content-disposition'];\n        console.log('Content-Disposition头:', contentDisposition);\n\n        // 从reviewDetail中获取默认文件名（后备方案）\n        let defaultFileName = reviewDetail.value?.material_name || '下载文件';\n        const fileType = reviewDetail.value?.file_type || '';\n        if (fileType && !defaultFileName.toLowerCase().endsWith('.' + fileType.toLowerCase())) {\n          defaultFileName += '.' + fileType;\n        }\n\n        // 尝试从Content-Disposition头中提取文件名\n        let filename = defaultFileName;\n        if (contentDisposition) {\n          // 尝试提取filename*参数（RFC 5987格式）\n          const filenameStarMatch = contentDisposition.match(/filename\\*=UTF-8''([^;]+)/i);\n          if (filenameStarMatch && filenameStarMatch[1]) {\n            try {\n              // 对URL编码的文件名进行解码\n              filename = decodeURIComponent(filenameStarMatch[1]);\n              console.log('从filename*参数解析的文件名:', filename);\n            } catch (error) {\n              console.error('解码filename*参数出错:', error);\n            }\n          } else {\n            // 尝试提取普通filename参数\n            const filenameMatch = contentDisposition.match(/filename=(?:\"([^\"]+)\"|([^;]+))/i);\n            if (filenameMatch) {\n              // 获取引号中或非引号的值\n              const extractedName = filenameMatch[1] || filenameMatch[2];\n              if (extractedName) {\n                try {\n                  // 可能需要URL解码\n                  filename = decodeURIComponent(extractedName);\n                  console.log('从filename参数解析的文件名:', filename);\n                } catch (error) {\n                  // 如果解码失败，使用原始值\n                  filename = extractedName;\n                  console.log('使用未解码的filename参数:', filename);\n                }\n              }\n            }\n          }\n        } else {\n          console.warn('响应头中缺少Content-Disposition');\n        }\n\n        // 确保文件名中包含扩展名\n        const contentType = response.headers['content-type'];\n        if (contentType && !filename.includes('.')) {\n          // 从contentType获取扩展名\n          const extension = getExtensionFromMimeType(contentType);\n          if (extension) {\n            filename += extension;\n            console.log(`根据Content-Type添加扩展名: ${extension}, 最终文件名: ${filename}`);\n          }\n        }\n        console.log('最终下载文件名:', filename);\n\n        // 设置下载文件名\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n\n        // 清理\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url);\n          document.body.removeChild(link);\n        }, 100);\n\n        // 更新下载次数\n        axios.post(`/api/material/download/${materialId}`).catch(error => console.error('更新下载次数失败:', error));\n        ElMessage.success('文件下载成功');\n      } catch (error) {\n        console.error('下载文件失败:', error);\n        ElMessage.error('下载文件失败');\n      }\n    };\n\n    // 审核表单数据\n    const reviewForm = ref({\n      comment: ''\n    });\n\n    // 处理审核操作\n    const handleReview = async result => {\n      if (!reviewForm.value.comment) {\n        ElMessage.warning('请输入审核意见');\n        return;\n      }\n\n      // 从localStorage获取用户信息\n      const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n      if (!userInfo.id) {\n        ElMessage.error('未获取到用户信息，请重新登录');\n        return;\n      }\n      try {\n        // 获取用户角色和职称\n        const role = parseInt(userInfo.role || '0');\n        let reviewerTitle = 0; // 默认为普通教师\n\n        // 根据角色设置职称\n        if (role === 2) {\n          // 管理员\n          reviewerTitle = 4; // 教务人员\n        } else {\n          // 获取当前审核状态\n          const status = parseInt(reviewDetail.value.status);\n          switch (status) {\n            case 1:\n              // 课程负责人审核中\n              reviewerTitle = 1;\n              break;\n            case 2:\n              // 专业负责人审核中\n              reviewerTitle = 2;\n              break;\n            case 3:\n              // 副院长审核中\n              reviewerTitle = 3;\n              break;\n            case 4:\n              // 教务人员审核中\n              reviewerTitle = 4;\n              break;\n          }\n        }\n        console.log('发送审核请求，参数：', {\n          reviewId: parseInt(reviewDetail.value.id),\n          reviewerId: parseInt(userInfo.id),\n          reviewerTitle: parseInt(reviewerTitle),\n          result: parseInt(result),\n          comment: reviewForm.value.comment\n        });\n        const response = await axios.post('/api/material-review/review', {\n          reviewId: parseInt(reviewDetail.value.id),\n          reviewerId: parseInt(userInfo.id),\n          reviewerTitle: parseInt(reviewerTitle),\n          result: parseInt(result),\n          comment: reviewForm.value.comment\n        });\n        if (response.data && response.data.code === 200) {\n          ElMessage.success('审核操作成功');\n          detailDialogVisible.value = false;\n          fetchReviews(); // 刷新列表\n        } else {\n          ElMessage.error(response.data.message || '审核操作失败');\n        }\n      } catch (error) {\n        console.error('审核操作失败', error);\n        ElMessage.error('审核操作失败');\n      }\n    };\n\n    // 根据MIME类型获取文件扩展名\n    const getExtensionFromMimeType = mimeType => {\n      const mimeToExt = {\n        'application/pdf': '.pdf',\n        'application/msword': '.doc',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',\n        'application/vnd.ms-excel': '.xls',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',\n        'application/vnd.ms-powerpoint': '.ppt',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',\n        'text/plain': '.txt',\n        'image/jpeg': '.jpg',\n        'image/png': '.png',\n        'image/gif': '.gif',\n        'application/zip': '.zip',\n        'application/x-rar-compressed': '.rar',\n        'application/x-7z-compressed': '.7z'\n      };\n      return mimeToExt[mimeType] || '';\n    };\n    onMounted(() => {\n      generateAcademicYears();\n      fetchReviews();\n    });\n    return {\n      academicYears,\n      queryParams,\n      reviews,\n      total,\n      loading,\n      fetchReviews,\n      handleCurrentChange,\n      detailDialogVisible,\n      reviewDetail,\n      reviewRecords,\n      viewReviewDetail,\n      getStatusText,\n      getStatusType,\n      getReviewerTitleText,\n      formatFileSize,\n      downloadFile,\n      reviewForm,\n      handleReview,\n      getExtensionFromMimeType,\n      safeElementConfig\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","axios","safeElementConfig","name","setup","userInfo","JSON","parse","localStorage","getItem","id","error","academicYears","generateAcademicYears","currentYear","Date","getFullYear","years","i","year","push","value","queryParams","current","size","academicYear","semester","status","reviews","total","loading","fetchReviews","response","get","params","data","records","console","handleCurrentChange","detailDialogVisible","reviewDetail","reviewRecords","viewReviewDetail","reviewId","detailResponse","recordsResponse","getStatusText","getStatusType","getReviewerTitleText","title","formatFileSize","units","index","fileSize","length","toFixed","downloadFile","materialId","warning","log","responseType","headers","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","contentDisposition","defaultFileName","material_name","fileType","file_type","toLowerCase","endsWith","filename","filenameStarMatch","match","decodeURIComponent","filenameMatch","extractedName","warn","contentType","includes","extension","getExtensionFromMimeType","download","body","appendChild","click","setTimeout","revokeObjectURL","removeChild","post","catch","success","reviewForm","comment","handleReview","result","role","parseInt","reviewerTitle","reviewerId","code","message","mimeType","mimeToExt"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\TCRSystem\\TCRSystem\\frontend\\src\\views\\admin\\MaterialReview.vue"],"sourcesContent":["<template>\n  <div class=\"material-review\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>教学材料审核</span>\n        </div>\n      </template>\n      \n      <div class=\"filter-container\">\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n          <el-form-item label=\"学年\">\n            <el-select v-model=\"queryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n              <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"学期\">\n            <el-select v-model=\"queryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n              <el-option label=\"第一学期\" :value=\"1\"></el-option>\n              <el-option label=\"第二学期\" :value=\"2\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"状态\">\n            <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable style=\"width: 250px;\" v-bind=\"safeElementConfig\">\n              <el-option label=\"待审核\" :value=\"0\"></el-option>\n              <el-option label=\"课程负责人审核中\" :value=\"1\"></el-option>\n              <el-option label=\"专业负责人审核中\" :value=\"2\"></el-option>\n              <el-option label=\"副院长审核中\" :value=\"3\"></el-option>\n              <el-option label=\"教务人员审核中\" :value=\"4\"></el-option>\n              <el-option label=\"审核通过\" :value=\"5\"></el-option>\n              <el-option label=\"审核不通过\" :value=\"6\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"fetchReviews\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <el-table :data=\"reviews\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column prop=\"material_name\" label=\"材料名称\" width=\"180\"></el-table-column>\n        <el-table-column prop=\"course_name\" label=\"所属课程\" width=\"180\"></el-table-column>\n        <el-table-column prop=\"material_type_name\" label=\"材料类型\"></el-table-column>\n        <el-table-column prop=\"academic_year\" label=\"学年\"></el-table-column>\n        <el-table-column prop=\"semester\" label=\"学期\">\n          <template #default=\"scope\">\n            {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"submit_user_name\" label=\"提交人\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusText(scope.row.status) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"create_time\" label=\"提交时间\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"150\">\n          <template #default=\"scope\">\n            <el-button type=\"text\" size=\"small\" @click=\"viewReviewDetail(scope.row.id)\">查看详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"total, prev, pager, next\"\n          :total=\"total\"\n          :page-size=\"queryParams.size\"\n          :current-page=\"queryParams.current\"\n          @current-change=\"handleCurrentChange\"\n        ></el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 审核详情对话框 -->\n    <el-dialog title=\"审核详情\" v-model=\"detailDialogVisible\" width=\"60%\" v-bind=\"safeElementConfig\">\n      <div v-if=\"reviewDetail\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"材料名称\">{{ reviewDetail.material_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"所属课程\">{{ reviewDetail.course_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料类型\">{{ reviewDetail.material_type_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"学年/学期\">{{ reviewDetail.academic_year }} / {{ reviewDetail.semester === 1 ? '第一学期' : '第二学期' }}</el-descriptions-item>\n          <el-descriptions-item label=\"提交人\">{{ reviewDetail.submit_user_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"提交时间\">{{ reviewDetail.create_time }}</el-descriptions-item>\n          <el-descriptions-item label=\"当前状态\">\n            <el-tag :type=\"getStatusType(reviewDetail.status)\">{{ getStatusText(reviewDetail.status) }}</el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"当前审核人\">{{ reviewDetail.current_reviewer_name }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料描述\" :span=\"2\">{{ reviewDetail.material_description }}</el-descriptions-item>\n        </el-descriptions>\n        \n        <div class=\"file-info\">\n          <h3>材料文件</h3>\n          <p>文件名：{{ reviewDetail.material_name }}</p>\n          <p>文件大小：{{ formatFileSize(reviewDetail.file_size) }}</p>\n          <p>文件类型：{{ reviewDetail.file_type }}</p>\n          <el-button type=\"primary\" size=\"small\" @click=\"downloadFile(reviewDetail.material_id)\">下载文件</el-button>\n        </div>\n        \n        <div class=\"review-records\">\n          <h3>审核记录</h3>\n          <el-table :data=\"reviewRecords\" style=\"width: 100%\">\n            <el-table-column prop=\"reviewer_name\" label=\"审核人\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"reviewer_title\" label=\"审核人职称\" width=\"120\">\n              <template #default=\"scope\">\n                {{ getReviewerTitleText(scope.row.reviewer_title) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"审核结果\" width=\"100\">\n              <template #default=\"scope\">\n                <el-tag :type=\"scope.row.result === 1 ? 'success' : 'danger'\">\n                  {{ scope.row.result === 1 ? '通过' : '不通过' }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"comment\" label=\"审核意见\"></el-table-column>\n            <el-table-column prop=\"create_time\" label=\"审核时间\" width=\"180\"></el-table-column>\n          </el-table>\n        </div>\n\n        <!-- 审核操作区域 -->\n        <div class=\"review-actions\" v-if=\"reviewDetail.status !== 5 && reviewDetail.status !== 6\">\n          <el-divider></el-divider>\n          <h3>审核操作</h3>\n          <el-form :model=\"reviewForm\" label-width=\"100px\">\n            <el-form-item label=\"审核意见\">\n              <el-input v-model=\"reviewForm.comment\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入审核意见\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"success\" @click=\"handleReview(1)\">通过</el-button>\n              <el-button type=\"danger\" @click=\"handleReview(0)\">不通过</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport axios from 'axios'\nimport { safeElementConfig } from '@/utils/resizeObserverFix'\n\nexport default {\n  name: 'AdminMaterialReview',\n  setup() {\n    // 检查用户信息\n    const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n    if (!userInfo.id) {\n      ElMessage.error('未获取到用户信息，请重新登录');\n      // 可以在这里添加重定向到登录页的逻辑\n      // router.push('/login');\n      return;\n    }\n\n    // 学年列表\n    const academicYears = ref([])\n    const generateAcademicYears = () => {\n      const currentYear = new Date().getFullYear()\n      const years = []\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i\n        years.push(`${year}-${year + 1}`)\n      }\n      academicYears.value = years\n    }\n    \n    // 查询参数\n    const queryParams = reactive({\n      current: 1,\n      size: 10,\n      academicYear: null,\n      semester: null,\n      status: null\n    })\n    \n    const reviews = ref([])\n    const total = ref(0)\n    const loading = ref(false)\n    \n    const fetchReviews = async () => {\n      loading.value = true\n      try {\n        const response = await axios.get('/api/material-review/admin/list', {\n          params: queryParams\n        })\n        \n        if (response.data && response.data.data) {\n          reviews.value = response.data.data.records || []\n          total.value = response.data.data.total || 0\n        } else {\n          reviews.value = []\n          total.value = 0\n        }\n      } catch (error) {\n        console.error('获取审核列表失败', error)\n        ElMessage.error('获取审核列表失败')\n        reviews.value = []\n        total.value = 0\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const handleCurrentChange = (current) => {\n      queryParams.current = current\n      fetchReviews()\n    }\n    \n    // 审核详情\n    const detailDialogVisible = ref(false)\n    const reviewDetail = ref(null)\n    const reviewRecords = ref([])\n    \n    const viewReviewDetail = async (reviewId) => {\n      try {\n        const detailResponse = await axios.get(`/api/material-review/detail/${reviewId}`)\n        if (detailResponse.data && detailResponse.data.data) {\n          reviewDetail.value = detailResponse.data.data\n          \n          const recordsResponse = await axios.get(`/api/material-review/records/${reviewId}`)\n          if (recordsResponse.data && recordsResponse.data.data) {\n            reviewRecords.value = recordsResponse.data.data || []\n          } else {\n            reviewRecords.value = []\n          }\n          \n          detailDialogVisible.value = true\n        } else {\n          ElMessage.error('获取审核详情失败')\n        }\n      } catch (error) {\n        console.error('获取审核详情失败', error)\n        ElMessage.error('获取审核详情失败')\n        reviewRecords.value = []\n      }\n    }\n    \n    // 工具函数\n    const getStatusText = (status) => {\n      switch (status) {\n        case 0: return '待审核'\n        case 1: return '课程负责人审核中'\n        case 2: return '专业负责人审核中'\n        case 3: return '副院长审核中'\n        case 4: return '教务人员审核中'\n        case 5: return '审核通过'\n        case 6: return '审核不通过'\n        default: return '未知状态'\n      }\n    }\n    \n    const getStatusType = (status) => {\n      switch (status) {\n        case 0: return 'info'\n        case 1: case 2: case 3: case 4: return 'warning'\n        case 5: return 'success'\n        case 6: return 'danger'\n        default: return 'info'\n      }\n    }\n    \n    const getReviewerTitleText = (title) => {\n      switch (title) {\n        case 0: return '普通教师'\n        case 1: return '课程负责人'\n        case 2: return '专业负责人'\n        case 3: return '副院长'\n        case 4: return '教务人员'\n        default: return '未知职称'\n      }\n    }\n    \n    const formatFileSize = (size) => {\n      if (!size) return '0 B'\n      const units = ['B', 'KB', 'MB', 'GB', 'TB']\n      let index = 0\n      let fileSize = size\n      while (fileSize >= 1024 && index < units.length - 1) {\n        fileSize /= 1024\n        index++\n      }\n      return fileSize.toFixed(2) + ' ' + units[index]\n    }\n    \n    const downloadFile = async (materialId) => {\n      if (!materialId) {\n        ElMessage.warning('材料ID为空')\n        return\n      }\n      \n      try {\n        // 添加日志，跟踪下载过程\n        console.log(`开始下载材料，ID: ${materialId}`)\n        \n        const response = await axios.get(`/api/material/download/${materialId}`, {\n          responseType: 'blob'\n        })\n        \n        // 记录响应头信息，用于调试\n        console.log('下载响应头:', response.headers)\n        \n        const blob = new Blob([response.data])\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        \n        // 获取Content-Disposition头部\n        const contentDisposition = response.headers['content-disposition']\n        console.log('Content-Disposition头:', contentDisposition)\n        \n        // 从reviewDetail中获取默认文件名（后备方案）\n        let defaultFileName = reviewDetail.value?.material_name || '下载文件'\n        const fileType = reviewDetail.value?.file_type || ''\n        if (fileType && !defaultFileName.toLowerCase().endsWith('.' + fileType.toLowerCase())) {\n          defaultFileName += '.' + fileType\n        }\n        \n        // 尝试从Content-Disposition头中提取文件名\n        let filename = defaultFileName\n        \n        if (contentDisposition) {\n          // 尝试提取filename*参数（RFC 5987格式）\n          const filenameStarMatch = contentDisposition.match(/filename\\*=UTF-8''([^;]+)/i)\n          if (filenameStarMatch && filenameStarMatch[1]) {\n            try {\n              // 对URL编码的文件名进行解码\n              filename = decodeURIComponent(filenameStarMatch[1])\n              console.log('从filename*参数解析的文件名:', filename)\n            } catch (error) {\n              console.error('解码filename*参数出错:', error)\n            }\n          } else {\n            // 尝试提取普通filename参数\n            const filenameMatch = contentDisposition.match(/filename=(?:\"([^\"]+)\"|([^;]+))/i)\n            if (filenameMatch) {\n              // 获取引号中或非引号的值\n              const extractedName = filenameMatch[1] || filenameMatch[2]\n              if (extractedName) {\n                try {\n                  // 可能需要URL解码\n                  filename = decodeURIComponent(extractedName)\n                  console.log('从filename参数解析的文件名:', filename)\n                } catch (error) {\n                  // 如果解码失败，使用原始值\n                  filename = extractedName\n                  console.log('使用未解码的filename参数:', filename)\n                }\n              }\n            }\n          }\n        } else {\n          console.warn('响应头中缺少Content-Disposition')\n        }\n        \n        // 确保文件名中包含扩展名\n        const contentType = response.headers['content-type']\n        if (contentType && !filename.includes('.')) {\n          // 从contentType获取扩展名\n          const extension = getExtensionFromMimeType(contentType)\n          if (extension) {\n            filename += extension\n            console.log(`根据Content-Type添加扩展名: ${extension}, 最终文件名: ${filename}`)\n          }\n        }\n        \n        console.log('最终下载文件名:', filename)\n        \n        // 设置下载文件名\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        \n        // 清理\n        setTimeout(() => {\n          window.URL.revokeObjectURL(url)\n          document.body.removeChild(link)\n        }, 100)\n        \n        // 更新下载次数\n        axios.post(`/api/material/download/${materialId}`)\n          .catch(error => console.error('更新下载次数失败:', error))\n        \n        ElMessage.success('文件下载成功')\n      } catch (error) {\n        console.error('下载文件失败:', error)\n        ElMessage.error('下载文件失败')\n      }\n    }\n    \n    // 审核表单数据\n    const reviewForm = ref({\n      comment: ''\n    });\n\n    // 处理审核操作\n    const handleReview = async (result) => {\n      if (!reviewForm.value.comment) {\n        ElMessage.warning('请输入审核意见');\n        return;\n      }\n\n      // 从localStorage获取用户信息\n      const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n      if (!userInfo.id) {\n        ElMessage.error('未获取到用户信息，请重新登录');\n        return;\n      }\n\n      try {\n        // 获取用户角色和职称\n        const role = parseInt(userInfo.role || '0');\n        let reviewerTitle = 0; // 默认为普通教师\n\n        // 根据角色设置职称\n        if (role === 2) { // 管理员\n          reviewerTitle = 4; // 教务人员\n        } else {\n          // 获取当前审核状态\n          const status = parseInt(reviewDetail.value.status);\n          switch (status) {\n            case 1: // 课程负责人审核中\n              reviewerTitle = 1;\n              break;\n            case 2: // 专业负责人审核中\n              reviewerTitle = 2;\n              break;\n            case 3: // 副院长审核中\n              reviewerTitle = 3;\n              break;\n            case 4: // 教务人员审核中\n              reviewerTitle = 4;\n              break;\n          }\n        }\n\n        console.log('发送审核请求，参数：', {\n          reviewId: parseInt(reviewDetail.value.id),\n          reviewerId: parseInt(userInfo.id),\n          reviewerTitle: parseInt(reviewerTitle),\n          result: parseInt(result),\n          comment: reviewForm.value.comment\n        });\n\n        const response = await axios.post('/api/material-review/review', {\n          reviewId: parseInt(reviewDetail.value.id),\n          reviewerId: parseInt(userInfo.id),\n          reviewerTitle: parseInt(reviewerTitle),\n          result: parseInt(result),\n          comment: reviewForm.value.comment\n        });\n\n        if (response.data && response.data.code === 200) {\n          ElMessage.success('审核操作成功');\n          detailDialogVisible.value = false;\n          fetchReviews(); // 刷新列表\n        } else {\n          ElMessage.error(response.data.message || '审核操作失败');\n        }\n      } catch (error) {\n        console.error('审核操作失败', error);\n        ElMessage.error('审核操作失败');\n      }\n    };\n    \n    // 根据MIME类型获取文件扩展名\n    const getExtensionFromMimeType = (mimeType) => {\n      const mimeToExt = {\n        'application/pdf': '.pdf',\n        'application/msword': '.doc',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',\n        'application/vnd.ms-excel': '.xls',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',\n        'application/vnd.ms-powerpoint': '.ppt',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',\n        'text/plain': '.txt',\n        'image/jpeg': '.jpg',\n        'image/png': '.png',\n        'image/gif': '.gif',\n        'application/zip': '.zip',\n        'application/x-rar-compressed': '.rar',\n        'application/x-7z-compressed': '.7z'\n      };\n      \n      return mimeToExt[mimeType] || '';\n    }\n    \n    onMounted(() => {\n      generateAcademicYears()\n      fetchReviews()\n    })\n    \n    return {\n      academicYears,\n      queryParams,\n      reviews,\n      total,\n      loading,\n      fetchReviews,\n      handleCurrentChange,\n      detailDialogVisible,\n      reviewDetail,\n      reviewRecords,\n      viewReviewDetail,\n      getStatusText,\n      getStatusType,\n      getReviewerTitleText,\n      formatFileSize,\n      downloadFile,\n      reviewForm,\n      handleReview,\n      getExtensionFromMimeType,\n      safeElementConfig\n    }\n  }\n}\n</script>\n\n<style scoped>\n.material-review {\n  padding: 20px;\n}\n\n.filter-container {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.file-info {\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n}\n\n.review-records {\n  margin-top: 20px;\n}\n\n.review-actions {\n  margin-top: 20px;\n}\n\n:deep(.el-select-dropdown__item) {\n  white-space: normal;\n  height: auto;\n  line-height: 1.5;\n  padding: 8px 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}