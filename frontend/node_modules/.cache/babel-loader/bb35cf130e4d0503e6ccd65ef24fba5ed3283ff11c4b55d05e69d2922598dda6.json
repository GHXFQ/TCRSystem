{"ast":null,"code":"import { ref, computed, onMounted, onBeforeUnmount, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nconst tableHeight = 200;\n\n// 添加 ResizeObserver 错误处理\n\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const router = useRouter();\n    const userInfo = computed(() => store.state.user.userInfo);\n\n    // 课程相关\n    const coursesLoading = ref(false);\n    const recentCourses = ref([]);\n    const showCoursesTable = ref(false);\n\n    // 资料相关\n    const materialsLoading = ref(false);\n    const recentMaterials = ref([]);\n    const showMaterialsTable = ref(false);\n\n    // 作业相关\n    const assignmentsLoading = ref(false);\n    const recentAssignments = ref([]);\n    const showAssignmentsTable = ref(false);\n\n    // 表格高度\n    const originalError = window.console.error;\n    const errorHandler = function () {\n      const args = Array.from(arguments);\n      const firstArg = args[0];\n      if (firstArg && typeof firstArg === 'string' && firstArg.includes('ResizeObserver')) {\n        // 忽略 ResizeObserver 错误\n        return;\n      }\n      return originalError.apply(window.console, args);\n    };\n\n    // 获取最近的课程（最多5个）\n    const fetchRecentCourses = async () => {\n      coursesLoading.value = true;\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('/api/student/courses', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.data.code === 200) {\n          // 获取最近的5个课程\n          recentCourses.value = (response.data.data || []).slice(0, 5);\n          console.log('获取最近课程成功:', recentCourses.value);\n\n          // 延迟显示表格\n          nextTick(() => {\n            showCoursesTable.value = true;\n          });\n\n          // 获取作业列表\n          fetchRecentAssignments();\n        } else {\n          console.error('获取课程失败:', response.data.message);\n        }\n      } catch (error) {\n        console.error('获取课程出错:', error);\n      } finally {\n        coursesLoading.value = false;\n      }\n    };\n\n    // 获取最近的资料（最多5个）\n    const fetchRecentMaterials = async () => {\n      materialsLoading.value = true;\n      try {\n        const token = localStorage.getItem('token');\n        // 先获取课程列表，用于后续关联课程名称\n        const coursesResponse = await axios.get('/api/student/courses', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (coursesResponse.data.code === 200) {\n          const courses = coursesResponse.data.data || [];\n\n          // 直接查询所有课程资料，不限定特定课程\n          const materialsResponse = await axios.get('/api/material/list', {\n            params: {\n              pageNum: 1,\n              pageSize: 5,\n              // 不指定courseId，查询所有课程\n              // 按创建时间降序排序\n              orderBy: 'create_time',\n              orderType: 'desc'\n            },\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (materialsResponse.data.code === 200) {\n            // 获取最新的5个资料\n            const materials = materialsResponse.data.data.records || [];\n\n            // 添加课程名称\n            recentMaterials.value = materials.map(material => {\n              const course = courses.find(c => c.id === material.courseId);\n              return {\n                ...material,\n                courseName: course ? course.name : '未知课程'\n              };\n            });\n\n            // 延迟显示表格\n            nextTick(() => {\n              showMaterialsTable.value = true;\n            });\n            console.log('获取最新资料成功:', recentMaterials.value);\n          } else {\n            console.error('获取资料失败:', materialsResponse.data.message);\n          }\n        }\n      } catch (error) {\n        console.error('获取资料出错:', error);\n      } finally {\n        materialsLoading.value = false;\n      }\n    };\n\n    // 获取待完成作业（最多5个）\n    const fetchRecentAssignments = async () => {\n      assignmentsLoading.value = true;\n      try {\n        // 使用正确的学生作业列表API\n        const response = await axios.get('/api/assignment/student/list', {\n          params: {\n            current: 1,\n            size: 5,\n            status: 1 // 只查询进行中的作业\n          }\n        });\n        if (response.data.code === 200) {\n          // 获取所有作业\n          const allAssignments = response.data.data.records || [];\n\n          // 筛选未提交的作业\n          const pendingAssignments = allAssignments.filter(a => !a.submitted).slice(0, 5);\n          recentAssignments.value = pendingAssignments;\n\n          // 延迟显示表格\n          nextTick(() => {\n            showAssignmentsTable.value = true;\n          });\n          console.log('获取待完成作业成功:', recentAssignments.value);\n        } else {\n          console.error('获取作业失败:', response.data.message);\n        }\n      } catch (error) {\n        console.error('获取作业出错:', error);\n      } finally {\n        assignmentsLoading.value = false;\n      }\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      if (!dateString) return '未知时间';\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    };\n\n    // 获取课程状态标签类型\n    const getStatusTag = status => {\n      switch (status) {\n        case 0:\n          return 'danger';\n        case 1:\n          return 'success';\n        case 2:\n          return 'info';\n        default:\n          return '';\n      }\n    };\n\n    // 获取课程状态标签文本\n    const getStatusLabel = status => {\n      switch (status) {\n        case 0:\n          return '已关闭';\n        case 1:\n          return '正常';\n        case 2:\n          return '已结束';\n        default:\n          return '未知';\n      }\n    };\n\n    // 查看课程资料\n    const viewMaterials = courseId => {\n      router.push({\n        name: 'StudentMaterials',\n        query: {\n          courseId\n        }\n      });\n    };\n\n    // 下载资料\n    const downloadMaterial = material => {\n      window.open(`/api/material/download/${material.id}`, '_blank');\n      ElMessage.success('开始下载资料');\n    };\n\n    // 跳转到课程页面\n    const goToCourses = () => {\n      router.push({\n        name: 'StudentCourses'\n      });\n    };\n\n    // 跳转到资料页面\n    const goToMaterials = () => {\n      // 如果有课程，跳转到第一个课程的资料页面\n      if (recentCourses.value.length > 0) {\n        router.push({\n          name: 'StudentMaterials',\n          query: {\n            courseId: recentCourses.value[0].id\n          }\n        });\n      } else {\n        // 否则跳转到课程页面\n        router.push({\n          name: 'StudentCourses'\n        });\n        ElMessage.info('请先选择一门课程');\n      }\n    };\n\n    // 跳转到作业页面\n    const goToAssignments = () => {\n      router.push({\n        name: 'StudentAssignments'\n      });\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      // 设置错误处理器\n      window.console.error = errorHandler;\n\n      // 获取数据\n      fetchRecentCourses();\n      fetchRecentMaterials();\n    });\n    onBeforeUnmount(() => {\n      // 恢复原始错误处理\n      window.console.error = originalError;\n    });\n    const __returned__ = {\n      store,\n      router,\n      userInfo,\n      coursesLoading,\n      recentCourses,\n      showCoursesTable,\n      materialsLoading,\n      recentMaterials,\n      showMaterialsTable,\n      assignmentsLoading,\n      recentAssignments,\n      showAssignmentsTable,\n      tableHeight,\n      originalError,\n      errorHandler,\n      fetchRecentCourses,\n      fetchRecentMaterials,\n      fetchRecentAssignments,\n      formatDate,\n      getStatusTag,\n      getStatusLabel,\n      viewMaterials,\n      downloadMaterial,\n      goToCourses,\n      goToMaterials,\n      goToAssignments,\n      ref,\n      computed,\n      onMounted,\n      onBeforeUnmount,\n      nextTick,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","nextTick","useStore","useRouter","axios","ElMessage","tableHeight","store","router","userInfo","state","user","coursesLoading","recentCourses","showCoursesTable","materialsLoading","recentMaterials","showMaterialsTable","assignmentsLoading","recentAssignments","showAssignmentsTable","originalError","window","console","error","errorHandler","args","Array","from","arguments","firstArg","includes","apply","fetchRecentCourses","value","token","localStorage","getItem","response","get","headers","data","code","slice","log","fetchRecentAssignments","message","fetchRecentMaterials","coursesResponse","courses","materialsResponse","params","pageNum","pageSize","orderBy","orderType","materials","records","map","material","course","find","c","id","courseId","courseName","name","current","size","status","allAssignments","pendingAssignments","filter","a","submitted","formatDate","dateString","date","Date","toLocaleString","getStatusTag","getStatusLabel","viewMaterials","push","query","downloadMaterial","open","success","goToCourses","goToMaterials","length","info","goToAssignments"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/student/Home.vue"],"sourcesContent":["<template>\n  <div class=\"student-home\">\n    <h1>学生首页</h1>\n    <el-card class=\"welcome-card\">\n      <div class=\"welcome-message\">\n        <h2>欢迎回来，{{ userInfo?.realName || '同学' }}</h2>\n        <p>您可以在这里查看您的课程、学习资料和提交反馈。</p>\n      </div>\n    </el-card>\n    \n    <el-row :gutter=\"20\" class=\"mt-20\">\n      <el-col :span=\"12\">\n        <el-card v-loading=\"coursesLoading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>我的课程</span>\n              <el-button type=\"text\" @click=\"goToCourses\">查看全部</el-button>\n            </div>\n          </template>\n          <div class=\"empty-block\" v-if=\"recentCourses.length === 0\">\n            <el-empty description=\"暂无课程数据\"></el-empty>\n          </div>\n          <div v-else class=\"table-container\">\n            <el-table \n              v-if=\"showCoursesTable\"\n              :data=\"recentCourses\" \n              style=\"width: 100%\"\n              :height=\"tableHeight\"\n              :show-header=\"true\"\n              :highlight-current-row=\"false\"\n            >\n              <el-table-column prop=\"name\" label=\"课程名称\" />\n              <el-table-column prop=\"teacherName\" label=\"教师\" width=\"120\" />\n              <el-table-column prop=\"classTime\" label=\"上课时间\" width=\"130\" />\n              <el-table-column prop=\"classLocation\" label=\"上课地点\" width=\"130\" />\n              <el-table-column label=\"状态\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"getStatusTag(scope.row.status)\">\n                    {{ getStatusLabel(scope.row.status) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"viewMaterials(scope.row.id)\">\n                    查看资料\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <div v-else class=\"loading-placeholder\"></div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card v-loading=\"materialsLoading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>最新资料</span>\n              <el-button type=\"text\" @click=\"goToMaterials\">查看全部</el-button>\n            </div>\n          </template>\n          <div class=\"empty-block\" v-if=\"recentMaterials.length === 0\">\n            <el-empty description=\"暂无资料数据\"></el-empty>\n          </div>\n          <div v-else class=\"table-container\">\n            <el-table \n              v-if=\"showMaterialsTable\"\n              :data=\"recentMaterials\" \n              style=\"width: 100%\"\n              :height=\"tableHeight\"\n              :show-header=\"true\"\n              :highlight-current-row=\"false\"\n            >\n              <el-table-column prop=\"name\" label=\"资料名称\" />\n              <el-table-column prop=\"courseName\" label=\"所属课程\" width=\"120\" />\n              <el-table-column label=\"上传时间\" width=\"180\">\n                <template #default=\"scope\">\n                  {{ formatDate(scope.row.createTime) }}\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"downloadMaterial(scope.row)\">\n                    下载\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <div v-else class=\"loading-placeholder\"></div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <el-row class=\"mt-20\">\n      <el-col :span=\"24\">\n        <el-card v-loading=\"assignmentsLoading\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>待完成作业</span>\n              <el-button type=\"text\" @click=\"goToAssignments\">查看全部</el-button>\n            </div>\n          </template>\n          <div class=\"empty-block\" v-if=\"recentAssignments.length === 0\">\n            <el-empty description=\"暂无待完成作业\"></el-empty>\n          </div>\n          <div v-else class=\"table-container\">\n            <el-table \n              v-if=\"showAssignmentsTable\"\n              :data=\"recentAssignments\" \n              style=\"width: 100%\"\n              :height=\"tableHeight\"\n              :show-header=\"true\"\n              :highlight-current-row=\"false\"\n            >\n              <el-table-column prop=\"title\" label=\"作业标题\" min-width=\"180\" />\n              <el-table-column prop=\"courseName\" label=\"所属课程\" width=\"150\" />\n              <el-table-column label=\"截止日期\" width=\"180\">\n                <template #default=\"scope\">\n                  {{ formatDate(scope.row.deadline) }}\n                </template>\n              </el-table-column>\n              <el-table-column label=\"状态\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"getStatusTag(scope.row.status)\">\n                    {{ getStatusLabel(scope.row.status) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"提交状态\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag v-if=\"scope.row.submitted\" type=\"success\">已提交</el-tag>\n                  <el-tag v-else type=\"danger\">未提交</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"120\">\n                <template #default>\n                  <el-button \n                    type=\"success\" \n                    size=\"small\" \n                    @click=\"goToAssignments\"\n                  >\n                    查看\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <div v-else class=\"loading-placeholder\"></div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\n\nconst store = useStore()\nconst router = useRouter()\nconst userInfo = computed(() => store.state.user.userInfo)\n\n// 课程相关\nconst coursesLoading = ref(false)\nconst recentCourses = ref([])\nconst showCoursesTable = ref(false)\n\n// 资料相关\nconst materialsLoading = ref(false)\nconst recentMaterials = ref([])\nconst showMaterialsTable = ref(false)\n\n// 作业相关\nconst assignmentsLoading = ref(false)\nconst recentAssignments = ref([])\nconst showAssignmentsTable = ref(false)\n\n// 表格高度\nconst tableHeight = 200\n\n// 添加 ResizeObserver 错误处理\nconst originalError = window.console.error;\nconst errorHandler = function() {\n  const args = Array.from(arguments);\n  const firstArg = args[0];\n  \n  if (firstArg && typeof firstArg === 'string' && firstArg.includes('ResizeObserver')) {\n    // 忽略 ResizeObserver 错误\n    return;\n  }\n  return originalError.apply(window.console, args);\n};\n\n// 获取最近的课程（最多5个）\nconst fetchRecentCourses = async () => {\n  coursesLoading.value = true\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios.get('/api/student/courses', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    \n    if (response.data.code === 200) {\n      // 获取最近的5个课程\n      recentCourses.value = (response.data.data || []).slice(0, 5)\n      console.log('获取最近课程成功:', recentCourses.value)\n      \n      // 延迟显示表格\n      nextTick(() => {\n        showCoursesTable.value = true\n      })\n      \n      // 获取作业列表\n      fetchRecentAssignments()\n    } else {\n      console.error('获取课程失败:', response.data.message)\n    }\n  } catch (error) {\n    console.error('获取课程出错:', error)\n  } finally {\n    coursesLoading.value = false\n  }\n}\n\n// 获取最近的资料（最多5个）\nconst fetchRecentMaterials = async () => {\n  materialsLoading.value = true\n  try {\n    const token = localStorage.getItem('token')\n    // 先获取课程列表，用于后续关联课程名称\n    const coursesResponse = await axios.get('/api/student/courses', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    \n    if (coursesResponse.data.code === 200) {\n      const courses = coursesResponse.data.data || []\n      \n      // 直接查询所有课程资料，不限定特定课程\n      const materialsResponse = await axios.get('/api/material/list', {\n        params: {\n          pageNum: 1,\n          pageSize: 5,\n          // 不指定courseId，查询所有课程\n          // 按创建时间降序排序\n          orderBy: 'create_time',\n          orderType: 'desc'\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n      \n      if (materialsResponse.data.code === 200) {\n        // 获取最新的5个资料\n        const materials = materialsResponse.data.data.records || []\n        \n        // 添加课程名称\n        recentMaterials.value = materials.map(material => {\n          const course = courses.find(c => c.id === material.courseId)\n          return {\n            ...material,\n            courseName: course ? course.name : '未知课程'\n          }\n        })\n        \n        // 延迟显示表格\n        nextTick(() => {\n          showMaterialsTable.value = true\n        })\n        \n        console.log('获取最新资料成功:', recentMaterials.value)\n      } else {\n        console.error('获取资料失败:', materialsResponse.data.message)\n      }\n    }\n  } catch (error) {\n    console.error('获取资料出错:', error)\n  } finally {\n    materialsLoading.value = false\n  }\n}\n\n// 获取待完成作业（最多5个）\nconst fetchRecentAssignments = async () => {\n  assignmentsLoading.value = true\n  try {\n    // 使用正确的学生作业列表API\n    const response = await axios.get('/api/assignment/student/list', {\n      params: {\n        current: 1,\n        size: 5,\n        status: 1 // 只查询进行中的作业\n      }\n    })\n    \n    if (response.data.code === 200) {\n      // 获取所有作业\n      const allAssignments = response.data.data.records || []\n      \n      // 筛选未提交的作业\n      const pendingAssignments = allAssignments\n        .filter(a => !a.submitted)\n        .slice(0, 5)\n      \n      recentAssignments.value = pendingAssignments\n      \n      // 延迟显示表格\n      nextTick(() => {\n        showAssignmentsTable.value = true\n      })\n      \n      console.log('获取待完成作业成功:', recentAssignments.value)\n    } else {\n      console.error('获取作业失败:', response.data.message)\n    }\n  } catch (error) {\n    console.error('获取作业出错:', error)\n  } finally {\n    assignmentsLoading.value = false\n  }\n}\n\n// 格式化日期\nconst formatDate = (dateString) => {\n  if (!dateString) return '未知时间'\n  const date = new Date(dateString)\n  return date.toLocaleString()\n}\n\n// 获取课程状态标签类型\nconst getStatusTag = (status) => {\n  switch (status) {\n    case 0: return 'danger'\n    case 1: return 'success'\n    case 2: return 'info'\n    default: return ''\n  }\n}\n\n// 获取课程状态标签文本\nconst getStatusLabel = (status) => {\n  switch (status) {\n    case 0: return '已关闭'\n    case 1: return '正常'\n    case 2: return '已结束'\n    default: return '未知'\n  }\n}\n\n// 查看课程资料\nconst viewMaterials = (courseId) => {\n  router.push({\n    name: 'StudentMaterials',\n    query: { courseId }\n  })\n}\n\n\n// 下载资料\nconst downloadMaterial = (material) => {\n  window.open(`/api/material/download/${material.id}`, '_blank')\n  ElMessage.success('开始下载资料')\n}\n\n// 跳转到课程页面\nconst goToCourses = () => {\n  router.push({ name: 'StudentCourses' })\n}\n\n// 跳转到资料页面\nconst goToMaterials = () => {\n  // 如果有课程，跳转到第一个课程的资料页面\n  if (recentCourses.value.length > 0) {\n    router.push({\n      name: 'StudentMaterials',\n      query: { courseId: recentCourses.value[0].id }\n    })\n  } else {\n    // 否则跳转到课程页面\n    router.push({ name: 'StudentCourses' })\n    ElMessage.info('请先选择一门课程')\n  }\n}\n\n// 跳转到作业页面\nconst goToAssignments = () => {\n  router.push({ name: 'StudentAssignments' })\n}\n\n// 页面加载时获取数据\nonMounted(() => {\n  // 设置错误处理器\n  window.console.error = errorHandler;\n  \n  // 获取数据\n  fetchRecentCourses();\n  fetchRecentMaterials();\n});\n\nonBeforeUnmount(() => {\n  // 恢复原始错误处理\n  window.console.error = originalError;\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.student-home {\n  h1 {\n    margin-bottom: 20px;\n  }\n  \n  .welcome-card {\n    margin-bottom: 20px;\n    \n    .welcome-message {\n      h2 {\n        margin-top: 0;\n        margin-bottom: 10px;\n        color: #409EFF;\n      }\n      \n      p {\n        margin: 0;\n        color: #606266;\n      }\n    }\n  }\n  \n  .mt-20 {\n    margin-top: 20px;\n  }\n  \n  .card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .empty-block {\n    padding: 30px 0;\n  }\n  \n  .table-container {\n    height: 200px;\n    overflow: hidden;\n    \n    .el-table {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  \n  .loading-placeholder {\n    height: 200px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #f5f7fa;\n    border-radius: 4px;\n    color: #909399;\n    font-size: 14px;\n    \n    &::before {\n      content: \"加载中...\";\n    }\n  }\n}\n</style> "],"mappings":"AA6JA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,KAAI;AACxE,SAASC,QAAQ,QAAQ,MAAK;AAC9B,SAASC,SAAS,QAAQ,YAAW;AACrC,OAAOC,KAAK,MAAM,OAAM;AACxB,SAASC,SAAS,QAAQ,cAAa;AAsBvC,MAAMC,WAAW,GAAG,GAAE;;AAEtB;;;;;;;;IAtBA,MAAMC,KAAK,GAAGL,QAAQ,CAAC;IACvB,MAAMM,MAAM,GAAGL,SAAS,CAAC;IACzB,MAAMM,QAAQ,GAAGX,QAAQ,CAAC,MAAMS,KAAK,CAACG,KAAK,CAACC,IAAI,CAACF,QAAQ;;IAEzD;IACA,MAAMG,cAAc,GAAGf,GAAG,CAAC,KAAK;IAChC,MAAMgB,aAAa,GAAGhB,GAAG,CAAC,EAAE;IAC5B,MAAMiB,gBAAgB,GAAGjB,GAAG,CAAC,KAAK;;IAElC;IACA,MAAMkB,gBAAgB,GAAGlB,GAAG,CAAC,KAAK;IAClC,MAAMmB,eAAe,GAAGnB,GAAG,CAAC,EAAE;IAC9B,MAAMoB,kBAAkB,GAAGpB,GAAG,CAAC,KAAK;;IAEpC;IACA,MAAMqB,kBAAkB,GAAGrB,GAAG,CAAC,KAAK;IACpC,MAAMsB,iBAAiB,GAAGtB,GAAG,CAAC,EAAE;IAChC,MAAMuB,oBAAoB,GAAGvB,GAAG,CAAC,KAAK;;IAEtC;IAIA,MAAMwB,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACC,KAAK;IAC1C,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAW;MAC9B,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;MAClC,MAAMC,QAAQ,GAAGJ,IAAI,CAAC,CAAC,CAAC;MAExB,IAAII,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QACnF;QACA;MACF;MACA,OAAOV,aAAa,CAACW,KAAK,CAACV,MAAM,CAACC,OAAO,EAAEG,IAAI,CAAC;IAClD,CAAC;;IAED;IACA,MAAMO,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrCrB,cAAc,CAACsB,KAAK,GAAG,IAAG;MAC1B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,MAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,sBAAsB,EAAE;UACvDC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUL,KAAK;UAClC;QACF,CAAC;QAED,IAAIG,QAAQ,CAACG,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9B;UACA7B,aAAa,CAACqB,KAAK,GAAG,CAACI,QAAQ,CAACG,IAAI,CAACA,IAAI,IAAI,EAAE,EAAEE,KAAK,CAAC,CAAC,EAAE,CAAC;UAC3DpB,OAAO,CAACqB,GAAG,CAAC,WAAW,EAAE/B,aAAa,CAACqB,KAAK;;UAE5C;UACAjC,QAAQ,CAAC,MAAM;YACba,gBAAgB,CAACoB,KAAK,GAAG,IAAG;UAC9B,CAAC;;UAED;UACAW,sBAAsB,CAAC;QACzB,CAAC,MAAM;UACLtB,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEc,QAAQ,CAACG,IAAI,CAACK,OAAO;QAChD;MACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK;MAChC,CAAC,SAAS;QACRZ,cAAc,CAACsB,KAAK,GAAG,KAAI;MAC7B;IACF;;IAEA;IACA,MAAMa,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvChC,gBAAgB,CAACmB,KAAK,GAAG,IAAG;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C;QACA,MAAMW,eAAe,GAAG,MAAM5C,KAAK,CAACmC,GAAG,CAAC,sBAAsB,EAAE;UAC9DC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUL,KAAK;UAClC;QACF,CAAC;QAED,IAAIa,eAAe,CAACP,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UACrC,MAAMO,OAAO,GAAGD,eAAe,CAACP,IAAI,CAACA,IAAI,IAAI,EAAC;;UAE9C;UACA,MAAMS,iBAAiB,GAAG,MAAM9C,KAAK,CAACmC,GAAG,CAAC,oBAAoB,EAAE;YAC9DY,MAAM,EAAE;cACNC,OAAO,EAAE,CAAC;cACVC,QAAQ,EAAE,CAAC;cACX;cACA;cACAC,OAAO,EAAE,aAAa;cACtBC,SAAS,EAAE;YACb,CAAC;YACDf,OAAO,EAAE;cACP,eAAe,EAAE,UAAUL,KAAK;YAClC;UACF,CAAC;UAED,IAAIe,iBAAiB,CAACT,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;YACvC;YACA,MAAMc,SAAS,GAAGN,iBAAiB,CAACT,IAAI,CAACA,IAAI,CAACgB,OAAO,IAAI,EAAC;;YAE1D;YACAzC,eAAe,CAACkB,KAAK,GAAGsB,SAAS,CAACE,GAAG,CAACC,QAAQ,IAAI;cAChD,MAAMC,MAAM,GAAGX,OAAO,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,QAAQ,CAACK,QAAQ;cAC3D,OAAO;gBACL,GAAGL,QAAQ;gBACXM,UAAU,EAAEL,MAAM,GAAGA,MAAM,CAACM,IAAI,GAAG;cACrC;YACF,CAAC;;YAED;YACAjE,QAAQ,CAAC,MAAM;cACbgB,kBAAkB,CAACiB,KAAK,GAAG,IAAG;YAChC,CAAC;YAEDX,OAAO,CAACqB,GAAG,CAAC,WAAW,EAAE5B,eAAe,CAACkB,KAAK;UAChD,CAAC,MAAM;YACLX,OAAO,CAACC,KAAK,CAAC,SAAS,EAAE0B,iBAAiB,CAACT,IAAI,CAACK,OAAO;UACzD;QACF;MACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK;MAChC,CAAC,SAAS;QACRT,gBAAgB,CAACmB,KAAK,GAAG,KAAI;MAC/B;IACF;;IAEA;IACA,MAAMW,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC3B,kBAAkB,CAACgB,KAAK,GAAG,IAAG;MAC9B,IAAI;QACF;QACA,MAAMI,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,8BAA8B,EAAE;UAC/DY,MAAM,EAAE;YACNgB,OAAO,EAAE,CAAC;YACVC,IAAI,EAAE,CAAC;YACPC,MAAM,EAAE,CAAC,CAAC;UACZ;QACF,CAAC;QAED,IAAI/B,QAAQ,CAACG,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UAC9B;UACA,MAAM4B,cAAc,GAAGhC,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACgB,OAAO,IAAI,EAAC;;UAEtD;UACA,MAAMc,kBAAkB,GAAGD,cAAa,CACrCE,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,SAAS,EACxB/B,KAAK,CAAC,CAAC,EAAE,CAAC;UAEbxB,iBAAiB,CAACe,KAAK,GAAGqC,kBAAiB;;UAE3C;UACAtE,QAAQ,CAAC,MAAM;YACbmB,oBAAoB,CAACc,KAAK,GAAG,IAAG;UAClC,CAAC;UAEDX,OAAO,CAACqB,GAAG,CAAC,YAAY,EAAEzB,iBAAiB,CAACe,KAAK;QACnD,CAAC,MAAM;UACLX,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEc,QAAQ,CAACG,IAAI,CAACK,OAAO;QAChD;MACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK;MAChC,CAAC,SAAS;QACRN,kBAAkB,CAACgB,KAAK,GAAG,KAAI;MACjC;IACF;;IAEA;IACA,MAAMyC,UAAU,GAAIC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,MAAK;MAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAOC,IAAI,CAACE,cAAc,CAAC;IAC7B;;IAEA;IACA,MAAMC,YAAY,GAAIX,MAAM,IAAK;MAC/B,QAAQA,MAAM;QACZ,KAAK,CAAC;UAAE,OAAO,QAAO;QACtB,KAAK,CAAC;UAAE,OAAO,SAAQ;QACvB,KAAK,CAAC;UAAE,OAAO,MAAK;QACpB;UAAS,OAAO,EAAC;MACnB;IACF;;IAEA;IACA,MAAMY,cAAc,GAAIZ,MAAM,IAAK;MACjC,QAAQA,MAAM;QACZ,KAAK,CAAC;UAAE,OAAO,KAAI;QACnB,KAAK,CAAC;UAAE,OAAO,IAAG;QAClB,KAAK,CAAC;UAAE,OAAO,KAAI;QACnB;UAAS,OAAO,IAAG;MACrB;IACF;;IAEA;IACA,MAAMa,aAAa,GAAIlB,QAAQ,IAAK;MAClCxD,MAAM,CAAC2E,IAAI,CAAC;QACVjB,IAAI,EAAE,kBAAkB;QACxBkB,KAAK,EAAE;UAAEpB;QAAS;MACpB,CAAC;IACH;;IAGA;IACA,MAAMqB,gBAAgB,GAAI1B,QAAQ,IAAK;MACrCrC,MAAM,CAACgE,IAAI,CAAC,0BAA0B3B,QAAQ,CAACI,EAAE,EAAE,EAAE,QAAQ;MAC7D1D,SAAS,CAACkF,OAAO,CAAC,QAAQ;IAC5B;;IAEA;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBhF,MAAM,CAAC2E,IAAI,CAAC;QAAEjB,IAAI,EAAE;MAAiB,CAAC;IACxC;;IAEA;IACA,MAAMuB,aAAa,GAAGA,CAAA,KAAM;MAC1B;MACA,IAAI5E,aAAa,CAACqB,KAAK,CAACwD,MAAM,GAAG,CAAC,EAAE;QAClClF,MAAM,CAAC2E,IAAI,CAAC;UACVjB,IAAI,EAAE,kBAAkB;UACxBkB,KAAK,EAAE;YAAEpB,QAAQ,EAAEnD,aAAa,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC6B;UAAG;QAC/C,CAAC;MACH,CAAC,MAAM;QACL;QACAvD,MAAM,CAAC2E,IAAI,CAAC;UAAEjB,IAAI,EAAE;QAAiB,CAAC;QACtC7D,SAAS,CAACsF,IAAI,CAAC,UAAU;MAC3B;IACF;;IAEA;IACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5BpF,MAAM,CAAC2E,IAAI,CAAC;QAAEjB,IAAI,EAAE;MAAqB,CAAC;IAC5C;;IAEA;IACAnE,SAAS,CAAC,MAAM;MACd;MACAuB,MAAM,CAACC,OAAO,CAACC,KAAK,GAAGC,YAAY;;MAEnC;MACAQ,kBAAkB,CAAC,CAAC;MACpBc,oBAAoB,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF/C,eAAe,CAAC,MAAM;MACpB;MACAsB,MAAM,CAACC,OAAO,CAACC,KAAK,GAAGH,aAAa;IACtC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}