{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\n\n// 任务列表相关数据\n\nexport default {\n  __name: 'MaterialTasks',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const taskList = ref([]);\n    const total = ref(0);\n    const selectedTasks = ref([]);\n\n    // 查询参数\n    const queryParams = reactive({\n      current: 1,\n      size: 10,\n      title: '',\n      materialTypeId: '',\n      academicYear: '',\n      semester: '',\n      status: ''\n    });\n\n    // 添加/编辑对话框相关数据\n    const dialogVisible = ref(false);\n    const dialogTitle = ref('添加任务');\n    const taskFormRef = ref(null);\n    const submitLoading = ref(false);\n    const taskForm = reactive({\n      id: null,\n      title: '',\n      description: '',\n      materialTypeId: '',\n      courseIds: [],\n      academicYear: '',\n      semester: 1,\n      deadline: '',\n      status: 0\n    });\n\n    // 任务表单校验规则\n    const taskRules = {\n      title: [{\n        required: true,\n        message: '请输入任务标题',\n        trigger: 'blur'\n      }],\n      materialTypeId: [{\n        required: true,\n        message: '请选择材料类型',\n        trigger: 'change'\n      }],\n      courseIds: [{\n        required: true,\n        message: '请选择课程',\n        trigger: 'change'\n      }],\n      academicYear: [{\n        required: true,\n        message: '请选择学年',\n        trigger: 'change'\n      }],\n      semester: [{\n        required: true,\n        message: '请选择学期',\n        trigger: 'change'\n      }],\n      deadline: [{\n        required: true,\n        message: '请选择截止日期',\n        trigger: 'change'\n      }]\n    };\n\n    // 进度对话框相关数据\n    const progressDialogVisible = ref(false);\n    const progressLoading = ref(false);\n    const currentTask = ref(null);\n    const progressData = ref({});\n    const progressActiveTab = ref('completed');\n\n    // 选项列表\n    const materialTypes = ref([]);\n    const courseList = ref([]);\n    const academicYears = ref([]);\n\n    // 生成学年列表\n    const generateAcademicYears = () => {\n      const years = [];\n      const currentYear = new Date().getFullYear();\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i;\n        years.push(`${year}-${year + 1}`);\n      }\n      academicYears.value = years;\n    };\n\n    // 获取材料类型列表\n    const fetchMaterialTypes = async () => {\n      try {\n        const response = await axios.get('/api/material-type/list');\n        if (response.data.code === 200 && response.data.data) {\n          materialTypes.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取材料类型出错:', error);\n        ElMessage.error('获取材料类型失败');\n      }\n    };\n\n    // 获取课程列表\n    const fetchCourseList = async () => {\n      try {\n        const response = await axios.get('/api/admin/course/list');\n        if (response.data.code === 200 && response.data.data) {\n          courseList.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取课程列表出错:', error);\n        ElMessage.error('获取课程列表失败');\n      }\n    };\n\n    // 获取任务列表\n    const fetchTaskList = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/admin/material-task/list', {\n          params: queryParams\n        });\n        if (response.data.code === 200) {\n          taskList.value = response.data.data.records || [];\n          total.value = response.data.data.total || 0;\n        } else {\n          ElMessage.error(response.data.message || '获取任务列表失败');\n        }\n      } catch (error) {\n        console.error('获取任务列表出错:', error);\n        ElMessage.error('获取任务列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 查询任务\n    const handleQuery = () => {\n      queryParams.current = 1;\n      fetchTaskList();\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      Object.assign(queryParams, {\n        current: 1,\n        size: 10,\n        title: '',\n        materialTypeId: '',\n        academicYear: '',\n        semester: '',\n        status: ''\n      });\n      fetchTaskList();\n    };\n\n    // 表格选择行变化\n    const handleSelectionChange = selection => {\n      selectedTasks.value = selection;\n    };\n\n    // 添加任务\n    const handleAdd = () => {\n      dialogTitle.value = '添加任务';\n      resetTaskForm();\n      dialogVisible.value = true;\n    };\n\n    // 编辑任务\n    const handleEdit = row => {\n      dialogTitle.value = '编辑任务';\n      resetTaskForm();\n      Object.assign(taskForm, {\n        ...row\n      });\n      if (typeof taskForm.courseIds === 'string') {\n        taskForm.courseIds = taskForm.courseIds.split(',').map(id => parseInt(id));\n      }\n      dialogVisible.value = true;\n    };\n\n    // 重置任务表单\n    const resetTaskForm = () => {\n      taskForm.id = null;\n      taskForm.title = '';\n      taskForm.description = '';\n      taskForm.materialTypeId = '';\n      taskForm.courseIds = [];\n      taskForm.academicYear = academicYears.value[0] || '';\n      taskForm.semester = 1;\n      taskForm.deadline = '';\n      taskForm.status = 0;\n      if (taskFormRef.value) {\n        taskFormRef.value.resetFields();\n      }\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      if (!taskFormRef.value) return;\n      await taskFormRef.value.validate(async valid => {\n        if (!valid) return;\n        submitLoading.value = true;\n        try {\n          const method = taskForm.id ? 'put' : 'post';\n          const url = taskForm.id ? `/api/admin/material-task/${taskForm.id}` : '/api/admin/material-task';\n          const response = await axios[method](url, taskForm);\n          if (response.data.code === 200) {\n            ElMessage.success(`${taskForm.id ? '更新' : '添加'}任务成功`);\n            dialogVisible.value = false;\n            fetchTaskList();\n          } else {\n            ElMessage.error(response.data.message || `${taskForm.id ? '更新' : '添加'}任务失败`);\n          }\n        } catch (error) {\n          console.error(`${taskForm.id ? '更新' : '添加'}任务出错:`, error);\n          ElMessage.error(`${taskForm.id ? '更新' : '添加'}任务失败，请稍后重试`);\n        } finally {\n          submitLoading.value = false;\n        }\n      });\n    };\n\n    // 发布任务\n    const handlePublish = async id => {\n      try {\n        const response = await axios.put(`/api/admin/material-task/publish/${id}`);\n        if (response.data.code === 200) {\n          ElMessage.success('发布任务成功');\n          fetchTaskList();\n        } else {\n          ElMessage.error(response.data.message || '发布任务失败');\n        }\n      } catch (error) {\n        console.error('发布任务出错:', error);\n        ElMessage.error('发布任务失败，请稍后重试');\n      }\n    };\n\n    // 批量发布任务\n    const handlePublishBatch = async () => {\n      if (selectedTasks.value.length === 0) {\n        ElMessage.warning('请选择要发布的任务');\n        return;\n      }\n      const taskIds = selectedTasks.value.map(task => task.id);\n      try {\n        const response = await axios.put('/api/admin/material-task/publish-batch', {\n          taskIds\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('批量发布任务成功');\n          fetchTaskList();\n        } else {\n          ElMessage.error(response.data.message || '批量发布任务失败');\n        }\n      } catch (error) {\n        console.error('批量发布任务出错:', error);\n        ElMessage.error('批量发布任务失败，请稍后重试');\n      }\n    };\n\n    // 删除任务\n    const handleDelete = async id => {\n      ElMessageBox.confirm('确定要删除此任务吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const response = await axios.delete(`/api/admin/material-task/${id}`);\n          if (response.data.code === 200) {\n            ElMessage.success('删除任务成功');\n            fetchTaskList();\n          } else {\n            ElMessage.error(response.data.message || '删除任务失败');\n          }\n        } catch (error) {\n          console.error('删除任务出错:', error);\n          ElMessage.error('删除任务失败，请稍后重试');\n        }\n      }).catch(() => {});\n    };\n\n    // 批量删除任务\n    const handleDeleteBatch = async () => {\n      if (selectedTasks.value.length === 0) {\n        ElMessage.warning('请选择要删除的任务');\n        return;\n      }\n      ElMessageBox.confirm(`确定要删除选中的 ${selectedTasks.value.length} 个任务吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        const taskIds = selectedTasks.value.map(task => task.id);\n        try {\n          const response = await axios.delete('/api/admin/material-task/batch', {\n            data: {\n              taskIds\n            }\n          });\n          if (response.data.code === 200) {\n            ElMessage.success('批量删除任务成功');\n            fetchTaskList();\n          } else {\n            ElMessage.error(response.data.message || '批量删除任务失败');\n          }\n        } catch (error) {\n          console.error('批量删除任务出错:', error);\n          ElMessage.error('批量删除任务失败，请稍后重试');\n        }\n      }).catch(() => {});\n    };\n\n    // 查看任务完成情况\n    const handleViewProgress = async id => {\n      progressLoading.value = true;\n      progressDialogVisible.value = true;\n      try {\n        // 获取任务详情\n        const taskResponse = await axios.get(`/api/admin/material-task/${id}`);\n        if (taskResponse.data.code === 200 && taskResponse.data.data) {\n          currentTask.value = taskResponse.data.data;\n        }\n\n        // 获取任务完成情况\n        const progressResponse = await axios.get(`/api/admin/material-task/progress/${id}`);\n        if (progressResponse.data.code === 200 && progressResponse.data.data) {\n          progressData.value = progressResponse.data.data;\n        }\n      } catch (error) {\n        console.error('获取任务完成情况出错:', error);\n        ElMessage.error('获取任务完成情况失败，请稍后重试');\n      } finally {\n        progressLoading.value = false;\n      }\n    };\n\n    // 查看材料\n    const viewMaterial = materialId => {\n      window.open(`/api/material/download/${materialId}`, '_blank');\n    };\n\n    // 发送提醒\n    const sendReminder = async teacherId => {\n      try {\n        const response = await axios.post('/api/admin/material-task/remind', {\n          taskId: currentTask.value.id,\n          teacherId\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('已发送提醒通知');\n        } else {\n          ElMessage.error(response.data.message || '发送提醒失败');\n        }\n      } catch (error) {\n        console.error('发送提醒出错:', error);\n        ElMessage.error('发送提醒失败，请稍后重试');\n      }\n    };\n\n    // 分页器相关方法\n    const handleSizeChange = size => {\n      queryParams.size = size;\n      fetchTaskList();\n    };\n    const handleCurrentChange = current => {\n      queryParams.current = current;\n      fetchTaskList();\n    };\n    onMounted(() => {\n      generateAcademicYears();\n      fetchMaterialTypes();\n      fetchCourseList();\n      fetchTaskList();\n    });\n    const __returned__ = {\n      loading,\n      taskList,\n      total,\n      selectedTasks,\n      queryParams,\n      dialogVisible,\n      dialogTitle,\n      taskFormRef,\n      submitLoading,\n      taskForm,\n      taskRules,\n      progressDialogVisible,\n      progressLoading,\n      currentTask,\n      progressData,\n      progressActiveTab,\n      materialTypes,\n      courseList,\n      academicYears,\n      generateAcademicYears,\n      fetchMaterialTypes,\n      fetchCourseList,\n      fetchTaskList,\n      handleQuery,\n      resetQuery,\n      handleSelectionChange,\n      handleAdd,\n      handleEdit,\n      resetTaskForm,\n      submitForm,\n      handlePublish,\n      handlePublishBatch,\n      handleDelete,\n      handleDeleteBatch,\n      handleViewProgress,\n      viewMaterial,\n      sendReminder,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","axios","loading","taskList","total","selectedTasks","queryParams","current","size","title","materialTypeId","academicYear","semester","status","dialogVisible","dialogTitle","taskFormRef","submitLoading","taskForm","id","description","courseIds","deadline","taskRules","required","message","trigger","progressDialogVisible","progressLoading","currentTask","progressData","progressActiveTab","materialTypes","courseList","academicYears","generateAcademicYears","years","currentYear","Date","getFullYear","i","year","push","value","fetchMaterialTypes","response","get","data","code","error","console","fetchCourseList","fetchTaskList","params","records","handleQuery","resetQuery","Object","assign","handleSelectionChange","selection","handleAdd","resetTaskForm","handleEdit","row","split","map","parseInt","resetFields","submitForm","validate","valid","method","url","success","handlePublish","put","handlePublishBatch","length","warning","taskIds","task","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","delete","catch","handleDeleteBatch","handleViewProgress","taskResponse","progressResponse","viewMaterial","materialId","window","open","sendReminder","teacherId","post","taskId","handleSizeChange","handleCurrentChange"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/admin/MaterialTasks.vue"],"sourcesContent":["<template>\n  <div class=\"material-tasks\">\n    <h1 class=\"page-title\">教学材料任务管理</h1>\n    \n    <!-- 过滤条件 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n        <el-form-item label=\"任务标题\">\n          <el-input v-model=\"queryParams.title\" placeholder=\"请输入任务标题\" clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"材料类型\">\n          <el-select v-model=\"queryParams.materialTypeId\" placeholder=\"请选择材料类型\" clearable style=\"width: 200px;\">\n            <el-option v-for=\"item in materialTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学年\">\n          <el-select v-model=\"queryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 200px;\">\n            <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学期\">\n          <el-select v-model=\"queryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 200px;\">\n            <el-option :label=\"'第一学期'\" :value=\"1\"></el-option>\n            <el-option :label=\"'第二学期'\" :value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable style=\"width: 200px;\">\n            <el-option :label=\"'未开始'\" :value=\"0\"></el-option>\n            <el-option :label=\"'进行中'\" :value=\"1\"></el-option>\n            <el-option :label=\"'已结束'\" :value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <!-- 操作按钮 -->\n    <div class=\"operation-container\">\n      <el-button type=\"primary\" @click=\"handleAdd\">添加任务</el-button>\n      <el-button type=\"success\" @click=\"handlePublishBatch\" :disabled=\"selectedTasks.length === 0\">批量发布</el-button>\n      <el-button type=\"danger\" @click=\"handleDeleteBatch\" :disabled=\"selectedTasks.length === 0\">批量删除</el-button>\n    </div>\n    \n    <!-- 任务表格 -->\n    <el-card class=\"table-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <el-table\n        v-else\n        :data=\"taskList\"\n        style=\"width: 100%\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"title\" label=\"任务标题\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"materialTypeName\" label=\"材料类型\"></el-table-column>\n        <el-table-column prop=\"courseName\" label=\"课程\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"academicYear\" label=\"学年\"></el-table-column>\n        <el-table-column prop=\"semester\" label=\"学期\">\n          <template #default=\"scope\">\n            {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"deadline\" label=\"截止日期\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : (scope.row.status === 0 ? 'warning' : 'danger')\">\n              {{ scope.row.status === 1 ? '进行中' : (scope.row.status === 0 ? '未开始' : '已结束') }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"180\">\n          <template #default=\"scope\">\n            <el-button-group>\n              <el-button v-if=\"scope.row.status === 0\" size=\"small\" type=\"primary\" @click=\"handlePublish(scope.row.id)\">发布</el-button>\n              <el-button size=\"small\" type=\"success\" @click=\"handleViewProgress(scope.row.id)\">完成情况</el-button>\n              <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n              <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页器 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-if=\"total > 0\"\n          :current-page=\"queryParams.current\"\n          :page-size=\"queryParams.size\"\n          :page-sizes=\"[10, 20, 30, 50]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 添加/编辑任务对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      v-model=\"dialogVisible\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form\n        :model=\"taskForm\"\n        :rules=\"taskRules\"\n        ref=\"taskFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"任务标题\" prop=\"title\">\n          <el-input v-model=\"taskForm.title\" placeholder=\"请输入任务标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务描述\" prop=\"description\">\n          <el-input\n            v-model=\"taskForm.description\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入任务描述\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"材料类型\" prop=\"materialTypeId\">\n          <el-select v-model=\"taskForm.materialTypeId\" placeholder=\"请选择材料类型\" style=\"width: 100%;\">\n            <el-option v-for=\"item in materialTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"所属课程\" prop=\"courseIds\">\n          <el-select\n            v-model=\"taskForm.courseIds\"\n            multiple\n            collapse-tags\n            placeholder=\"请选择课程，可多选\"\n            style=\"width: 100%;\"\n          >\n            <el-option v-for=\"item in courseList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学年\" prop=\"academicYear\">\n          <el-select v-model=\"taskForm.academicYear\" placeholder=\"请选择学年\" style=\"width: 100%;\">\n            <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学期\" prop=\"semester\">\n          <el-radio-group v-model=\"taskForm.semester\">\n            <el-radio :label=\"1\">第一学期</el-radio>\n            <el-radio :label=\"2\">第二学期</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"截止日期\" prop=\"deadline\">\n          <el-date-picker\n            v-model=\"taskForm.deadline\"\n            type=\"datetime\"\n            placeholder=\"选择截止日期\"\n            style=\"width: 100%;\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"taskForm.status\">\n            <el-radio :label=\"0\">未发布</el-radio>\n            <el-radio :label=\"1\">立即发布</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span>\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitLoading\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 任务完成情况对话框 -->\n    <el-dialog\n      title=\"任务完成情况\"\n      v-model=\"progressDialogVisible\"\n      width=\"700px\"\n    >\n      <div v-if=\"progressLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <template v-else>\n        <el-descriptions v-if=\"currentTask\" :column=\"2\" border>\n          <el-descriptions-item label=\"任务标题\">{{ currentTask.title }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料类型\">{{ currentTask.materialTypeName }}</el-descriptions-item>\n          <el-descriptions-item label=\"截止日期\">{{ currentTask.deadline }}</el-descriptions-item>\n          <el-descriptions-item label=\"状态\">\n            <el-tag :type=\"currentTask.status === 1 ? 'success' : (currentTask.status === 0 ? 'warning' : 'danger')\">\n              {{ currentTask.status === 1 ? '进行中' : (currentTask.status === 0 ? '未开始' : '已结束') }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"完成情况\" :span=\"2\">\n            {{ progressData.completedCount || 0 }} / {{ progressData.totalCount || 0 }}\n            ({{ progressData.totalCount ? Math.round(progressData.completedCount / progressData.totalCount * 100) : 0 }}%)\n          </el-descriptions-item>\n        </el-descriptions>\n        \n        <el-tabs v-model=\"progressActiveTab\" class=\"progress-tabs\">\n          <el-tab-pane label=\"已完成\" name=\"completed\">\n            <el-table :data=\"progressData.completedTeachers || []\" style=\"width: 100%\" v-if=\"progressActiveTab === 'completed'\">\n              <el-table-column prop=\"teacherId\" label=\"教师ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"teacherName\" label=\"教师姓名\"></el-table-column>\n              <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\n              <el-table-column prop=\"materialName\" label=\"材料名称\"></el-table-column>\n              <el-table-column prop=\"submitTime\" label=\"提交时间\" width=\"160\"></el-table-column>\n              <el-table-column label=\"操作\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-button size=\"small\" type=\"primary\" @click=\"viewMaterial(scope.row.materialId)\">查看</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n          <el-tab-pane label=\"未完成\" name=\"uncompleted\">\n            <el-table :data=\"progressData.uncompletedTeachers || []\" style=\"width: 100%\" v-if=\"progressActiveTab === 'uncompleted'\">\n              <el-table-column prop=\"teacherId\" label=\"教师ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"teacherName\" label=\"教师姓名\"></el-table-column>\n              <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\n              <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n              <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n              <el-table-column label=\"操作\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-button size=\"small\" type=\"warning\" @click=\"sendReminder(scope.row.teacherId)\">提醒</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n        </el-tabs>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\n\n// 任务列表相关数据\nconst loading = ref(false);\nconst taskList = ref([]);\nconst total = ref(0);\nconst selectedTasks = ref([]);\n\n// 查询参数\nconst queryParams = reactive({\n  current: 1,\n  size: 10,\n  title: '',\n  materialTypeId: '',\n  academicYear: '',\n  semester: '',\n  status: ''\n});\n\n// 添加/编辑对话框相关数据\nconst dialogVisible = ref(false);\nconst dialogTitle = ref('添加任务');\nconst taskFormRef = ref(null);\nconst submitLoading = ref(false);\nconst taskForm = reactive({\n  id: null,\n  title: '',\n  description: '',\n  materialTypeId: '',\n  courseIds: [],\n  academicYear: '',\n  semester: 1,\n  deadline: '',\n  status: 0\n});\n\n// 任务表单校验规则\nconst taskRules = {\n  title: [{ required: true, message: '请输入任务标题', trigger: 'blur' }],\n  materialTypeId: [{ required: true, message: '请选择材料类型', trigger: 'change' }],\n  courseIds: [{ required: true, message: '请选择课程', trigger: 'change' }],\n  academicYear: [{ required: true, message: '请选择学年', trigger: 'change' }],\n  semester: [{ required: true, message: '请选择学期', trigger: 'change' }],\n  deadline: [{ required: true, message: '请选择截止日期', trigger: 'change' }]\n};\n\n// 进度对话框相关数据\nconst progressDialogVisible = ref(false);\nconst progressLoading = ref(false);\nconst currentTask = ref(null);\nconst progressData = ref({});\nconst progressActiveTab = ref('completed');\n\n// 选项列表\nconst materialTypes = ref([]);\nconst courseList = ref([]);\nconst academicYears = ref([]);\n\n// 生成学年列表\nconst generateAcademicYears = () => {\n  const years = [];\n  const currentYear = new Date().getFullYear();\n  for (let i = 0; i < 5; i++) {\n    const year = currentYear - i;\n    years.push(`${year}-${year + 1}`);\n  }\n  academicYears.value = years;\n};\n\n// 获取材料类型列表\nconst fetchMaterialTypes = async () => {\n  try {\n    const response = await axios.get('/api/material-type/list');\n    if (response.data.code === 200 && response.data.data) {\n      materialTypes.value = response.data.data;\n    }\n  } catch (error) {\n    console.error('获取材料类型出错:', error);\n    ElMessage.error('获取材料类型失败');\n  }\n};\n\n// 获取课程列表\nconst fetchCourseList = async () => {\n  try {\n    const response = await axios.get('/api/admin/course/list');\n    if (response.data.code === 200 && response.data.data) {\n      courseList.value = response.data.data;\n    }\n  } catch (error) {\n    console.error('获取课程列表出错:', error);\n    ElMessage.error('获取课程列表失败');\n  }\n};\n\n// 获取任务列表\nconst fetchTaskList = async () => {\n  loading.value = true;\n  try {\n    const response = await axios.get('/api/admin/material-task/list', {\n      params: queryParams\n    });\n    if (response.data.code === 200) {\n      taskList.value = response.data.data.records || [];\n      total.value = response.data.data.total || 0;\n    } else {\n      ElMessage.error(response.data.message || '获取任务列表失败');\n    }\n  } catch (error) {\n    console.error('获取任务列表出错:', error);\n    ElMessage.error('获取任务列表失败');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 查询任务\nconst handleQuery = () => {\n  queryParams.current = 1;\n  fetchTaskList();\n};\n\n// 重置查询\nconst resetQuery = () => {\n  Object.assign(queryParams, {\n    current: 1,\n    size: 10,\n    title: '',\n    materialTypeId: '',\n    academicYear: '',\n    semester: '',\n    status: ''\n  });\n  fetchTaskList();\n};\n\n// 表格选择行变化\nconst handleSelectionChange = (selection) => {\n  selectedTasks.value = selection;\n};\n\n// 添加任务\nconst handleAdd = () => {\n  dialogTitle.value = '添加任务';\n  resetTaskForm();\n  dialogVisible.value = true;\n};\n\n// 编辑任务\nconst handleEdit = (row) => {\n  dialogTitle.value = '编辑任务';\n  resetTaskForm();\n  Object.assign(taskForm, { ...row });\n  if (typeof taskForm.courseIds === 'string') {\n    taskForm.courseIds = taskForm.courseIds.split(',').map(id => parseInt(id));\n  }\n  dialogVisible.value = true;\n};\n\n// 重置任务表单\nconst resetTaskForm = () => {\n  taskForm.id = null;\n  taskForm.title = '';\n  taskForm.description = '';\n  taskForm.materialTypeId = '';\n  taskForm.courseIds = [];\n  taskForm.academicYear = academicYears.value[0] || '';\n  taskForm.semester = 1;\n  taskForm.deadline = '';\n  taskForm.status = 0;\n  if (taskFormRef.value) {\n    taskFormRef.value.resetFields();\n  }\n};\n\n// 提交表单\nconst submitForm = async () => {\n  if (!taskFormRef.value) return;\n  \n  await taskFormRef.value.validate(async (valid) => {\n    if (!valid) return;\n    \n    submitLoading.value = true;\n    try {\n      const method = taskForm.id ? 'put' : 'post';\n      const url = taskForm.id ? `/api/admin/material-task/${taskForm.id}` : '/api/admin/material-task';\n      \n      const response = await axios[method](url, taskForm);\n      if (response.data.code === 200) {\n        ElMessage.success(`${taskForm.id ? '更新' : '添加'}任务成功`);\n        dialogVisible.value = false;\n        fetchTaskList();\n      } else {\n        ElMessage.error(response.data.message || `${taskForm.id ? '更新' : '添加'}任务失败`);\n      }\n    } catch (error) {\n      console.error(`${taskForm.id ? '更新' : '添加'}任务出错:`, error);\n      ElMessage.error(`${taskForm.id ? '更新' : '添加'}任务失败，请稍后重试`);\n    } finally {\n      submitLoading.value = false;\n    }\n  });\n};\n\n// 发布任务\nconst handlePublish = async (id) => {\n  try {\n    const response = await axios.put(`/api/admin/material-task/publish/${id}`);\n    if (response.data.code === 200) {\n      ElMessage.success('发布任务成功');\n      fetchTaskList();\n    } else {\n      ElMessage.error(response.data.message || '发布任务失败');\n    }\n  } catch (error) {\n    console.error('发布任务出错:', error);\n    ElMessage.error('发布任务失败，请稍后重试');\n  }\n};\n\n// 批量发布任务\nconst handlePublishBatch = async () => {\n  if (selectedTasks.value.length === 0) {\n    ElMessage.warning('请选择要发布的任务');\n    return;\n  }\n  \n  const taskIds = selectedTasks.value.map(task => task.id);\n  try {\n    const response = await axios.put('/api/admin/material-task/publish-batch', { taskIds });\n    if (response.data.code === 200) {\n      ElMessage.success('批量发布任务成功');\n      fetchTaskList();\n    } else {\n      ElMessage.error(response.data.message || '批量发布任务失败');\n    }\n  } catch (error) {\n    console.error('批量发布任务出错:', error);\n    ElMessage.error('批量发布任务失败，请稍后重试');\n  }\n};\n\n// 删除任务\nconst handleDelete = async (id) => {\n  ElMessageBox.confirm('确定要删除此任务吗？', '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      const response = await axios.delete(`/api/admin/material-task/${id}`);\n      if (response.data.code === 200) {\n        ElMessage.success('删除任务成功');\n        fetchTaskList();\n      } else {\n        ElMessage.error(response.data.message || '删除任务失败');\n      }\n    } catch (error) {\n      console.error('删除任务出错:', error);\n      ElMessage.error('删除任务失败，请稍后重试');\n    }\n  }).catch(() => {});\n};\n\n// 批量删除任务\nconst handleDeleteBatch = async () => {\n  if (selectedTasks.value.length === 0) {\n    ElMessage.warning('请选择要删除的任务');\n    return;\n  }\n  \n  ElMessageBox.confirm(`确定要删除选中的 ${selectedTasks.value.length} 个任务吗？`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    const taskIds = selectedTasks.value.map(task => task.id);\n    try {\n      const response = await axios.delete('/api/admin/material-task/batch', {\n        data: { taskIds }\n      });\n      if (response.data.code === 200) {\n        ElMessage.success('批量删除任务成功');\n        fetchTaskList();\n      } else {\n        ElMessage.error(response.data.message || '批量删除任务失败');\n      }\n    } catch (error) {\n      console.error('批量删除任务出错:', error);\n      ElMessage.error('批量删除任务失败，请稍后重试');\n    }\n  }).catch(() => {});\n};\n\n// 查看任务完成情况\nconst handleViewProgress = async (id) => {\n  progressLoading.value = true;\n  progressDialogVisible.value = true;\n  \n  try {\n    // 获取任务详情\n    const taskResponse = await axios.get(`/api/admin/material-task/${id}`);\n    if (taskResponse.data.code === 200 && taskResponse.data.data) {\n      currentTask.value = taskResponse.data.data;\n    }\n    \n    // 获取任务完成情况\n    const progressResponse = await axios.get(`/api/admin/material-task/progress/${id}`);\n    if (progressResponse.data.code === 200 && progressResponse.data.data) {\n      progressData.value = progressResponse.data.data;\n    }\n  } catch (error) {\n    console.error('获取任务完成情况出错:', error);\n    ElMessage.error('获取任务完成情况失败，请稍后重试');\n  } finally {\n    progressLoading.value = false;\n  }\n};\n\n// 查看材料\nconst viewMaterial = (materialId) => {\n  window.open(`/api/material/download/${materialId}`, '_blank');\n};\n\n// 发送提醒\nconst sendReminder = async (teacherId) => {\n  try {\n    const response = await axios.post('/api/admin/material-task/remind', {\n      taskId: currentTask.value.id,\n      teacherId\n    });\n    if (response.data.code === 200) {\n      ElMessage.success('已发送提醒通知');\n    } else {\n      ElMessage.error(response.data.message || '发送提醒失败');\n    }\n  } catch (error) {\n    console.error('发送提醒出错:', error);\n    ElMessage.error('发送提醒失败，请稍后重试');\n  }\n};\n\n// 分页器相关方法\nconst handleSizeChange = (size) => {\n  queryParams.size = size;\n  fetchTaskList();\n};\n\nconst handleCurrentChange = (current) => {\n  queryParams.current = current;\n  fetchTaskList();\n};\n\nonMounted(() => {\n  generateAcademicYears();\n  fetchMaterialTypes();\n  fetchCourseList();\n  fetchTaskList();\n});\n</script>\n\n<style scoped>\n.material-tasks {\n  padding: 20px;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.operation-container {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: flex-start;\n  gap: 10px;\n}\n\n.table-card {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.progress-tabs {\n  margin-top: 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}