{"ast":null,"code":"import { createApp } from 'vue';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { applyResizeObserverErrorFix } from './utils/resizeObserverFix';\nimport { registerDirectives } from './utils/directives';\nimport './assets/css/resize-observer-fix.css';\n\n// 配置axios的baseURL，确保请求发送到正确的后端地址\naxios.defaults.baseURL = 'http://localhost:8080';\nconsole.log('配置 axios baseURL:', axios.defaults.baseURL);\n\n// 配置axios\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // 始终使用 Bearer 前缀\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('===== 请求拦截器 =====');\n    console.log('请求 URL:', config.url);\n    console.log('请求方法:', config.method);\n    console.log('完整请求 URL:', axios.defaults.baseURL + config.url);\n    console.log('请求参数:', JSON.stringify(config.params || {}));\n    console.log('请求头:', JSON.stringify(config.headers));\n    console.log('===== 请求拦截器结束 =====');\n  } else {\n    console.log('未找到 token，请求将不包含认证信息');\n  }\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\naxios.interceptors.response.use(response => {\n  console.log('===== 响应拦截器 =====');\n  console.log('响应成功:', response.config.url, response.status);\n  console.log('响应状态:', response.status, response.statusText);\n  console.log('响应数据:', JSON.stringify(response.data).substring(0, 200) + '...');\n  console.log('===== 响应拦截器结束 =====');\n  return response;\n}, error => {\n  console.error('===== 响应错误 =====');\n  console.error('请求URL:', error.config?.url);\n  console.error('错误消息:', error.message);\n  if (error.response) {\n    console.error('错误状态码:', error.response.status);\n    console.error('错误数据:', JSON.stringify(error.response.data));\n    if (error.response.status === 403) {\n      console.error('403 错误，可能是 token 无效或已过期');\n      ElMessage.error('登录已过期，请重新登录');\n      // 清除 token 并跳转到登录页\n      localStorage.removeItem('token');\n      localStorage.removeItem('userInfo');\n      router.push('/login');\n    } else if (error.response.status === 500) {\n      console.error('500 错误，服务器内部错误');\n      ElMessage.error('服务器内部错误，请稍后再试');\n    }\n  } else if (error.request) {\n    console.error('请求已发送但未收到响应', error.request);\n    ElMessage.error('网络错误，服务器未响应');\n  } else {\n    console.error('请求设置错误', error.message);\n    ElMessage.error('请求发送失败: ' + error.message);\n  }\n  console.error('===== 响应错误结束 =====');\n  return Promise.reject(error);\n});\n\n// 立即应用ResizeObserver错误修复\napplyResizeObserverErrorFix();\nconst app = createApp(App);\n\n// 注册所有图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component);\n}\n\n// 注册全局指令\nregisterDirectives(app);\napp.use(ElementPlus);\napp.use(store);\napp.use(router);\napp.mount('#app');","map":{"version":3,"names":["createApp","ElementPlus","ElementPlusIconsVue","App","router","store","axios","ElMessage","applyResizeObserverErrorFix","registerDirectives","defaults","baseURL","console","log","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","url","method","JSON","stringify","params","error","Promise","reject","response","status","statusText","data","substring","message","removeItem","push","app","key","component","Object","entries","mount"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport { applyResizeObserverErrorFix } from './utils/resizeObserverFix'\nimport { registerDirectives } from './utils/directives'\nimport './assets/css/resize-observer-fix.css'\n\n// 配置axios的baseURL，确保请求发送到正确的后端地址\naxios.defaults.baseURL = 'http://localhost:8080'\nconsole.log('配置 axios baseURL:', axios.defaults.baseURL)\n\n// 配置axios\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      // 始终使用 Bearer 前缀\n      config.headers.Authorization = `Bearer ${token}`\n      \n      console.log('===== 请求拦截器 =====')\n      console.log('请求 URL:', config.url)\n      console.log('请求方法:', config.method)\n      console.log('完整请求 URL:', axios.defaults.baseURL + config.url)\n      console.log('请求参数:', JSON.stringify(config.params || {}))\n      console.log('请求头:', JSON.stringify(config.headers))\n      console.log('===== 请求拦截器结束 =====')\n    } else {\n      console.log('未找到 token，请求将不包含认证信息')\n    }\n    return config\n  },\n  error => {\n    console.error('请求错误:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\naxios.interceptors.response.use(\n  response => {\n    console.log('===== 响应拦截器 =====')\n    console.log('响应成功:', response.config.url, response.status)\n    console.log('响应状态:', response.status, response.statusText)\n    console.log('响应数据:', JSON.stringify(response.data).substring(0, 200) + '...')\n    console.log('===== 响应拦截器结束 =====')\n    return response\n  },\n  error => {\n    console.error('===== 响应错误 =====')\n    console.error('请求URL:', error.config?.url)\n    console.error('错误消息:', error.message)\n    \n    if (error.response) {\n      console.error('错误状态码:', error.response.status)\n      console.error('错误数据:', JSON.stringify(error.response.data))\n      \n      if (error.response.status === 403) {\n        console.error('403 错误，可能是 token 无效或已过期')\n        ElMessage.error('登录已过期，请重新登录')\n        // 清除 token 并跳转到登录页\n        localStorage.removeItem('token')\n        localStorage.removeItem('userInfo')\n        router.push('/login')\n      } else if (error.response.status === 500) {\n        console.error('500 错误，服务器内部错误')\n        ElMessage.error('服务器内部错误，请稍后再试')\n      }\n    } else if (error.request) {\n      console.error('请求已发送但未收到响应', error.request)\n      ElMessage.error('网络错误，服务器未响应')\n    } else {\n      console.error('请求设置错误', error.message)\n      ElMessage.error('请求发送失败: ' + error.message)\n    }\n    console.error('===== 响应错误结束 =====')\n    return Promise.reject(error)\n  }\n)\n\n// 立即应用ResizeObserver错误修复\napplyResizeObserverErrorFix()\n\nconst app = createApp(App)\n\n// 注册所有图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\n\n// 注册全局指令\nregisterDirectives(app)\n\napp.use(ElementPlus)\napp.use(store)\napp.use(router)\n\napp.mount('#app') "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}