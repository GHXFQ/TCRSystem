{"ast":null,"code":"import { ref, reactive, onMounted, nextTick, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport { safeElementConfig } from '@/utils/resizeObserverFix';\nexport default {\n  __name: 'MaterialStatistics',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const loading = ref(false);\n    const uncompletedTeachers = ref([]);\n    const total = ref(0);\n\n    // 图表引用\n    const typeChartRef = ref(null);\n    const collegeChartRef = ref(null);\n    let typeChart = null;\n    let collegeChart = null;\n\n    // 查询参数\n    const queryParams = reactive({\n      current: 1,\n      size: 10,\n      materialTypeId: '',\n      academicYear: '',\n      semester: ''\n    });\n\n    // 统计概览数据\n    const overview = reactive({\n      totalMaterials: 0,\n      completedTeachers: 0,\n      uncompletedTeachers: 0\n    });\n\n    // 选项列表\n    const materialTypes = ref([]);\n    const academicYears = ref([]);\n\n    // 生成学年列表\n    const generateAcademicYears = () => {\n      const years = [];\n      const currentYear = new Date().getFullYear();\n      for (let i = 0; i < 5; i++) {\n        const year = currentYear - i;\n        years.push(`${year}-${year + 1}`);\n      }\n      academicYears.value = years;\n    };\n\n    // 获取材料类型列表\n    const fetchMaterialTypes = async () => {\n      try {\n        const response = await axios.get('/api/material-type/list');\n        if (response.data.code === 200 && response.data.data) {\n          materialTypes.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取材料类型出错:', error);\n        ElMessage.error('获取材料类型失败');\n      }\n    };\n\n    // 获取统计数据\n    const fetchStatistics = async () => {\n      loading.value = true;\n      try {\n        // 获取概览数据\n        const overviewResponse = await axios.get('/api/admin/material-statistics/overview', {\n          params: {\n            materialTypeId: queryParams.materialTypeId,\n            academicYear: queryParams.academicYear,\n            semester: queryParams.semester\n          }\n        });\n        if (overviewResponse.data.code === 200 && overviewResponse.data.data) {\n          Object.assign(overview, overviewResponse.data.data);\n        }\n\n        // 获取未完成教师列表\n        const teachersResponse = await axios.get('/api/admin/material-statistics/uncompleted-teachers', {\n          params: queryParams\n        });\n        if (teachersResponse.data.code === 200) {\n          uncompletedTeachers.value = teachersResponse.data.data.records || [];\n          total.value = teachersResponse.data.data.total || 0;\n        }\n\n        // 获取按材料类型统计数据\n        const typeResponse = await axios.get('/api/admin/material-statistics/by-type');\n        if (typeResponse.data.code === 200 && typeResponse.data.data) {\n          await nextTick();\n          initTypeChart(typeResponse.data.data);\n        }\n\n        // 获取按学院统计数据\n        const collegeResponse = await axios.get('/api/admin/material-statistics/by-college');\n        if (collegeResponse.data.code === 200 && collegeResponse.data.data) {\n          await nextTick();\n          initCollegeChart(collegeResponse.data.data);\n        }\n      } catch (error) {\n        console.error('获取统计数据出错:', error);\n        ElMessage.error('获取统计数据失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 重置查询\n    const resetQuery = () => {\n      Object.assign(queryParams, {\n        current: 1,\n        size: 10,\n        materialTypeId: '',\n        academicYear: '',\n        semester: ''\n      });\n      fetchStatistics();\n    };\n\n    // 初始化按材料类型统计图表\n    const initTypeChart = data => {\n      if (!typeChartRef.value) return;\n      if (typeChart) {\n        typeChart.dispose();\n      }\n      typeChart = echarts.init(typeChartRef.value);\n      const names = data.map(item => item.name);\n      const completed = data.map(item => item.completed);\n      const uncompleted = data.map(item => item.uncompleted);\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['已完成', '未完成']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category',\n          data: names\n        },\n        series: [{\n          name: '已完成',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: completed\n        }, {\n          name: '未完成',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: uncompleted\n        }]\n      };\n      typeChart.setOption(option);\n      window.addEventListener('resize', () => {\n        typeChart && typeChart.resize();\n      });\n    };\n\n    // 初始化按学院统计图表\n    const initCollegeChart = data => {\n      if (!collegeChartRef.value) return;\n      if (collegeChart) {\n        collegeChart.dispose();\n      }\n      collegeChart = echarts.init(collegeChartRef.value);\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: data.map(item => item.name)\n        },\n        series: [{\n          name: '未完成比例',\n          type: 'pie',\n          radius: ['50%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data.map(item => ({\n            value: item.count,\n            name: item.name\n          }))\n        }]\n      };\n      collegeChart.setOption(option);\n      window.addEventListener('resize', () => {\n        collegeChart && collegeChart.resize();\n      });\n    };\n\n    // 提醒单个教师\n    const handleRemind = async (teacherId, taskId) => {\n      try {\n        const response = await axios.post('/api/admin/material-task/remind', {\n          teacherId,\n          taskId\n        });\n        if (response.data.code === 200) {\n          ElMessage.success('已发送提醒通知');\n        } else {\n          ElMessage.error(response.data.message || '发送提醒失败');\n        }\n      } catch (error) {\n        console.error('发送提醒出错:', error);\n        ElMessage.error('发送提醒失败，请稍后重试');\n      }\n    };\n\n    // 一键提醒所有未完成的教师\n    const handleRemindAll = async () => {\n      if (uncompletedTeachers.value.length === 0) {\n        ElMessage.warning('没有需要提醒的教师');\n        return;\n      }\n      ElMessageBox.confirm(`确定要提醒所有 ${uncompletedTeachers.value.length} 位未完成的教师吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const taskTeacherPairs = uncompletedTeachers.value.map(teacher => ({\n            taskId: teacher.taskId,\n            teacherId: teacher.teacherId\n          }));\n          const response = await axios.post('/api/admin/material-task/remind-batch', {\n            reminders: taskTeacherPairs\n          });\n          if (response.data.code === 200) {\n            ElMessage.success('批量发送提醒成功');\n          } else {\n            ElMessage.error(response.data.message || '批量发送提醒失败');\n          }\n        } catch (error) {\n          console.error('批量发送提醒出错:', error);\n          ElMessage.error('批量发送提醒失败，请稍后重试');\n        }\n      }).catch(() => {});\n    };\n\n    // 查看任务详情\n    const handleViewTask = taskId => {\n      router.push({\n        path: '/admin/material-tasks',\n        query: {\n          taskId\n        }\n      });\n    };\n\n    // 分页器相关方法\n    const handleSizeChange = size => {\n      queryParams.size = size;\n      fetchStatistics();\n    };\n    const handleCurrentChange = current => {\n      queryParams.current = current;\n      fetchStatistics();\n    };\n    onMounted(() => {\n      generateAcademicYears();\n      fetchMaterialTypes();\n      fetchStatistics();\n\n      // 注册窗口大小变化事件\n      window.addEventListener('resize', () => {\n        typeChart && typeChart.resize();\n        collegeChart && collegeChart.resize();\n      });\n    });\n\n    // 组件卸载时清理图表\n    onUnmounted(() => {\n      if (typeChart) {\n        typeChart.dispose();\n        typeChart = null;\n      }\n      if (collegeChart) {\n        collegeChart.dispose();\n        collegeChart = null;\n      }\n      window.removeEventListener('resize', () => {\n        typeChart && typeChart.resize();\n        collegeChart && collegeChart.resize();\n      });\n    });\n    const __returned__ = {\n      router,\n      loading,\n      uncompletedTeachers,\n      total,\n      typeChartRef,\n      collegeChartRef,\n      get typeChart() {\n        return typeChart;\n      },\n      set typeChart(v) {\n        typeChart = v;\n      },\n      get collegeChart() {\n        return collegeChart;\n      },\n      set collegeChart(v) {\n        collegeChart = v;\n      },\n      queryParams,\n      overview,\n      materialTypes,\n      academicYears,\n      generateAcademicYears,\n      fetchMaterialTypes,\n      fetchStatistics,\n      resetQuery,\n      initTypeChart,\n      initCollegeChart,\n      handleRemind,\n      handleRemindAll,\n      handleViewTask,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      nextTick,\n      onUnmounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get axios() {\n        return axios;\n      },\n      get echarts() {\n        return echarts;\n      },\n      get safeElementConfig() {\n        return safeElementConfig;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","nextTick","onUnmounted","useRouter","ElMessage","ElMessageBox","axios","echarts","safeElementConfig","router","loading","uncompletedTeachers","total","typeChartRef","collegeChartRef","typeChart","collegeChart","queryParams","current","size","materialTypeId","academicYear","semester","overview","totalMaterials","completedTeachers","materialTypes","academicYears","generateAcademicYears","years","currentYear","Date","getFullYear","i","year","push","value","fetchMaterialTypes","response","get","data","code","error","console","fetchStatistics","overviewResponse","params","Object","assign","teachersResponse","records","typeResponse","initTypeChart","collegeResponse","initCollegeChart","resetQuery","dispose","init","names","map","item","name","completed","uncompleted","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","series","stack","label","show","emphasis","focus","setOption","window","addEventListener","resize","formatter","orient","radius","avoidLabelOverlap","position","fontSize","fontWeight","labelLine","count","handleRemind","teacherId","taskId","post","success","message","handleRemindAll","length","warning","confirm","confirmButtonText","cancelButtonText","then","taskTeacherPairs","teacher","reminders","catch","handleViewTask","path","query","handleSizeChange","handleCurrentChange","removeEventListener"],"sources":["C:/Users/18083/Desktop/CCIT/TCRSystem/TCRSystem/frontend/src/views/admin/MaterialStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"material-statistics\">\n    <h1 class=\"page-title\">教学材料统计与分析</h1>\n    \n    <!-- 过滤条件 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n        <el-form-item label=\"材料类型\">\n          <el-select v-model=\"queryParams.materialTypeId\" placeholder=\"请选择材料类型\" clearable style=\"width: 200px;\" v-bind=\"safeElementConfig\">\n            <el-option v-for=\"item in materialTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学年\">\n          <el-select v-model=\"queryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 200px;\" v-bind=\"safeElementConfig\">\n            <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学期\">\n          <el-select v-model=\"queryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 200px;\" v-bind=\"safeElementConfig\">\n            <el-option :label=\"'第一学期'\" :value=\"1\"></el-option>\n            <el-option :label=\"'第二学期'\" :value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchStatistics\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <!-- 统计概览 -->\n    <el-row :gutter=\"20\" class=\"statistics-overview\">\n      <el-col :span=\"8\">\n        <el-card class=\"overview-card\">\n          <div class=\"overview-content\">\n            <div class=\"overview-title\">上传材料总数</div>\n            <div class=\"overview-number\">{{ overview.totalMaterials || 0 }}</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"overview-card\">\n          <div class=\"overview-content\">\n            <div class=\"overview-title\">已完成教师数</div>\n            <div class=\"overview-number\">{{ overview.completedTeachers || 0 }}</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"overview-card\">\n          <div class=\"overview-content\">\n            <div class=\"overview-title\">未完成教师数</div>\n            <div class=\"overview-number\">{{ overview.uncompletedTeachers || 0 }}</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <!-- 统计图表 -->\n    <el-row :gutter=\"20\" class=\"statistics-charts\">\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>按材料类型统计</span>\n            </div>\n          </template>\n          <div class=\"chart-container\" ref=\"typeChartRef\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>按学院统计</span>\n            </div>\n          </template>\n          <div class=\"chart-container\" ref=\"collegeChartRef\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <!-- 未完成教师列表 -->\n    <el-card class=\"table-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>未完成教师列表</span>\n          <el-button size=\"small\" type=\"warning\" @click=\"handleRemindAll\">一键提醒</el-button>\n        </div>\n      </template>\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else-if=\"uncompletedTeachers.length === 0\" class=\"empty-data\">\n        <el-empty description=\"暂无未完成的教师\" />\n      </div>\n      <el-table v-else :data=\"uncompletedTeachers\" style=\"width: 100%\">\n        <el-table-column prop=\"teacherId\" label=\"教师ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"teacherName\" label=\"教师姓名\"></el-table-column>\n        <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\n        <el-table-column prop=\"collegeName\" label=\"所属学院\"></el-table-column>\n        <el-table-column prop=\"materialTypeName\" label=\"材料类型\"></el-table-column>\n        <el-table-column prop=\"academicYear\" label=\"学年\"></el-table-column>\n        <el-table-column prop=\"semester\" label=\"学期\">\n          <template #default=\"scope\">\n            {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"deadline\" label=\"截止日期\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"150\">\n          <template #default=\"scope\">\n            <el-button-group>\n              <el-button size=\"small\" type=\"warning\" @click=\"handleRemind(scope.row.teacherId, scope.row.taskId)\">提醒</el-button>\n              <el-button size=\"small\" type=\"primary\" @click=\"handleViewTask(scope.row.taskId)\">查看任务</el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页器 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-if=\"total > 0\"\n          :current-page=\"queryParams.current\"\n          :page-size=\"queryParams.size\"\n          :page-sizes=\"[10, 20, 30, 50]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport { safeElementConfig } from '@/utils/resizeObserverFix'\n\nconst router = useRouter();\nconst loading = ref(false);\nconst uncompletedTeachers = ref([]);\nconst total = ref(0);\n\n// 图表引用\nconst typeChartRef = ref(null);\nconst collegeChartRef = ref(null);\nlet typeChart = null;\nlet collegeChart = null;\n\n// 查询参数\nconst queryParams = reactive({\n  current: 1,\n  size: 10,\n  materialTypeId: '',\n  academicYear: '',\n  semester: ''\n});\n\n// 统计概览数据\nconst overview = reactive({\n  totalMaterials: 0,\n  completedTeachers: 0,\n  uncompletedTeachers: 0\n});\n\n// 选项列表\nconst materialTypes = ref([]);\nconst academicYears = ref([]);\n\n// 生成学年列表\nconst generateAcademicYears = () => {\n  const years = [];\n  const currentYear = new Date().getFullYear();\n  for (let i = 0; i < 5; i++) {\n    const year = currentYear - i;\n    years.push(`${year}-${year + 1}`);\n  }\n  academicYears.value = years;\n};\n\n// 获取材料类型列表\nconst fetchMaterialTypes = async () => {\n  try {\n    const response = await axios.get('/api/material-type/list');\n    if (response.data.code === 200 && response.data.data) {\n      materialTypes.value = response.data.data;\n    }\n  } catch (error) {\n    console.error('获取材料类型出错:', error);\n    ElMessage.error('获取材料类型失败');\n  }\n};\n\n// 获取统计数据\nconst fetchStatistics = async () => {\n  loading.value = true;\n  try {\n    // 获取概览数据\n    const overviewResponse = await axios.get('/api/admin/material-statistics/overview', {\n      params: {\n        materialTypeId: queryParams.materialTypeId,\n        academicYear: queryParams.academicYear,\n        semester: queryParams.semester\n      }\n    });\n    \n    if (overviewResponse.data.code === 200 && overviewResponse.data.data) {\n      Object.assign(overview, overviewResponse.data.data);\n    }\n    \n    // 获取未完成教师列表\n    const teachersResponse = await axios.get('/api/admin/material-statistics/uncompleted-teachers', {\n      params: queryParams\n    });\n    \n    if (teachersResponse.data.code === 200) {\n      uncompletedTeachers.value = teachersResponse.data.data.records || [];\n      total.value = teachersResponse.data.data.total || 0;\n    }\n    \n    // 获取按材料类型统计数据\n    const typeResponse = await axios.get('/api/admin/material-statistics/by-type');\n    if (typeResponse.data.code === 200 && typeResponse.data.data) {\n      await nextTick();\n      initTypeChart(typeResponse.data.data);\n    }\n    \n    // 获取按学院统计数据\n    const collegeResponse = await axios.get('/api/admin/material-statistics/by-college');\n    if (collegeResponse.data.code === 200 && collegeResponse.data.data) {\n      await nextTick();\n      initCollegeChart(collegeResponse.data.data);\n    }\n  } catch (error) {\n    console.error('获取统计数据出错:', error);\n    ElMessage.error('获取统计数据失败');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 重置查询\nconst resetQuery = () => {\n  Object.assign(queryParams, {\n    current: 1,\n    size: 10,\n    materialTypeId: '',\n    academicYear: '',\n    semester: ''\n  });\n  fetchStatistics();\n};\n\n// 初始化按材料类型统计图表\nconst initTypeChart = (data) => {\n  if (!typeChartRef.value) return;\n  \n  if (typeChart) {\n    typeChart.dispose();\n  }\n  \n  typeChart = echarts.init(typeChartRef.value);\n  \n  const names = data.map(item => item.name);\n  const completed = data.map(item => item.completed);\n  const uncompleted = data.map(item => item.uncompleted);\n  \n  const option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    },\n    legend: {\n      data: ['已完成', '未完成']\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'value'\n    },\n    yAxis: {\n      type: 'category',\n      data: names\n    },\n    series: [\n      {\n        name: '已完成',\n        type: 'bar',\n        stack: 'total',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: completed\n      },\n      {\n        name: '未完成',\n        type: 'bar',\n        stack: 'total',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: uncompleted\n      }\n    ]\n  };\n  \n  typeChart.setOption(option);\n  \n  window.addEventListener('resize', () => {\n    typeChart && typeChart.resize();\n  });\n};\n\n// 初始化按学院统计图表\nconst initCollegeChart = (data) => {\n  if (!collegeChartRef.value) return;\n  \n  if (collegeChart) {\n    collegeChart.dispose();\n  }\n  \n  collegeChart = echarts.init(collegeChartRef.value);\n  \n  const option = {\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    legend: {\n      orient: 'vertical',\n      left: 10,\n      data: data.map(item => item.name)\n    },\n    series: [\n      {\n        name: '未完成比例',\n        type: 'pie',\n        radius: ['50%', '70%'],\n        avoidLabelOverlap: false,\n        label: {\n          show: false,\n          position: 'center'\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: '18',\n            fontWeight: 'bold'\n          }\n        },\n        labelLine: {\n          show: false\n        },\n        data: data.map(item => ({\n          value: item.count,\n          name: item.name\n        }))\n      }\n    ]\n  };\n  \n  collegeChart.setOption(option);\n  \n  window.addEventListener('resize', () => {\n    collegeChart && collegeChart.resize();\n  });\n};\n\n// 提醒单个教师\nconst handleRemind = async (teacherId, taskId) => {\n  try {\n    const response = await axios.post('/api/admin/material-task/remind', {\n      teacherId,\n      taskId\n    });\n    \n    if (response.data.code === 200) {\n      ElMessage.success('已发送提醒通知');\n    } else {\n      ElMessage.error(response.data.message || '发送提醒失败');\n    }\n  } catch (error) {\n    console.error('发送提醒出错:', error);\n    ElMessage.error('发送提醒失败，请稍后重试');\n  }\n};\n\n// 一键提醒所有未完成的教师\nconst handleRemindAll = async () => {\n  if (uncompletedTeachers.value.length === 0) {\n    ElMessage.warning('没有需要提醒的教师');\n    return;\n  }\n  \n  ElMessageBox.confirm(`确定要提醒所有 ${uncompletedTeachers.value.length} 位未完成的教师吗？`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      const taskTeacherPairs = uncompletedTeachers.value.map(teacher => ({\n        taskId: teacher.taskId,\n        teacherId: teacher.teacherId\n      }));\n      \n      const response = await axios.post('/api/admin/material-task/remind-batch', {\n        reminders: taskTeacherPairs\n      });\n      \n      if (response.data.code === 200) {\n        ElMessage.success('批量发送提醒成功');\n      } else {\n        ElMessage.error(response.data.message || '批量发送提醒失败');\n      }\n    } catch (error) {\n      console.error('批量发送提醒出错:', error);\n      ElMessage.error('批量发送提醒失败，请稍后重试');\n    }\n  }).catch(() => {});\n};\n\n// 查看任务详情\nconst handleViewTask = (taskId) => {\n  router.push({\n    path: '/admin/material-tasks',\n    query: { taskId }\n  });\n};\n\n// 分页器相关方法\nconst handleSizeChange = (size) => {\n  queryParams.size = size;\n  fetchStatistics();\n};\n\nconst handleCurrentChange = (current) => {\n  queryParams.current = current;\n  fetchStatistics();\n};\n\nonMounted(() => {\n  generateAcademicYears();\n  fetchMaterialTypes();\n  fetchStatistics();\n  \n  // 注册窗口大小变化事件\n  window.addEventListener('resize', () => {\n    typeChart && typeChart.resize();\n    collegeChart && collegeChart.resize();\n  });\n});\n\n// 组件卸载时清理图表\nonUnmounted(() => {\n  if (typeChart) {\n    typeChart.dispose();\n    typeChart = null;\n  }\n  \n  if (collegeChart) {\n    collegeChart.dispose();\n    collegeChart = null;\n  }\n  \n  window.removeEventListener('resize', () => {\n    typeChart && typeChart.resize();\n    collegeChart && collegeChart.resize();\n  });\n});\n</script>\n\n<style scoped>\n.material-statistics {\n  padding: 20px;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.statistics-overview {\n  margin-bottom: 20px;\n}\n\n.overview-card {\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.overview-content {\n  text-align: center;\n}\n\n.overview-title {\n  font-size: 16px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n\n.overview-number {\n  font-size: 28px;\n  font-weight: bold;\n  color: #409EFF;\n}\n\n.statistics-charts {\n  margin-bottom: 20px;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n}\n\n.chart-container {\n  height: 350px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.table-card {\n  margin-bottom: 20px;\n}\n\n.loading-container, .empty-data {\n  display: flex;\n  justify-content: center;\n  padding: 30px 0;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}