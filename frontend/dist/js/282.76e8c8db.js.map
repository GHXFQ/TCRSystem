{"version":3,"file":"js/282.76e8c8db.js","mappings":"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","sources":["webpack://tcr-system-frontend/./src/views/admin/TeacherManagement.vue","webpack://tcr-system-frontend/./src/views/admin/TeacherManagement.vue?5068"],"sourcesContent":["<template>\n  <div class=\"teacher-management\">\n    <h1>教师管理</h1>\n    \n    <el-card class=\"filter-card\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n          <el-form-item label=\"教师姓名\">\n            <el-input v-model=\"queryParams.realName\" placeholder=\"请输入教师姓名\" clearable></el-input>\n          </el-form-item>\n          <el-form-item label=\"工号\">\n            <el-input v-model=\"queryParams.username\" placeholder=\"请输入工号\" clearable></el-input>\n          </el-form-item>\n          <el-form-item label=\"职称\">\n            <el-select v-model=\"queryParams.titleType\" placeholder=\"请选择职称\" clearable>\n              <el-option label=\"普通教师\" :value=\"0\"></el-option>\n              <el-option label=\"课程负责人\" :value=\"1\"></el-option>\n              <el-option label=\"专业负责人\" :value=\"2\"></el-option>\n              <el-option label=\"副院长\" :value=\"3\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"fetchTeachers\">查询</el-button>\n            <el-button @click=\"resetQuery\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <div class=\"operation-container\">\n        <el-button type=\"primary\" @click=\"handleAdd\">添加教师</el-button>\n      </div>\n    </el-card>\n    \n    <el-card class=\"table-card\">\n      <el-table :data=\"teacherList\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"username\" label=\"工号\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"realName\" label=\"姓名\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n        <el-table-column prop=\"phone\" label=\"手机号\"></el-table-column>\n        <el-table-column label=\"职称\">\n          <template #default=\"scope\">\n            <el-tag v-if=\"hasTitle(scope.row.id, 0)\" type=\"info\">普通教师</el-tag>\n            <el-tag v-if=\"hasTitle(scope.row.id, 1)\" type=\"success\">课程负责人</el-tag>\n            <el-tag v-if=\"hasTitle(scope.row.id, 2)\" type=\"warning\">专业负责人</el-tag>\n            <el-tag v-if=\"hasTitle(scope.row.id, 3)\" type=\"danger\">副院长</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-switch\n              v-model=\"scope.row.status\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              @change=\"handleStatusChange(scope.row)\"\n            ></el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"250\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button type=\"success\" size=\"small\" @click=\"handleSetTitle(scope.row)\">设置职称</el-button>\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          :page-size=\"queryParams.pageSize\"\n          :current-page=\"queryParams.pageNum\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          @current-change=\"handleCurrentChange\"\n          @size-change=\"handleSizeChange\"\n        ></el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 添加/编辑教师对话框 -->\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"500px\">\n      <el-form :model=\"teacherForm\" :rules=\"teacherRules\" ref=\"teacherFormRef\" label-width=\"100px\">\n        <el-form-item label=\"工号\" prop=\"username\">\n          <el-input v-model=\"teacherForm.username\" placeholder=\"请输入工号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"realName\">\n          <el-input v-model=\"teacherForm.realName\" placeholder=\"请输入姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogType === 'add'\">\n          <el-input v-model=\"teacherForm.password\" placeholder=\"请输入密码\" show-password></el-input>\n        </el-form-item>\n        <el-form-item label=\"修改密码\" v-if=\"dialogType === 'edit'\">\n          <el-input v-model=\"teacherForm.password\" placeholder=\"不修改请留空\" show-password></el-input>\n          <span class=\"tip-text\">不修改密码请留空</span>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"teacherForm.email\" placeholder=\"请输入邮箱\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"teacherForm.phone\" placeholder=\"请输入手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"teacherForm.status\">\n            <el-radio :label=\"1\">启用</el-radio>\n            <el-radio :label=\"0\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitTeacherForm\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 设置职称对话框 -->\n    <el-dialog title=\"设置教师职称\" v-model=\"titleDialogVisible\" width=\"600px\" @closed=\"handleTitleDialogClosed\">\n      <el-form :model=\"titleForm\" ref=\"titleFormRef\" label-width=\"120px\">\n        <el-form-item label=\"教师\">\n          <span>{{ currentTeacher.realName }}</span>\n        </el-form-item>\n        \n        <el-divider content-position=\"left\">职称设置</el-divider>\n        \n        <el-form-item label=\"普通教师\">\n          <el-switch v-model=\"titleForm.isNormalTeacher\"></el-switch>\n        </el-form-item>\n        \n        <template v-if=\"titleForm.isCourseLeader || !titleForm.hasCourseLeader\">\n          <el-form-item label=\"课程负责人\">\n            <el-switch v-model=\"titleForm.isCourseLeader\" @change=\"handleCourseLeaderChange\"></el-switch>\n            <div v-if=\"titleForm.isCourseLeader\" class=\"mt-10\">\n              <el-select \n                v-model=\"titleForm.courseId\" \n                placeholder=\"请选择负责的课程\" \n                style=\"width: 100%\" \n                filterable\n                :clearable=\"false\"\n                @change=\"handleCourseChange\"\n              >\n                <el-option\n                  v-for=\"course in courseList\"\n                  :key=\"course.id\"\n                  :label=\"course.name\"\n                  :value=\"course.id\"\n                ></el-option>\n              </el-select>\n            </div>\n          </el-form-item>\n        </template>\n        \n        <template v-if=\"titleForm.isMajorLeader || !titleForm.hasMajorLeader\">\n          <el-form-item label=\"专业负责人\">\n            <el-switch v-model=\"titleForm.isMajorLeader\" @change=\"handleMajorLeaderChange\"></el-switch>\n            <div v-if=\"titleForm.isMajorLeader\" class=\"mt-10\">\n              <el-select \n                v-model=\"titleForm.majorId\" \n                placeholder=\"请选择负责的专业\" \n                style=\"width: 100%\"\n                filterable\n                :clearable=\"false\"\n                @change=\"handleMajorChange\"\n              >\n                <el-option\n                  v-for=\"major in majorList\"\n                  :key=\"major.id\"\n                  :label=\"major.name\"\n                  :value=\"major.id\"\n                ></el-option>\n              </el-select>\n            </div>\n          </el-form-item>\n        </template>\n        \n        <template v-if=\"titleForm.isViceDean || !titleForm.hasViceDean\">\n          <el-form-item label=\"副院长\">\n            <el-switch v-model=\"titleForm.isViceDean\" @change=\"handleViceDeanChange\"></el-switch>\n            <div v-if=\"titleForm.isViceDean\" class=\"mt-10\">\n              <el-select \n                v-model=\"titleForm.collegeId\" \n                placeholder=\"请选择所属学院\" \n                style=\"width: 100%\"\n                filterable\n                :clearable=\"false\"\n                @change=\"handleCollegeChange\"\n              >\n                <el-option\n                  v-for=\"college in collegeList\"\n                  :key=\"college.id\"\n                  :label=\"college.name\"\n                  :value=\"college.id\"\n                ></el-option>\n              </el-select>\n            </div>\n          </el-form-item>\n        </template>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"titleDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitTitleForm\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport axios from 'axios'\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  realName: '',\n  username: '',\n  titleType: undefined\n})\n\n// 教师列表\nconst teacherList = ref([])\n// 教师职称列表\nconst teacherTitles = ref([])\n// 总数据条数\nconst total = ref(0)\n// 加载状态\nconst loading = ref(false)\n\n// 对话框相关\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\nconst dialogType = ref('add') // add or edit\nconst teacherFormRef = ref(null)\nconst teacherForm = reactive({\n  id: undefined,\n  username: '',\n  realName: '',\n  password: '',\n  email: '',\n  phone: '',\n  status: 1,\n  role: 1 // 教师角色固定为1\n})\n\n// 教师表单验证规则\nconst teacherRules = {\n  username: [\n    { required: true, message: '请输入工号', trigger: 'blur' },\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n  ],\n  realName: [\n    { required: true, message: '请输入姓名', trigger: 'blur' }\n  ],\n  password: [\n    { required: dialogType === 'add', message: '请输入密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n  ],\n  email: [\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n  ]\n}\n\n// 职称对话框相关\nconst titleDialogVisible = ref(false)\nconst titleFormRef = ref(null)\nconst currentTeacher = ref({})\nconst titleForm = reactive({\n  teacherId: undefined,\n  isNormalTeacher: false,\n  isCourseLeader: false,\n  isMajorLeader: false,\n  isViceDean: false,\n  courseId: undefined,\n  majorId: undefined,\n  collegeId: undefined,\n  hasCourseLeader: false,\n  hasMajorLeader: false,\n  hasViceDean: false\n})\n\n// 课程、专业、学院列表\nconst courseList = ref([])\nconst majorList = ref([])\nconst collegeList = ref([])\n\n// 获取教师列表\nconst fetchTeachers = async () => {\n  loading.value = true\n  try {\n    const response = await axios.get('/api/admin/teacher/list', {\n      params: queryParams\n    })\n    if (response.data.code === 200) {\n      teacherList.value = response.data.data.records\n      total.value = response.data.data.total\n    }\n  } catch (error) {\n    console.error('获取教师列表失败:', error)\n    ElMessage.error('获取教师列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取教师职称列表\nconst fetchTeacherTitles = async () => {\n  try {\n    const response = await axios.get('/api/admin/teacher/titles')\n    if (response.data.code === 200) {\n      teacherTitles.value = response.data.data\n    }\n  } catch (error) {\n    console.error('获取教师职称列表失败:', error)\n    ElMessage.error('获取教师职称列表失败')\n  }\n}\n\n// 获取课程列表\nconst fetchCourses = async () => {\n  try {\n    const response = await axios.get('/api/course/list', {\n      params: { pageNum: 1, pageSize: 100 }\n    })\n    if (response.data.code === 200) {\n      courseList.value = response.data.data.records\n    }\n  } catch (error) {\n    console.error('获取课程列表失败:', error)\n    ElMessage.error('获取课程列表失败')\n  }\n}\n\n// 获取专业列表\nconst fetchMajors = async () => {\n  try {\n    const response = await axios.get('/api/admin/major/list')\n    if (response.data.code === 200) {\n      majorList.value = response.data.data\n    }\n  } catch (error) {\n    console.error('获取专业列表失败:', error)\n    ElMessage.error('获取专业列表失败')\n  }\n}\n\n// 获取学院列表\nconst fetchColleges = async () => {\n  try {\n    const response = await axios.get('/api/admin/college/list')\n    if (response.data.code === 200) {\n      collegeList.value = response.data.data\n    }\n  } catch (error) {\n    console.error('获取学院列表失败:', error)\n    ElMessage.error('获取学院列表失败')\n  }\n}\n\n// 重置查询条件\nconst resetQuery = () => {\n  queryParams.realName = ''\n  queryParams.username = ''\n  queryParams.titleType = undefined\n  fetchTeachers()\n}\n\n// 处理页码变化\nconst handleCurrentChange = (val) => {\n  queryParams.pageNum = val\n  fetchTeachers()\n}\n\n// 处理每页条数变化\nconst handleSizeChange = (val) => {\n  queryParams.pageSize = val\n  fetchTeachers()\n}\n\n// 处理添加教师\nconst handleAdd = () => {\n  dialogType.value = 'add'\n  dialogTitle.value = '添加教师'\n  teacherForm.id = undefined\n  teacherForm.username = ''\n  teacherForm.realName = ''\n  teacherForm.password = ''\n  teacherForm.email = ''\n  teacherForm.phone = ''\n  teacherForm.status = 1\n  teacherForm.role = 1\n  dialogVisible.value = true\n}\n\n// 处理编辑教师\nconst handleEdit = (row) => {\n  dialogType.value = 'edit'\n  dialogTitle.value = '编辑教师'\n  teacherForm.id = row.id\n  teacherForm.username = row.username\n  teacherForm.realName = row.realName\n  teacherForm.password = '' // 清空密码字段\n  teacherForm.email = row.email\n  teacherForm.phone = row.phone\n  teacherForm.status = row.status\n  teacherForm.role = row.role\n  dialogVisible.value = true\n}\n\n// 处理删除教师\nconst handleDelete = (row) => {\n  ElMessageBox.confirm('确定要删除该教师吗？', '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      const response = await axios.delete(`/api/admin/teacher/${row.id}`)\n      if (response.data.code === 200) {\n        ElMessage.success('删除成功')\n        fetchTeachers()\n      } else {\n        ElMessage.error(response.data.message || '删除失败')\n      }\n    } catch (error) {\n      console.error('删除教师失败:', error)\n      ElMessage.error('删除教师失败')\n    }\n  }).catch(() => {})\n}\n\n// 处理状态变化\nconst handleStatusChange = async (row) => {\n  try {\n    const response = await axios.put('/api/admin/teacher/status', {\n      id: row.id,\n      status: row.status\n    })\n    if (response.data.code === 200) {\n      ElMessage.success(`${row.status === 1 ? '启用' : '禁用'}成功`)\n    } else {\n      ElMessage.error(response.data.message || '操作失败')\n      // 恢复原状态\n      row.status = row.status === 1 ? 0 : 1\n    }\n  } catch (error) {\n    console.error('修改状态失败:', error)\n    ElMessage.error('修改状态失败')\n    // 恢复原状态\n    row.status = row.status === 1 ? 0 : 1\n  }\n}\n\n// 提交教师表单\nconst submitTeacherForm = () => {\n  teacherFormRef.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        let response\n        if (dialogType.value === 'add') {\n          response = await axios.post('/api/admin/teacher', teacherForm)\n        } else {\n          response = await axios.put('/api/admin/teacher', teacherForm)\n        }\n        \n        if (response.data.code === 200) {\n          ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功')\n          dialogVisible.value = false\n          fetchTeachers()\n        } else {\n          ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'))\n        }\n      } catch (error) {\n        console.error(dialogType.value === 'add' ? '添加教师失败:' : '修改教师失败:', error)\n        ElMessage.error(dialogType.value === 'add' ? '添加教师失败' : '修改教师失败')\n      }\n    }\n  })\n}\n\n// 判断教师是否有指定职称\nconst hasTitle = (teacherId, titleType) => {\n  return teacherTitles.value.some(title => \n    title.teacherId === teacherId && title.titleType === titleType\n  )\n}\n\n// 处理设置职称\nconst handleSetTitle = async (row) => {\n  try {\n    currentTeacher.value = row\n    titleForm.teacherId = row.id\n    \n    // 初始化职称表单\n    titleForm.isNormalTeacher = hasTitle(row.id, 0)\n    titleForm.isCourseLeader = hasTitle(row.id, 1)\n    titleForm.isMajorLeader = hasTitle(row.id, 2)\n    titleForm.isViceDean = hasTitle(row.id, 3)\n    \n    // 获取当前职称对应的课程、专业、学院ID\n    const courseLeaderTitle = teacherTitles.value.find(title => \n      title.teacherId === row.id && title.titleType === 1\n    )\n    titleForm.courseId = courseLeaderTitle ? courseLeaderTitle.courseId : undefined\n    \n    const majorLeaderTitle = teacherTitles.value.find(title => \n      title.teacherId === row.id && title.titleType === 2\n    )\n    titleForm.majorId = majorLeaderTitle ? majorLeaderTitle.majorId : undefined\n    \n    const viceDeanTitle = teacherTitles.value.find(title => \n      title.teacherId === row.id && title.titleType === 3\n    )\n    titleForm.collegeId = viceDeanTitle ? viceDeanTitle.collegeId : undefined\n    \n    // 如果是课程负责人但没有选择课程，则默认选择第一个课程\n    if (titleForm.isCourseLeader && !titleForm.courseId && courseList.value.length > 0) {\n      titleForm.courseId = courseList.value[0].id\n    }\n    \n    // 如果是专业负责人但没有选择专业，则默认选择第一个专业\n    if (titleForm.isMajorLeader && !titleForm.majorId && majorList.value.length > 0) {\n      titleForm.majorId = majorList.value[0].id\n    }\n    \n    // 如果是副院长但没有选择学院，则默认选择第一个学院\n    if (titleForm.isViceDean && !titleForm.collegeId && collegeList.value.length > 0) {\n      titleForm.collegeId = collegeList.value[0].id\n    }\n    \n    // 检查是否已有其他教师担任这些职称\n    if (titleForm.courseId) {\n      titleForm.hasCourseLeader = teacherTitles.value.some(title => \n        title.titleType === 1 && title.teacherId !== row.id && title.courseId === titleForm.courseId\n      )\n    } else {\n      titleForm.hasCourseLeader = false\n    }\n    \n    if (titleForm.majorId) {\n      titleForm.hasMajorLeader = teacherTitles.value.some(title => \n        title.titleType === 2 && title.teacherId !== row.id && title.majorId === titleForm.majorId\n      )\n    } else {\n      titleForm.hasMajorLeader = false\n    }\n    \n    if (titleForm.collegeId) {\n      titleForm.hasViceDean = teacherTitles.value.some(title => \n        title.titleType === 3 && title.teacherId !== row.id && title.collegeId === titleForm.collegeId\n      )\n    } else {\n      titleForm.hasViceDean = false\n    }\n    \n    titleDialogVisible.value = true\n  } catch (error) {\n    console.error('设置教师职称时出错:', error)\n    ElMessage.error('设置教师职称时出错，请刷新页面后重试')\n  }\n}\n\n// 提交职称表单\nconst submitTitleForm = async () => {\n  try {\n    // 验证必填项\n    if (titleForm.isCourseLeader && !titleForm.courseId) {\n      ElMessage.warning('请选择负责的课程')\n      return\n    }\n    \n    if (titleForm.isMajorLeader && !titleForm.majorId) {\n      ElMessage.warning('请选择负责的专业')\n      return\n    }\n    \n    if (titleForm.isViceDean && !titleForm.collegeId) {\n      ElMessage.warning('请选择所属学院')\n      return\n    }\n    \n    const response = await axios.post('/api/admin/teacher/titles', {\n      teacherId: titleForm.teacherId,\n      isNormalTeacher: titleForm.isNormalTeacher,\n      isCourseLeader: titleForm.isCourseLeader,\n      isMajorLeader: titleForm.isMajorLeader,\n      isViceDean: titleForm.isViceDean,\n      courseId: titleForm.courseId,\n      majorId: titleForm.majorId,\n      collegeId: titleForm.collegeId\n    })\n    \n    if (response.data.code === 200) {\n      ElMessage.success('设置职称成功')\n      titleDialogVisible.value = false\n      fetchTeacherTitles()\n      fetchTeachers()\n    } else {\n      ElMessage.error(response.data.message || '设置职称失败')\n    }\n  } catch (error) {\n    console.error('设置职称失败:', error)\n    ElMessage.error('设置职称失败，请刷新页面后重试')\n  }\n}\n\n// 处理职称对话框关闭\nconst handleTitleDialogClosed = () => {\n  try {\n    // 重置职称表单\n    titleForm.teacherId = undefined\n    titleForm.isNormalTeacher = false\n    titleForm.isCourseLeader = false\n    titleForm.isMajorLeader = false\n    titleForm.isViceDean = false\n    titleForm.courseId = undefined\n    titleForm.majorId = undefined\n    titleForm.collegeId = undefined\n    titleForm.hasCourseLeader = false\n    titleForm.hasMajorLeader = false\n    titleForm.hasViceDean = false\n    \n    // 清空当前选中教师\n    currentTeacher.value = {}\n  } catch (error) {\n    console.error('关闭对话框重置表单时出错:', error)\n  }\n}\n\n// 处理课程负责人变化\nconst handleCourseLeaderChange = (value) => {\n  if (value) {\n    // 如果开启课程负责人，默认选择第一个课程\n    if (!titleForm.courseId && courseList.value.length > 0) {\n      titleForm.courseId = courseList.value[0].id\n      // 检查是否已有其他教师担任这一职称\n      titleForm.hasCourseLeader = teacherTitles.value.some(title => \n        title.titleType === 1 && title.teacherId !== titleForm.teacherId && title.courseId === titleForm.courseId\n      )\n    }\n  } else {\n    // 如果关闭，清空选择\n    titleForm.courseId = undefined\n    titleForm.hasCourseLeader = false\n  }\n}\n\n// 处理课程变化\nconst handleCourseChange = (courseId) => {\n  // 检查是否已有其他教师担任该课程负责人\n  titleForm.hasCourseLeader = teacherTitles.value.some(title => \n    title.titleType === 1 && title.teacherId !== titleForm.teacherId && title.courseId === courseId\n  )\n}\n\n// 处理专业负责人变化\nconst handleMajorLeaderChange = (value) => {\n  if (value) {\n    // 如果开启专业负责人，默认选择第一个专业\n    if (!titleForm.majorId && majorList.value.length > 0) {\n      titleForm.majorId = majorList.value[0].id\n      // 检查是否已有其他教师担任这一职称\n      titleForm.hasMajorLeader = teacherTitles.value.some(title => \n        title.titleType === 2 && title.teacherId !== titleForm.teacherId && title.majorId === titleForm.majorId\n      )\n    }\n  } else {\n    // 如果关闭，清空选择\n    titleForm.majorId = undefined\n    titleForm.hasMajorLeader = false\n  }\n}\n\n// 处理专业变化\nconst handleMajorChange = (majorId) => {\n  // 检查是否已有其他教师担任该专业负责人\n  titleForm.hasMajorLeader = teacherTitles.value.some(title => \n    title.titleType === 2 && title.teacherId !== titleForm.teacherId && title.majorId === majorId\n  )\n}\n\n// 处理副院长变化\nconst handleViceDeanChange = (value) => {\n  if (value) {\n    // 如果开启副院长，默认选择第一个学院\n    if (!titleForm.collegeId && collegeList.value.length > 0) {\n      titleForm.collegeId = collegeList.value[0].id\n      // 检查是否已有其他教师担任这一职称\n      titleForm.hasViceDean = teacherTitles.value.some(title => \n        title.titleType === 3 && title.teacherId !== titleForm.teacherId && title.collegeId === titleForm.collegeId\n      )\n    }\n  } else {\n    // 如果关闭，清空选择\n    titleForm.collegeId = undefined\n    titleForm.hasViceDean = false\n  }\n}\n\n// 处理学院变化\nconst handleCollegeChange = (collegeId) => {\n  // 检查是否已有其他教师担任该学院副院长\n  titleForm.hasViceDean = teacherTitles.value.some(title => \n    title.titleType === 3 && title.teacherId !== titleForm.teacherId && title.collegeId === collegeId\n  )\n}\n\nonMounted(() => {\n  fetchTeachers()\n  fetchTeacherTitles()\n  fetchCourses()\n  fetchMajors()\n  fetchColleges()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.teacher-management {\n  h1 {\n    margin-bottom: 20px;\n  }\n  \n  .filter-card {\n    margin-bottom: 20px;\n  }\n  \n  .operation-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n  \n  .table-card {\n    margin-bottom: 20px;\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n  \n  .mt-10 {\n    margin-top: 10px;\n  }\n}\n\n.tip-text {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 5px;\n  display: block;\n}\n</style> ","import script from \"./TeacherManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TeacherManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TeacherManagement.vue?vue&type=style&index=0&id=560cd0fb&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-560cd0fb\"]])\n\nexport default __exports__"],"names":["queryParams","reactive","pageNum","pageSize","realName","username","titleType","undefined","teacherList","ref","teacherTitles","total","loading","dialogVisible","dialogTitle","dialogType","teacherFormRef","teacherForm","id","password","email","phone","status","role","teacherRules","required","message","trigger","min","max","type","titleDialogVisible","titleFormRef","currentTeacher","titleForm","teacherId","isNormalTeacher","isCourseLeader","isMajorLeader","isViceDean","courseId","majorId","collegeId","hasCourseLeader","hasMajorLeader","hasViceDean","courseList","majorList","collegeList","fetchTeachers","async","value","response","axios","params","data","code","records","error","console","ElMessage","fetchTeacherTitles","fetchCourses","fetchMajors","fetchColleges","resetQuery","handleCurrentChange","val","handleSizeChange","handleAdd","handleEdit","row","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","success","catch","handleStatusChange","submitTeacherForm","validate","valid","hasTitle","some","title","handleSetTitle","courseLeaderTitle","find","majorLeaderTitle","viceDeanTitle","length","submitTitleForm","warning","handleTitleDialogClosed","handleCourseLeaderChange","handleCourseChange","handleMajorLeaderChange","handleMajorChange","handleViceDeanChange","handleCollegeChange","onMounted","__exports__"],"sourceRoot":""}