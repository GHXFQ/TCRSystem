{"version":3,"file":"js/412.9e4ae34a.js","mappings":"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","sources":["webpack://tcr-system-frontend/./src/views/student/Materials.vue","webpack://tcr-system-frontend/./src/views/student/Materials.vue?6a75"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"materials-container\">\n    <h1>课程资料</h1>\n    \n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"filter-form\">\n        <el-form-item label=\"课程\">\n          <el-select \n            v-model=\"queryParams.courseId\" \n            placeholder=\"选择课程\" \n            clearable\n            style=\"width: 220px;\"\n            filterable\n          >\n            <el-option\n              v-for=\"course in courseList\"\n              :key=\"course.id\"\n              :label=\"course.name\"\n              :value=\"course.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"资料类型\">\n          <el-select \n            v-model=\"queryParams.type\" \n            placeholder=\"选择类型\" \n            clearable\n            style=\"width: 150px;\"\n          >\n            <el-option :label=\"'课程资料'\" :value=\"0\" />\n            <el-option :label=\"'学生资料'\" :value=\"1\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchMaterialList\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      \n      <!-- 显示当前筛选条件 -->\n      <div class=\"filter-info\" v-if=\"selectedCourseName || selectedTypeName\">\n        <span>当前筛选: </span>\n        <el-tag v-if=\"selectedCourseName\" type=\"info\" class=\"filter-tag\">\n          课程: {{ selectedCourseName }}\n        </el-tag>\n        <el-tag v-if=\"selectedTypeName\" type=\"info\" class=\"filter-tag\">\n          类型: {{ selectedTypeName }}\n        </el-tag>\n      </div>\n    </el-card>\n    \n    <el-card class=\"material-list-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>资料列表</span>\n        </div>\n      </template>\n      \n      <el-table\n        v-loading=\"loading\"\n        :data=\"materialList\"\n        style=\"width: 100%\"\n        border\n      >\n        <el-table-column prop=\"name\" label=\"资料名称\" min-width=\"180\" />\n        <el-table-column prop=\"description\" label=\"资料描述\" min-width=\"200\" />\n        <el-table-column label=\"所属课程\" min-width=\"120\">\n          <template #default=\"scope\">\n            {{ getCourseName(scope.row) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"fileType\" label=\"文件类型\" min-width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getFileTypeTag(scope.row.fileType)\">\n              {{ getFileTypeLabel(scope.row.fileType) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"fileSize\" label=\"文件大小\" min-width=\"100\">\n          <template #default=\"scope\">\n            {{ formatFileSize(scope.row.fileSize) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"downloadCount\" label=\"下载次数\" min-width=\"100\" />\n        <el-table-column label=\"上传者\" min-width=\"100\">\n          <template #default=\"scope\">\n            {{ getUploaderName(scope.row) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"上传时间\" min-width=\"160\" />\n        <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleDownload(scope.row)\">下载</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          :current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          @update:current-page=\"val => currentPage = val\"\n          @update:page-size=\"val => pageSize = val\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport axios from 'axios'\n\n// 状态变量\nconst loading = ref(false)\nconst materialList = ref([])\nconst courseList = ref([])\nconst total = ref(0)\n\n// 查询参数\nconst queryParams = reactive({\n  pageNum: 1,\n  pageSize: 10,\n  courseId: undefined,\n  type: undefined\n})\n\n// 计算属性用于v-model绑定\nconst currentPage = computed({\n  get: () => queryParams.pageNum,\n  set: (val) => { queryParams.pageNum = val }\n})\n\nconst pageSize = computed({\n  get: () => queryParams.pageSize,\n  set: (val) => { queryParams.pageSize = val }\n})\n\n// 计算属性：当前选中的课程名称\nconst selectedCourseName = computed(() => {\n  if (!queryParams.courseId) return ''\n  const course = courseList.value.find(c => c.id === queryParams.courseId)\n  return course ? course.name : ''\n})\n\n// 计算属性：当前选中的资料类型名称\nconst selectedTypeName = computed(() => {\n  if (queryParams.type === undefined) return ''\n  return queryParams.type === 0 ? '课程资料' : '学生资料'\n})\n\n// 获取课程列表\nconst fetchCourseList = async () => {\n  try {\n    const response = await axios.get('/api/student/courses')\n    courseList.value = response.data.data || []\n    \n    // 如果有课程，默认选择第一个\n    if (courseList.value.length > 0 && !queryParams.courseId) {\n      queryParams.courseId = courseList.value[0].id\n      await fetchMaterialList()\n    }\n  } catch (error) {\n    console.error('获取课程列表失败:', error)\n    ElMessage.error('获取课程列表失败')\n  }\n}\n\n// 获取资料列表\nconst fetchMaterialList = async () => {\n  loading.value = true\n  try {\n    const response = await axios.get('/api/material/list', {\n      params: queryParams\n    })\n    materialList.value = response.data.data.records || []\n    \n    // 检查返回的数据结构，以便调试\n    if (materialList.value.length > 0) {\n      const firstItem = materialList.value[0]\n      console.log('资料列表第一条数据:', firstItem)\n      console.log('资料列表第一条数据的所有字段:', Object.keys(firstItem))\n      \n      // 检查所有可能的上传者名称字段\n      const possibleFields = ['uploadUserName', 'upload_user_name', 'uploaderName', 'uploader_name', 'userName', 'user_name']\n      possibleFields.forEach(field => {\n        console.log(`字段 ${field} 的值:`, firstItem[field])\n      })\n    }\n    \n    // 处理课程名称和上传者名称\n    materialList.value = materialList.value.map(material => {\n      // 添加课程名称处理\n      if (material.courseId && !material.courseName && !material.course_name) {\n        const course = courseList.value.find(c => c.id === material.courseId)\n        if (course) {\n          material.courseName = course.name\n        }\n      }\n      \n      // 检查并记录上传者字段情况（调试用）\n      if (!material.uploadUserName || material.uploadUserName.trim() === '') {\n        console.log('资料缺少上传者信息:', material.id, material.name, '所有字段:', Object.keys(material))\n      }\n      \n      return material\n    })\n    \n    total.value = response.data.data.total || 0\n  } catch (error) {\n    console.error('获取资料列表失败:', error)\n    ElMessage.error('获取资料列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 重置查询条件\nconst resetQuery = () => {\n  queryParams.courseId = undefined\n  queryParams.type = undefined\n  fetchMaterialList()\n}\n\n// 处理页码变化\nconst handleCurrentChange = (val) => {\n  queryParams.pageNum = val\n  fetchMaterialList()\n}\n\n// 处理每页条数变化\nconst handleSizeChange = (val) => {\n  queryParams.pageSize = val\n  fetchMaterialList()\n}\n\n// 处理下载\nconst handleDownload = (row) => {\n  ElMessageBox.confirm('确认下载该资料?', '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'info'\n  }).then(() => {\n    // 这里应该调用API下载资料\n    window.open(`/api/material/download/${row.id}`, '_blank')\n  }).catch(() => {})\n}\n\n// 格式化文件大小\nconst formatFileSize = (size) => {\n  if (!size) return '0 B'\n  const units = ['B', 'KB', 'MB', 'GB', 'TB']\n  let index = 0\n  while (size >= 1024 && index < units.length - 1) {\n    size /= 1024\n    index++\n  }\n  return size.toFixed(2) + ' ' + units[index]\n}\n\n// 获取文件类型标签样式\nconst getFileTypeTag = (fileType) => {\n  if (!fileType) return ''\n  if (fileType.includes('image')) return 'success'\n  if (fileType.includes('pdf')) return 'danger'\n  if (fileType.includes('word') || fileType.includes('document')) return 'primary'\n  if (fileType.includes('excel') || fileType.includes('sheet')) return ''\n  if (fileType.includes('zip') || fileType.includes('rar')) return 'warning'\n  return 'info'\n}\n\n// 获取文件类型显示标签\nconst getFileTypeLabel = (fileType) => {\n  if (!fileType) return '未知'\n  if (fileType.includes('image')) return '图片'\n  if (fileType.includes('pdf')) return 'PDF'\n  if (fileType.includes('word') || fileType.includes('document')) return 'Word'\n  if (fileType.includes('excel') || fileType.includes('sheet')) return 'Excel'\n  if (fileType.includes('zip') || fileType.includes('rar')) return '压缩包'\n  return fileType.split('/')[1] || fileType\n}\n\n// 获取课程名称（处理不同的属性名和空值情况）\nconst getCourseName = (row) => {\n  // 按优先级检查不同可能的属性名\n  if (row.courseName) return row.courseName\n  if (row.course_name) return row.course_name\n  \n  // 如果有courseId但没有名称，尝试从courseList查找\n  if (row.courseId || row.course_id) {\n    const courseId = row.courseId || row.course_id\n    const course = courseList.value.find(c => c.id === courseId)\n    return course ? course.name : '未知课程'\n  }\n  \n  return '未知课程'\n}\n\n// 获取上传者名称（处理不同的属性名和空值情况）\nconst getUploaderName = (row) => {\n  // 按优先级检查不同可能的属性名\n  if (row.uploadUserName && row.uploadUserName.trim() !== '') return row.uploadUserName\n  if (row.upload_user_name && row.upload_user_name.trim() !== '') return row.upload_user_name\n  if (row.uploaderName && row.uploaderName.trim() !== '') return row.uploaderName\n  if (row.uploader_name && row.uploader_name.trim() !== '') return row.uploader_name\n  if (row.userName && row.userName.trim() !== '') return row.userName\n  if (row.user_name && row.user_name.trim() !== '') return row.user_name\n  \n  // 如果找不到任何名称，返回未知用户\n  console.log('找不到上传者名称字段，资料ID:', row.id, '可用字段:', Object.keys(row))\n  return '未知用户'\n}\n\n// 页面加载时获取数据\nonMounted(async () => {\n  // 先获取课程列表，再获取材料列表\n  await fetchCourseList()\n  // fetchMaterialList会在fetchCourseList中自动调用\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.materials-container {\n  h1 {\n    margin-bottom: 20px;\n  }\n  \n  .filter-card {\n    margin-bottom: 20px;\n    \n    .filter-info {\n      margin-top: 10px;\n      font-size: 14px;\n      color: #606266;\n      \n      .filter-tag {\n        margin-left: 8px;\n        margin-right: 8px;\n      }\n    }\n  }\n  \n  .material-list-card {\n    .card-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n</style> ","import script from \"./Materials.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Materials.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Materials.vue?vue&type=style&index=0&id=2fc4fb59&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2fc4fb59\"]])\n\nexport default __exports__"],"names":["loading","ref","materialList","courseList","total","queryParams","reactive","pageNum","pageSize","courseId","undefined","type","currentPage","computed","get","set","val","selectedCourseName","course","value","find","c","id","name","selectedTypeName","fetchCourseList","async","response","axios","data","length","fetchMaterialList","error","console","ElMessage","params","records","firstItem","log","Object","keys","possibleFields","forEach","field","map","material","courseName","course_name","uploadUserName","trim","resetQuery","handleCurrentChange","handleSizeChange","handleDownload","row","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","window","open","catch","formatFileSize","size","units","index","toFixed","getFileTypeTag","fileType","includes","getFileTypeLabel","split","getCourseName","course_id","getUploaderName","upload_user_name","uploaderName","uploader_name","userName","user_name","onMounted","__exports__"],"sourceRoot":""}