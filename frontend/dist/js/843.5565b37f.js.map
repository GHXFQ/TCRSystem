{"version":3,"file":"js/843.5565b37f.js","mappings":"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","sources":["webpack://tcr-system-frontend/./src/views/UserProfile.vue","webpack://tcr-system-frontend/./src/views/UserProfile.vue?5f8e"],"sourcesContent":["<template>\n  <div class=\"user-profile-container\">\n    <el-card class=\"profile-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>个人信息</h2>\n          <el-button type=\"primary\" size=\"small\" @click=\"goToHome\">返回首页</el-button>\n        </div>\n      </template>\n      \n      <div class=\"profile-content\">\n        <div class=\"avatar-section\">\n          <div class=\"avatar-display\">\n            <img v-if=\"avatarUrl\" :src=\"avatarUrl\" class=\"avatar\" alt=\"用户头像\" />\n            <el-avatar v-else :size=\"100\" class=\"user-avatar\">{{ userInfo.realName?.substring(0, 1) || userInfo.username?.substring(0, 1) || 'U' }}</el-avatar>\n          </div>\n          \n          <el-upload\n            class=\"avatar-uploader\"\n            action=\"/api/user/upload-avatar\"\n            :headers=\"{ Authorization: token }\"\n            :show-file-list=\"false\"\n            :on-success=\"handleAvatarSuccess\"\n            :before-upload=\"beforeAvatarUpload\"\n            v-bind=\"safeElementConfig\"\n          >\n            <el-button size=\"small\" type=\"primary\" class=\"upload-button\">上传新头像</el-button>\n          </el-upload>\n          <div class=\"upload-hint\">支持JPG、PNG格式，大小不超过2MB</div>\n        </div>\n        \n        <div class=\"info-section\">\n          <el-descriptions :column=\"1\" border>\n            <el-descriptions-item v-if=\"userInfo.role === 0\" label=\"学号\">{{ userInfo.studentId || userInfo.username }}</el-descriptions-item>\n            <el-descriptions-item v-else-if=\"userInfo.role === 1\" label=\"工号\">{{ userInfo.teacherId || userInfo.username }}</el-descriptions-item>\n            <el-descriptions-item v-else label=\"用户名\">{{ userInfo.username }}</el-descriptions-item>\n            \n            <el-descriptions-item label=\"姓名\">{{ userInfo.realName || '未设置' }}</el-descriptions-item>\n            <el-descriptions-item label=\"角色\">\n              {{ userInfo.role === 0 ? '学生' : userInfo.role === 1 ? '教师' : '管理员' }}\n            </el-descriptions-item>\n            <el-descriptions-item v-if=\"userInfo.role === 0\" label=\"班级\">{{ userInfo.className || '未设置' }}</el-descriptions-item>\n            <el-descriptions-item v-if=\"userInfo.role === 0\" label=\"专业\">{{ userInfo.majorName || '未设置' }}</el-descriptions-item>\n            <el-descriptions-item v-if=\"userInfo.role === 0\" label=\"学院\">{{ userInfo.collegeName || '未设置' }}</el-descriptions-item>\n            <el-descriptions-item label=\"邮箱\">{{ userInfo.email || '未设置' }}</el-descriptions-item>\n          </el-descriptions>\n        </div>\n      </div>\n      \n      <div class=\"password-section\">\n        <h3>修改密码</h3>\n        <el-form \n          :model=\"passwordForm\" \n          :rules=\"passwordRules\" \n          ref=\"passwordFormRef\" \n          label-width=\"120px\"\n          status-icon\n        >\n          <el-form-item label=\"当前密码\" prop=\"oldPassword\">\n            <el-input \n              v-model=\"passwordForm.oldPassword\" \n              type=\"password\" \n              show-password\n              placeholder=\"请输入当前密码\"\n              v-bind=\"safeElementConfig\" \n            />\n          </el-form-item>\n          <el-form-item label=\"新密码\" prop=\"newPassword\">\n            <el-input \n              v-model=\"passwordForm.newPassword\" \n              type=\"password\" \n              show-password\n              placeholder=\"请输入新密码\" \n              v-bind=\"safeElementConfig\"\n            />\n          </el-form-item>\n          <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n            <el-input \n              v-model=\"passwordForm.confirmPassword\" \n              type=\"password\" \n              show-password\n              placeholder=\"请再次输入新密码\" \n              v-bind=\"safeElementConfig\"\n            />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitPasswordChange\" :loading=\"loading\">修改密码</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { safeElementConfig } from '@/utils/resizeObserverFix';\n\nconst router = useRouter();\nconst token = localStorage.getItem('token');\nconst userInfo = ref(JSON.parse(localStorage.getItem('userInfo') || '{}'));\nconst avatarUrl = ref('');\nconst loading = ref(false);\nconst passwordFormRef = ref(null);\n\n// 返回对应用户角色的首页\nconst goToHome = () => {\n  const role = userInfo.value.role;\n  if (role === 0) {\n    router.push('/student/home');\n  } else if (role === 1) {\n    router.push('/teacher/home');\n  } else if (role === 2) {\n    router.push('/admin/home');\n  } else {\n    router.push('/login');\n  }\n};\n\n// 处理头像路径，确保使用正确的服务器地址\nconst getFullAvatarUrl = (path) => {\n  if (!path) return '';\n  // 如果已经是完整URL，则直接返回\n  if (path.startsWith('http')) {\n    return path;\n  }\n  // 否则拼接后端地址\n  // 假设后端服务运行在 http://localhost:8080\n  return `http://localhost:8080${path}`;\n};\n\n// 密码修改表单\nconst passwordForm = reactive({\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n});\n\n// 密码表单校验规则\nconst validatePass = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请输入密码'));\n  } else {\n    if (passwordForm.confirmPassword !== '') {\n      passwordFormRef.value.validateField('confirmPassword');\n    }\n    callback();\n  }\n};\n\nconst validatePass2 = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请再次输入密码'));\n  } else if (value !== passwordForm.newPassword) {\n    callback(new Error('两次输入密码不一致!'));\n  } else {\n    callback();\n  }\n};\n\nconst passwordRules = {\n  oldPassword: [\n    { required: true, message: '请输入当前密码', trigger: 'blur' }\n  ],\n  newPassword: [\n    { required: true, message: '请输入新密码', trigger: 'blur' },\n    { validator: validatePass, trigger: 'blur' },\n    { min: 6, message: '密码长度不能小于6个字符', trigger: 'blur' }\n  ],\n  confirmPassword: [\n    { required: true, message: '请再次输入新密码', trigger: 'blur' },\n    { validator: validatePass2, trigger: 'blur' }\n  ]\n};\n\n// 头像上传前的校验\nconst beforeAvatarUpload = (file) => {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isJpgOrPng) {\n    ElMessage.error('头像只能是JPG或PNG格式!');\n    return false;\n  }\n  if (!isLt2M) {\n    ElMessage.error('头像大小不能超过2MB!');\n    return false;\n  }\n  return true;\n};\n\n// 头像上传成功的回调\nconst handleAvatarSuccess = (response) => {\n  if (response.code === 200) {\n    const avatarPath = response.data;\n    avatarUrl.value = getFullAvatarUrl(avatarPath);\n    // 更新本地存储的用户信息\n    const updatedUserInfo = { ...userInfo.value, avatar: avatarPath };  // 注意这里使用avatar而不是avatarUrl\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\n    userInfo.value = updatedUserInfo;\n    ElMessage.success('头像上传成功');\n  } else {\n    ElMessage.error(response.message || '头像上传失败');\n  }\n};\n\n// 提交密码修改\nconst submitPasswordChange = async () => {\n  await passwordFormRef.value.validate(async (valid) => {\n    if (valid) {\n      loading.value = true;\n      try {\n        // 确保token正确发送\n        const response = await axios.post('/api/user/change-password', {\n          oldPassword: passwordForm.oldPassword,\n          newPassword: passwordForm.newPassword\n        }, {\n          headers: { 'Authorization': token }\n        });\n        \n        if (response.data.code === 200) {\n          ElMessage.success('密码修改成功，请重新登录');\n          // 清除登录信息，跳转到登录页\n          setTimeout(() => {\n            localStorage.removeItem('token');\n            localStorage.removeItem('userInfo');\n            router.push('/login');\n          }, 1500);\n        } else {\n          ElMessage.error(response.data.message || '密码修改失败');\n        }\n      } catch (error) {\n        console.error('密码修改出错:', error);\n        ElMessage.error('密码修改失败，请稍后重试');\n      } finally {\n        loading.value = false;\n      }\n    }\n  });\n};\n\n// 获取用户信息\nconst fetchUserProfile = async () => {\n  try {\n    const response = await axios.get('/api/user/profile', {\n      headers: { 'Authorization': token }\n    });\n    \n    if (response.data.code === 200) {\n      userInfo.value = response.data.data;\n      // 更新本地存储的用户信息\n      localStorage.setItem('userInfo', JSON.stringify(response.data.data));\n      // 如果有头像，设置头像URL\n      if (response.data.data.avatar) {\n        avatarUrl.value = getFullAvatarUrl(response.data.data.avatar);\n      }\n    }\n  } catch (error) {\n    console.error('获取用户信息出错:', error);\n  }\n};\n\nonMounted(() => {\n  fetchUserProfile();\n});\n</script>\n\n<style scoped>\n.user-profile-container {\n  padding: 20px;\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.profile-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.profile-content {\n  display: flex;\n  margin-bottom: 30px;\n}\n\n.avatar-section {\n  margin-right: 30px;\n  text-align: center;\n  flex-shrink: 0;\n}\n\n.info-section {\n  flex-grow: 1;\n}\n\n.avatar-uploader {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.avatar {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.user-avatar {\n  background-color: #409EFF;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n}\n\n.upload-hint {\n  margin-top: 8px;\n  color: #909399;\n  font-size: 14px;\n}\n\n.password-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #ebeef5;\n}\n\n.password-section h3 {\n  margin-bottom: 20px;\n  color: #303133;\n}\n\n@media (max-width: 768px) {\n  .profile-content {\n    flex-direction: column;\n  }\n  \n  .avatar-section {\n    margin-right: 0;\n    margin-bottom: 20px;\n  }\n}\n</style> ","import script from \"./UserProfile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserProfile.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserProfile.vue?vue&type=style&index=0&id=c771c5b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c771c5b8\"]])\n\nexport default __exports__"],"names":["router","useRouter","token","localStorage","getItem","userInfo","ref","JSON","parse","avatarUrl","loading","passwordFormRef","goToHome","role","value","push","getFullAvatarUrl","path","startsWith","passwordForm","reactive","oldPassword","newPassword","confirmPassword","validatePass","rule","callback","Error","validateField","validatePass2","passwordRules","required","message","trigger","validator","min","beforeAvatarUpload","file","isJpgOrPng","type","isLt2M","size","ElMessage","error","handleAvatarSuccess","response","code","avatarPath","data","updatedUserInfo","avatar","setItem","stringify","success","submitPasswordChange","async","validate","valid","axios","headers","setTimeout","removeItem","console","fetchUserProfile","onMounted","__exports__"],"sourceRoot":""}