{"version":3,"file":"js/264.8788fb5c.js","mappings":"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","sources":["webpack://tcr-system-frontend/./src/views/admin/MaterialStatistics.vue","webpack://tcr-system-frontend/./src/views/admin/MaterialStatistics.vue?9d68"],"sourcesContent":["<template>\n  <div class=\"material-statistics\">\n    <h1 class=\"page-title\">教学材料统计与分析</h1>\n    \n    <!-- 过滤条件 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n        <el-form-item label=\"材料类型\">\n          <el-select v-model=\"queryParams.materialTypeId\" placeholder=\"请选择材料类型\" clearable style=\"width: 200px;\" v-bind=\"safeElementConfig\">\n            <el-option v-for=\"item in materialTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学年\">\n          <el-select v-model=\"queryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 200px;\" v-bind=\"safeElementConfig\">\n            <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学期\">\n          <el-select v-model=\"queryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 200px;\" v-bind=\"safeElementConfig\">\n            <el-option :label=\"'第一学期'\" :value=\"1\"></el-option>\n            <el-option :label=\"'第二学期'\" :value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchStatistics\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <!-- 统计概览 -->\n    <el-row :gutter=\"20\" class=\"statistics-overview\">\n      <el-col :span=\"8\">\n        <el-card class=\"overview-card\">\n          <div class=\"overview-content\">\n            <div class=\"overview-title\">上传材料总数</div>\n            <div class=\"overview-number\">{{ overview.totalMaterials || 0 }}</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"overview-card\">\n          <div class=\"overview-content\">\n            <div class=\"overview-title\">已完成教师数</div>\n            <div class=\"overview-number\">{{ overview.completedTeachers || 0 }}</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"overview-card\">\n          <div class=\"overview-content\">\n            <div class=\"overview-title\">未完成教师数</div>\n            <div class=\"overview-number\">{{ overview.uncompletedTeachers || 0 }}</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <!-- 统计图表 -->\n    <el-row :gutter=\"20\" class=\"statistics-charts\">\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>按材料类型统计</span>\n            </div>\n          </template>\n          <div class=\"chart-container\" ref=\"typeChartRef\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>按学院统计</span>\n            </div>\n          </template>\n          <div class=\"chart-container\" ref=\"collegeChartRef\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <!-- 未完成教师列表 -->\n    <el-card class=\"table-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>未完成教师列表</span>\n          <el-button size=\"small\" type=\"warning\" @click=\"handleRemindAll\">一键提醒</el-button>\n        </div>\n      </template>\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <div v-else-if=\"uncompletedTeachers.length === 0\" class=\"empty-data\">\n        <el-empty description=\"暂无未完成的教师\" />\n      </div>\n      <el-table v-else :data=\"uncompletedTeachers\" style=\"width: 100%\">\n        <el-table-column prop=\"teacherId\" label=\"教师ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"teacherName\" label=\"教师姓名\"></el-table-column>\n        <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\n        <el-table-column prop=\"collegeName\" label=\"所属学院\"></el-table-column>\n        <el-table-column prop=\"materialTypeName\" label=\"材料类型\"></el-table-column>\n        <el-table-column prop=\"academicYear\" label=\"学年\"></el-table-column>\n        <el-table-column prop=\"semester\" label=\"学期\">\n          <template #default=\"scope\">\n            {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"deadline\" label=\"截止日期\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"150\">\n          <template #default=\"scope\">\n            <el-button-group>\n              <el-button size=\"small\" type=\"warning\" @click=\"handleRemind(scope.row.teacherId, scope.row.taskId)\">提醒</el-button>\n              <el-button size=\"small\" type=\"primary\" @click=\"handleViewTask(scope.row.taskId)\">查看任务</el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页器 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-if=\"total > 0\"\n          :current-page=\"queryParams.current\"\n          :page-size=\"queryParams.size\"\n          :page-sizes=\"[10, 20, 30, 50]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, nextTick, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport { safeElementConfig } from '@/utils/resizeObserverFix'\n\nconst router = useRouter();\nconst loading = ref(false);\nconst uncompletedTeachers = ref([]);\nconst total = ref(0);\n\n// 图表引用\nconst typeChartRef = ref(null);\nconst collegeChartRef = ref(null);\nlet typeChart = null;\nlet collegeChart = null;\n\n// 查询参数\nconst queryParams = reactive({\n  current: 1,\n  size: 10,\n  materialTypeId: '',\n  academicYear: '',\n  semester: ''\n});\n\n// 统计概览数据\nconst overview = reactive({\n  totalMaterials: 0,\n  completedTeachers: 0,\n  uncompletedTeachers: 0\n});\n\n// 选项列表\nconst materialTypes = ref([]);\nconst academicYears = ref([]);\n\n// 生成学年列表\nconst generateAcademicYears = () => {\n  const years = [];\n  const currentYear = new Date().getFullYear();\n  for (let i = 0; i < 5; i++) {\n    const year = currentYear - i;\n    years.push(`${year}-${year + 1}`);\n  }\n  academicYears.value = years;\n};\n\n// 获取材料类型列表\nconst fetchMaterialTypes = async () => {\n  try {\n    const response = await axios.get('/api/material-type/list');\n    if (response.data.code === 200 && response.data.data) {\n      materialTypes.value = response.data.data;\n    }\n  } catch (error) {\n    console.error('获取材料类型出错:', error);\n    ElMessage.error('获取材料类型失败');\n  }\n};\n\n// 获取统计数据\nconst fetchStatistics = async () => {\n  loading.value = true;\n  try {\n    // 获取概览数据\n    const overviewResponse = await axios.get('/api/admin/material-statistics/overview', {\n      params: {\n        materialTypeId: queryParams.materialTypeId,\n        academicYear: queryParams.academicYear,\n        semester: queryParams.semester\n      }\n    });\n    \n    if (overviewResponse.data.code === 200 && overviewResponse.data.data) {\n      Object.assign(overview, overviewResponse.data.data);\n    }\n    \n    // 获取未完成教师列表\n    const teachersResponse = await axios.get('/api/admin/material-statistics/uncompleted-teachers', {\n      params: queryParams\n    });\n    \n    if (teachersResponse.data.code === 200) {\n      uncompletedTeachers.value = teachersResponse.data.data.records || [];\n      total.value = teachersResponse.data.data.total || 0;\n    }\n    \n    // 获取按材料类型统计数据\n    const typeResponse = await axios.get('/api/admin/material-statistics/by-type');\n    if (typeResponse.data.code === 200 && typeResponse.data.data) {\n      await nextTick();\n      initTypeChart(typeResponse.data.data);\n    }\n    \n    // 获取按学院统计数据\n    const collegeResponse = await axios.get('/api/admin/material-statistics/by-college');\n    if (collegeResponse.data.code === 200 && collegeResponse.data.data) {\n      await nextTick();\n      initCollegeChart(collegeResponse.data.data);\n    }\n  } catch (error) {\n    console.error('获取统计数据出错:', error);\n    ElMessage.error('获取统计数据失败');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 重置查询\nconst resetQuery = () => {\n  Object.assign(queryParams, {\n    current: 1,\n    size: 10,\n    materialTypeId: '',\n    academicYear: '',\n    semester: ''\n  });\n  fetchStatistics();\n};\n\n// 初始化按材料类型统计图表\nconst initTypeChart = (data) => {\n  if (!typeChartRef.value) return;\n  \n  if (typeChart) {\n    typeChart.dispose();\n  }\n  \n  typeChart = echarts.init(typeChartRef.value);\n  \n  const names = data.map(item => item.name);\n  const completed = data.map(item => item.completed);\n  const uncompleted = data.map(item => item.uncompleted);\n  \n  const option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    },\n    legend: {\n      data: ['已完成', '未完成']\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'value'\n    },\n    yAxis: {\n      type: 'category',\n      data: names\n    },\n    series: [\n      {\n        name: '已完成',\n        type: 'bar',\n        stack: 'total',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: completed\n      },\n      {\n        name: '未完成',\n        type: 'bar',\n        stack: 'total',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: uncompleted\n      }\n    ]\n  };\n  \n  typeChart.setOption(option);\n  \n  window.addEventListener('resize', () => {\n    typeChart && typeChart.resize();\n  });\n};\n\n// 初始化按学院统计图表\nconst initCollegeChart = (data) => {\n  if (!collegeChartRef.value) return;\n  \n  if (collegeChart) {\n    collegeChart.dispose();\n  }\n  \n  collegeChart = echarts.init(collegeChartRef.value);\n  \n  const option = {\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    legend: {\n      orient: 'vertical',\n      left: 10,\n      data: data.map(item => item.name)\n    },\n    series: [\n      {\n        name: '未完成比例',\n        type: 'pie',\n        radius: ['50%', '70%'],\n        avoidLabelOverlap: false,\n        label: {\n          show: false,\n          position: 'center'\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: '18',\n            fontWeight: 'bold'\n          }\n        },\n        labelLine: {\n          show: false\n        },\n        data: data.map(item => ({\n          value: item.count,\n          name: item.name\n        }))\n      }\n    ]\n  };\n  \n  collegeChart.setOption(option);\n  \n  window.addEventListener('resize', () => {\n    collegeChart && collegeChart.resize();\n  });\n};\n\n// 提醒单个教师\nconst handleRemind = async (teacherId, taskId) => {\n  try {\n    const response = await axios.post('/api/admin/material-task/remind', {\n      teacherId,\n      taskId\n    });\n    \n    if (response.data.code === 200) {\n      ElMessage.success('已发送提醒通知');\n    } else {\n      ElMessage.error(response.data.message || '发送提醒失败');\n    }\n  } catch (error) {\n    console.error('发送提醒出错:', error);\n    ElMessage.error('发送提醒失败，请稍后重试');\n  }\n};\n\n// 一键提醒所有未完成的教师\nconst handleRemindAll = async () => {\n  if (uncompletedTeachers.value.length === 0) {\n    ElMessage.warning('没有需要提醒的教师');\n    return;\n  }\n  \n  ElMessageBox.confirm(`确定要提醒所有 ${uncompletedTeachers.value.length} 位未完成的教师吗？`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      const taskTeacherPairs = uncompletedTeachers.value.map(teacher => ({\n        taskId: teacher.taskId,\n        teacherId: teacher.teacherId\n      }));\n      \n      const response = await axios.post('/api/admin/material-task/remind-batch', {\n        reminders: taskTeacherPairs\n      });\n      \n      if (response.data.code === 200) {\n        ElMessage.success('批量发送提醒成功');\n      } else {\n        ElMessage.error(response.data.message || '批量发送提醒失败');\n      }\n    } catch (error) {\n      console.error('批量发送提醒出错:', error);\n      ElMessage.error('批量发送提醒失败，请稍后重试');\n    }\n  }).catch(() => {});\n};\n\n// 查看任务详情\nconst handleViewTask = (taskId) => {\n  router.push({\n    path: '/admin/material-tasks',\n    query: { taskId }\n  });\n};\n\n// 分页器相关方法\nconst handleSizeChange = (size) => {\n  queryParams.size = size;\n  fetchStatistics();\n};\n\nconst handleCurrentChange = (current) => {\n  queryParams.current = current;\n  fetchStatistics();\n};\n\nonMounted(() => {\n  generateAcademicYears();\n  fetchMaterialTypes();\n  fetchStatistics();\n  \n  // 注册窗口大小变化事件\n  window.addEventListener('resize', () => {\n    typeChart && typeChart.resize();\n    collegeChart && collegeChart.resize();\n  });\n});\n\n// 组件卸载时清理图表\nonUnmounted(() => {\n  if (typeChart) {\n    typeChart.dispose();\n    typeChart = null;\n  }\n  \n  if (collegeChart) {\n    collegeChart.dispose();\n    collegeChart = null;\n  }\n  \n  window.removeEventListener('resize', () => {\n    typeChart && typeChart.resize();\n    collegeChart && collegeChart.resize();\n  });\n});\n</script>\n\n<style scoped>\n.material-statistics {\n  padding: 20px;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.statistics-overview {\n  margin-bottom: 20px;\n}\n\n.overview-card {\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.overview-content {\n  text-align: center;\n}\n\n.overview-title {\n  font-size: 16px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n\n.overview-number {\n  font-size: 28px;\n  font-weight: bold;\n  color: #409EFF;\n}\n\n.statistics-charts {\n  margin-bottom: 20px;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n}\n\n.chart-container {\n  height: 350px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.table-card {\n  margin-bottom: 20px;\n}\n\n.loading-container, .empty-data {\n  display: flex;\n  justify-content: center;\n  padding: 30px 0;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n</style> ","import script from \"./MaterialStatistics.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaterialStatistics.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MaterialStatistics.vue?vue&type=style&index=0&id=97a297c0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-97a297c0\"]])\n\nexport default __exports__"],"names":["router","useRouter","loading","ref","uncompletedTeachers","total","typeChartRef","collegeChartRef","typeChart","collegeChart","queryParams","reactive","current","size","materialTypeId","academicYear","semester","overview","totalMaterials","completedTeachers","materialTypes","academicYears","generateAcademicYears","years","currentYear","Date","getFullYear","i","year","push","value","fetchMaterialTypes","async","response","axios","data","code","error","console","ElMessage","fetchStatistics","overviewResponse","params","Object","assign","teachersResponse","records","typeResponse","nextTick","initTypeChart","collegeResponse","initCollegeChart","resetQuery","dispose","echarts","names","map","item","name","completed","uncompleted","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","series","stack","label","show","emphasis","focus","setOption","window","addEventListener","resize","formatter","orient","radius","avoidLabelOverlap","position","fontSize","fontWeight","labelLine","count","handleRemind","teacherId","taskId","success","message","handleRemindAll","length","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","taskTeacherPairs","teacher","reminders","catch","warning","handleViewTask","path","query","handleSizeChange","handleCurrentChange","onMounted","onUnmounted","removeEventListener","__exports__"],"sourceRoot":""}