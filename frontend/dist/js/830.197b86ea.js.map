{"version":3,"file":"js/830.197b86ea.js","mappings":"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","sources":["webpack://tcr-system-frontend/./src/views/admin/MaterialTasks.vue","webpack://tcr-system-frontend/./src/views/admin/MaterialTasks.vue?6fca"],"sourcesContent":["<template>\n  <div class=\"material-tasks\">\n    <h1 class=\"page-title\">教学材料任务管理</h1>\n    \n    <!-- 过滤条件 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n        <el-form-item label=\"任务标题\">\n          <el-input v-model=\"queryParams.title\" placeholder=\"请输入任务标题\" clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"材料类型\">\n          <el-select v-model=\"queryParams.materialTypeId\" placeholder=\"请选择材料类型\" clearable style=\"width: 200px;\">\n            <el-option v-for=\"item in materialTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学年\">\n          <el-select v-model=\"queryParams.academicYear\" placeholder=\"请选择学年\" clearable style=\"width: 200px;\">\n            <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学期\">\n          <el-select v-model=\"queryParams.semester\" placeholder=\"请选择学期\" clearable style=\"width: 200px;\">\n            <el-option :label=\"'第一学期'\" :value=\"1\"></el-option>\n            <el-option :label=\"'第二学期'\" :value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable style=\"width: 200px;\">\n            <el-option :label=\"'未开始'\" :value=\"0\"></el-option>\n            <el-option :label=\"'进行中'\" :value=\"1\"></el-option>\n            <el-option :label=\"'已结束'\" :value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <!-- 操作按钮 -->\n    <div class=\"operation-container\">\n      <el-button type=\"primary\" @click=\"handleAdd\">添加任务</el-button>\n      <el-button type=\"success\" @click=\"handlePublishBatch\" :disabled=\"selectedTasks.length === 0\">批量发布</el-button>\n      <el-button type=\"danger\" @click=\"handleDeleteBatch\" :disabled=\"selectedTasks.length === 0\">批量删除</el-button>\n    </div>\n    \n    <!-- 任务表格 -->\n    <el-card class=\"table-card\">\n      <div v-if=\"loading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <el-table\n        v-else\n        :data=\"taskList\"\n        style=\"width: 100%\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"title\" label=\"任务标题\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"materialTypeName\" label=\"材料类型\"></el-table-column>\n        <el-table-column prop=\"courseName\" label=\"课程\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"academicYear\" label=\"学年\"></el-table-column>\n        <el-table-column prop=\"semester\" label=\"学期\">\n          <template #default=\"scope\">\n            {{ scope.row.semester === 1 ? '第一学期' : '第二学期' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"deadline\" label=\"截止日期\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 1 ? 'success' : (scope.row.status === 0 ? 'warning' : 'danger')\">\n              {{ scope.row.status === 1 ? '进行中' : (scope.row.status === 0 ? '未开始' : '已结束') }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"180\">\n          <template #default=\"scope\">\n            <el-button-group>\n              <el-button v-if=\"scope.row.status === 0\" size=\"small\" type=\"primary\" @click=\"handlePublish(scope.row.id)\">发布</el-button>\n              <el-button size=\"small\" type=\"success\" @click=\"handleViewProgress(scope.row.id)\">完成情况</el-button>\n              <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n              <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页器 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-if=\"total > 0\"\n          :current-page=\"queryParams.current\"\n          :page-size=\"queryParams.size\"\n          :page-sizes=\"[10, 20, 30, 50]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 添加/编辑任务对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      v-model=\"dialogVisible\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form\n        :model=\"taskForm\"\n        :rules=\"taskRules\"\n        ref=\"taskFormRef\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"任务标题\" prop=\"title\">\n          <el-input v-model=\"taskForm.title\" placeholder=\"请输入任务标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务描述\" prop=\"description\">\n          <el-input\n            v-model=\"taskForm.description\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入任务描述\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"材料类型\" prop=\"materialTypeId\">\n          <el-select v-model=\"taskForm.materialTypeId\" placeholder=\"请选择材料类型\" style=\"width: 100%;\">\n            <el-option v-for=\"item in materialTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"所属课程\" prop=\"courseIds\">\n          <el-select\n            v-model=\"taskForm.courseIds\"\n            multiple\n            collapse-tags\n            placeholder=\"请选择课程，可多选\"\n            style=\"width: 100%;\"\n          >\n            <el-option v-for=\"item in courseList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学年\" prop=\"academicYear\">\n          <el-select v-model=\"taskForm.academicYear\" placeholder=\"请选择学年\" style=\"width: 100%;\">\n            <el-option v-for=\"year in academicYears\" :key=\"year\" :label=\"year\" :value=\"year\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学期\" prop=\"semester\">\n          <el-radio-group v-model=\"taskForm.semester\">\n            <el-radio :label=\"1\">第一学期</el-radio>\n            <el-radio :label=\"2\">第二学期</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"截止日期\" prop=\"deadline\">\n          <el-date-picker\n            v-model=\"taskForm.deadline\"\n            type=\"datetime\"\n            placeholder=\"选择截止日期\"\n            style=\"width: 100%;\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"taskForm.status\">\n            <el-radio :label=\"0\">未发布</el-radio>\n            <el-radio :label=\"1\">立即发布</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span>\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitLoading\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 任务完成情况对话框 -->\n    <el-dialog\n      title=\"任务完成情况\"\n      v-model=\"progressDialogVisible\"\n      width=\"700px\"\n    >\n      <div v-if=\"progressLoading\" class=\"loading-container\">\n        <el-skeleton :rows=\"5\" animated />\n      </div>\n      <template v-else>\n        <el-descriptions v-if=\"currentTask\" :column=\"2\" border>\n          <el-descriptions-item label=\"任务标题\">{{ currentTask.title }}</el-descriptions-item>\n          <el-descriptions-item label=\"材料类型\">{{ currentTask.materialTypeName }}</el-descriptions-item>\n          <el-descriptions-item label=\"截止日期\">{{ currentTask.deadline }}</el-descriptions-item>\n          <el-descriptions-item label=\"状态\">\n            <el-tag :type=\"currentTask.status === 1 ? 'success' : (currentTask.status === 0 ? 'warning' : 'danger')\">\n              {{ currentTask.status === 1 ? '进行中' : (currentTask.status === 0 ? '未开始' : '已结束') }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"完成情况\" :span=\"2\">\n            {{ progressData.completedCount || 0 }} / {{ progressData.totalCount || 0 }}\n            ({{ progressData.totalCount ? Math.round(progressData.completedCount / progressData.totalCount * 100) : 0 }}%)\n          </el-descriptions-item>\n        </el-descriptions>\n        \n        <el-tabs v-model=\"progressActiveTab\" class=\"progress-tabs\">\n          <el-tab-pane label=\"已完成\" name=\"completed\">\n            <el-table :data=\"progressData.completedTeachers || []\" style=\"width: 100%\" v-if=\"progressActiveTab === 'completed'\">\n              <el-table-column prop=\"teacherId\" label=\"教师ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"teacherName\" label=\"教师姓名\"></el-table-column>\n              <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\n              <el-table-column prop=\"materialName\" label=\"材料名称\"></el-table-column>\n              <el-table-column prop=\"submitTime\" label=\"提交时间\" width=\"160\"></el-table-column>\n              <el-table-column label=\"操作\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-button size=\"small\" type=\"primary\" @click=\"viewMaterial(scope.row.materialId)\">查看</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n          <el-tab-pane label=\"未完成\" name=\"uncompleted\">\n            <el-table :data=\"progressData.uncompletedTeachers || []\" style=\"width: 100%\" v-if=\"progressActiveTab === 'uncompleted'\">\n              <el-table-column prop=\"teacherId\" label=\"教师ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"teacherName\" label=\"教师姓名\"></el-table-column>\n              <el-table-column prop=\"courseName\" label=\"课程名称\"></el-table-column>\n              <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n              <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n              <el-table-column label=\"操作\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-button size=\"small\" type=\"warning\" @click=\"sendReminder(scope.row.teacherId)\">提醒</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n        </el-tabs>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\n\n// 任务列表相关数据\nconst loading = ref(false);\nconst taskList = ref([]);\nconst total = ref(0);\nconst selectedTasks = ref([]);\n\n// 查询参数\nconst queryParams = reactive({\n  current: 1,\n  size: 10,\n  title: '',\n  materialTypeId: '',\n  academicYear: '',\n  semester: '',\n  status: ''\n});\n\n// 添加/编辑对话框相关数据\nconst dialogVisible = ref(false);\nconst dialogTitle = ref('添加任务');\nconst taskFormRef = ref(null);\nconst submitLoading = ref(false);\nconst taskForm = reactive({\n  id: null,\n  title: '',\n  description: '',\n  materialTypeId: '',\n  courseIds: [],\n  academicYear: '',\n  semester: 1,\n  deadline: '',\n  status: 0\n});\n\n// 任务表单校验规则\nconst taskRules = {\n  title: [{ required: true, message: '请输入任务标题', trigger: 'blur' }],\n  materialTypeId: [{ required: true, message: '请选择材料类型', trigger: 'change' }],\n  courseIds: [{ required: true, message: '请选择课程', trigger: 'change' }],\n  academicYear: [{ required: true, message: '请选择学年', trigger: 'change' }],\n  semester: [{ required: true, message: '请选择学期', trigger: 'change' }],\n  deadline: [{ required: true, message: '请选择截止日期', trigger: 'change' }]\n};\n\n// 进度对话框相关数据\nconst progressDialogVisible = ref(false);\nconst progressLoading = ref(false);\nconst currentTask = ref(null);\nconst progressData = ref({});\nconst progressActiveTab = ref('completed');\n\n// 选项列表\nconst materialTypes = ref([]);\nconst courseList = ref([]);\nconst academicYears = ref([]);\n\n// 生成学年列表\nconst generateAcademicYears = () => {\n  const years = [];\n  const currentYear = new Date().getFullYear();\n  for (let i = 0; i < 5; i++) {\n    const year = currentYear - i;\n    years.push(`${year}-${year + 1}`);\n  }\n  academicYears.value = years;\n};\n\n// 获取材料类型列表\nconst fetchMaterialTypes = async () => {\n  try {\n    const response = await axios.get('/api/material-type/list');\n    if (response.data.code === 200 && response.data.data) {\n      materialTypes.value = response.data.data;\n    }\n  } catch (error) {\n    console.error('获取材料类型出错:', error);\n    ElMessage.error('获取材料类型失败');\n  }\n};\n\n// 获取课程列表\nconst fetchCourseList = async () => {\n  try {\n    const response = await axios.get('/api/admin/course/list');\n    if (response.data.code === 200 && response.data.data) {\n      courseList.value = response.data.data;\n    }\n  } catch (error) {\n    console.error('获取课程列表出错:', error);\n    ElMessage.error('获取课程列表失败');\n  }\n};\n\n// 获取任务列表\nconst fetchTaskList = async () => {\n  loading.value = true;\n  try {\n    const response = await axios.get('/api/admin/material-task/list', {\n      params: queryParams\n    });\n    if (response.data.code === 200) {\n      taskList.value = response.data.data.records || [];\n      total.value = response.data.data.total || 0;\n    } else {\n      ElMessage.error(response.data.message || '获取任务列表失败');\n    }\n  } catch (error) {\n    console.error('获取任务列表出错:', error);\n    ElMessage.error('获取任务列表失败');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 查询任务\nconst handleQuery = () => {\n  queryParams.current = 1;\n  fetchTaskList();\n};\n\n// 重置查询\nconst resetQuery = () => {\n  Object.assign(queryParams, {\n    current: 1,\n    size: 10,\n    title: '',\n    materialTypeId: '',\n    academicYear: '',\n    semester: '',\n    status: ''\n  });\n  fetchTaskList();\n};\n\n// 表格选择行变化\nconst handleSelectionChange = (selection) => {\n  selectedTasks.value = selection;\n};\n\n// 添加任务\nconst handleAdd = () => {\n  dialogTitle.value = '添加任务';\n  resetTaskForm();\n  dialogVisible.value = true;\n};\n\n// 编辑任务\nconst handleEdit = (row) => {\n  dialogTitle.value = '编辑任务';\n  resetTaskForm();\n  Object.assign(taskForm, { ...row });\n  if (typeof taskForm.courseIds === 'string') {\n    taskForm.courseIds = taskForm.courseIds.split(',').map(id => parseInt(id));\n  }\n  dialogVisible.value = true;\n};\n\n// 重置任务表单\nconst resetTaskForm = () => {\n  taskForm.id = null;\n  taskForm.title = '';\n  taskForm.description = '';\n  taskForm.materialTypeId = '';\n  taskForm.courseIds = [];\n  taskForm.academicYear = academicYears.value[0] || '';\n  taskForm.semester = 1;\n  taskForm.deadline = '';\n  taskForm.status = 0;\n  if (taskFormRef.value) {\n    taskFormRef.value.resetFields();\n  }\n};\n\n// 提交表单\nconst submitForm = async () => {\n  if (!taskFormRef.value) return;\n  \n  await taskFormRef.value.validate(async (valid) => {\n    if (!valid) return;\n    \n    submitLoading.value = true;\n    try {\n      const method = taskForm.id ? 'put' : 'post';\n      const url = taskForm.id ? `/api/admin/material-task/${taskForm.id}` : '/api/admin/material-task';\n      \n      const response = await axios[method](url, taskForm);\n      if (response.data.code === 200) {\n        ElMessage.success(`${taskForm.id ? '更新' : '添加'}任务成功`);\n        dialogVisible.value = false;\n        fetchTaskList();\n      } else {\n        ElMessage.error(response.data.message || `${taskForm.id ? '更新' : '添加'}任务失败`);\n      }\n    } catch (error) {\n      console.error(`${taskForm.id ? '更新' : '添加'}任务出错:`, error);\n      ElMessage.error(`${taskForm.id ? '更新' : '添加'}任务失败，请稍后重试`);\n    } finally {\n      submitLoading.value = false;\n    }\n  });\n};\n\n// 发布任务\nconst handlePublish = async (id) => {\n  try {\n    const response = await axios.put(`/api/admin/material-task/publish/${id}`);\n    if (response.data.code === 200) {\n      ElMessage.success('发布任务成功');\n      fetchTaskList();\n    } else {\n      ElMessage.error(response.data.message || '发布任务失败');\n    }\n  } catch (error) {\n    console.error('发布任务出错:', error);\n    ElMessage.error('发布任务失败，请稍后重试');\n  }\n};\n\n// 批量发布任务\nconst handlePublishBatch = async () => {\n  if (selectedTasks.value.length === 0) {\n    ElMessage.warning('请选择要发布的任务');\n    return;\n  }\n  \n  const taskIds = selectedTasks.value.map(task => task.id);\n  try {\n    const response = await axios.put('/api/admin/material-task/publish-batch', { taskIds });\n    if (response.data.code === 200) {\n      ElMessage.success('批量发布任务成功');\n      fetchTaskList();\n    } else {\n      ElMessage.error(response.data.message || '批量发布任务失败');\n    }\n  } catch (error) {\n    console.error('批量发布任务出错:', error);\n    ElMessage.error('批量发布任务失败，请稍后重试');\n  }\n};\n\n// 删除任务\nconst handleDelete = async (id) => {\n  ElMessageBox.confirm('确定要删除此任务吗？', '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      const response = await axios.delete(`/api/admin/material-task/${id}`);\n      if (response.data.code === 200) {\n        ElMessage.success('删除任务成功');\n        fetchTaskList();\n      } else {\n        ElMessage.error(response.data.message || '删除任务失败');\n      }\n    } catch (error) {\n      console.error('删除任务出错:', error);\n      ElMessage.error('删除任务失败，请稍后重试');\n    }\n  }).catch(() => {});\n};\n\n// 批量删除任务\nconst handleDeleteBatch = async () => {\n  if (selectedTasks.value.length === 0) {\n    ElMessage.warning('请选择要删除的任务');\n    return;\n  }\n  \n  ElMessageBox.confirm(`确定要删除选中的 ${selectedTasks.value.length} 个任务吗？`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    const taskIds = selectedTasks.value.map(task => task.id);\n    try {\n      const response = await axios.delete('/api/admin/material-task/batch', {\n        data: { taskIds }\n      });\n      if (response.data.code === 200) {\n        ElMessage.success('批量删除任务成功');\n        fetchTaskList();\n      } else {\n        ElMessage.error(response.data.message || '批量删除任务失败');\n      }\n    } catch (error) {\n      console.error('批量删除任务出错:', error);\n      ElMessage.error('批量删除任务失败，请稍后重试');\n    }\n  }).catch(() => {});\n};\n\n// 查看任务完成情况\nconst handleViewProgress = async (id) => {\n  progressLoading.value = true;\n  progressDialogVisible.value = true;\n  \n  try {\n    // 获取任务详情\n    const taskResponse = await axios.get(`/api/admin/material-task/${id}`);\n    if (taskResponse.data.code === 200 && taskResponse.data.data) {\n      currentTask.value = taskResponse.data.data;\n    }\n    \n    // 获取任务完成情况\n    const progressResponse = await axios.get(`/api/admin/material-task/progress/${id}`);\n    if (progressResponse.data.code === 200 && progressResponse.data.data) {\n      progressData.value = progressResponse.data.data;\n    }\n  } catch (error) {\n    console.error('获取任务完成情况出错:', error);\n    ElMessage.error('获取任务完成情况失败，请稍后重试');\n  } finally {\n    progressLoading.value = false;\n  }\n};\n\n// 查看材料\nconst viewMaterial = (materialId) => {\n  window.open(`/api/material/download/${materialId}`, '_blank');\n};\n\n// 发送提醒\nconst sendReminder = async (teacherId) => {\n  try {\n    const response = await axios.post('/api/admin/material-task/remind', {\n      taskId: currentTask.value.id,\n      teacherId\n    });\n    if (response.data.code === 200) {\n      ElMessage.success('已发送提醒通知');\n    } else {\n      ElMessage.error(response.data.message || '发送提醒失败');\n    }\n  } catch (error) {\n    console.error('发送提醒出错:', error);\n    ElMessage.error('发送提醒失败，请稍后重试');\n  }\n};\n\n// 分页器相关方法\nconst handleSizeChange = (size) => {\n  queryParams.size = size;\n  fetchTaskList();\n};\n\nconst handleCurrentChange = (current) => {\n  queryParams.current = current;\n  fetchTaskList();\n};\n\nonMounted(() => {\n  generateAcademicYears();\n  fetchMaterialTypes();\n  fetchCourseList();\n  fetchTaskList();\n});\n</script>\n\n<style scoped>\n.material-tasks {\n  padding: 20px;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.operation-container {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: flex-start;\n  gap: 10px;\n}\n\n.table-card {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n\n.loading-container {\n  padding: 20px 0;\n}\n\n.progress-tabs {\n  margin-top: 20px;\n}\n</style> ","import script from \"./MaterialTasks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaterialTasks.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MaterialTasks.vue?vue&type=style&index=0&id=7229dde8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7229dde8\"]])\n\nexport default __exports__"],"names":["loading","ref","taskList","total","selectedTasks","queryParams","reactive","current","size","title","materialTypeId","academicYear","semester","status","dialogVisible","dialogTitle","taskFormRef","submitLoading","taskForm","id","description","courseIds","deadline","taskRules","required","message","trigger","progressDialogVisible","progressLoading","currentTask","progressData","progressActiveTab","materialTypes","courseList","academicYears","generateAcademicYears","years","currentYear","Date","getFullYear","i","year","push","value","fetchMaterialTypes","async","response","axios","data","code","error","console","ElMessage","fetchCourseList","fetchTaskList","params","records","handleQuery","resetQuery","Object","assign","handleSelectionChange","selection","handleAdd","resetTaskForm","handleEdit","row","split","map","parseInt","resetFields","submitForm","validate","valid","method","url","success","handlePublish","handlePublishBatch","length","warning","taskIds","task","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","catch","handleDeleteBatch","handleViewProgress","taskResponse","progressResponse","viewMaterial","materialId","window","open","sendReminder","taskId","teacherId","handleSizeChange","handleCurrentChange","onMounted","__exports__"],"sourceRoot":""}