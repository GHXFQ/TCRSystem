{"version":3,"file":"js/325.0fe8f44f.js","mappings":"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","sources":["webpack://tcr-system-frontend/./src/views/admin/StudentManagement.vue","webpack://tcr-system-frontend/./src/views/admin/StudentManagement.vue?d676"],"sourcesContent":["<template>\r\n  <div class=\"student-management\">\r\n    <h1>学生管理</h1>\r\n    \r\n    <el-card class=\"filter-card\">\r\n      <div class=\"filter-container\">\r\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\r\n          <el-form-item label=\"学生姓名\">\r\n            <el-input v-model=\"queryParams.realName\" placeholder=\"请输入学生姓名\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"学号\">\r\n            <el-input v-model=\"queryParams.username\" placeholder=\"请输入学号\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"班级\">\r\n            <el-select v-model=\"queryParams.classId\" placeholder=\"请选择班级\" clearable>\r\n              <el-option\r\n                v-for=\"item in classList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"fetchStudents\">查询</el-button>\r\n            <el-button @click=\"resetQuery\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      \r\n      <div class=\"operation-container\">\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加学生</el-button>\r\n        <el-button type=\"success\" @click=\"handleAddClass\">添加班级</el-button>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <el-card class=\"table-card\">\r\n      <el-table :data=\"studentList\" style=\"width: 100%\" v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"学号\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"realName\" label=\"姓名\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"className\" label=\"班级\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"手机号\"></el-table-column>\r\n        <el-table-column label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.status\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              @change=\"handleStatusChange(scope.row)\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"250\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button type=\"success\" size=\"small\" @click=\"handleManageCourses(scope.row)\">管理选课</el-button>\r\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          :current-page=\"queryParams.pageNum\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          @current-change=\"handleCurrentChange\"\r\n          @size-change=\"handleSizeChange\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 添加/编辑学生对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"500px\">\r\n      <el-form :model=\"studentForm\" :rules=\"studentRules\" ref=\"studentFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"学号\" prop=\"username\">\r\n          <el-input v-model=\"studentForm.username\" placeholder=\"请输入学号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"realName\">\r\n          <el-input v-model=\"studentForm.realName\" placeholder=\"请输入姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogType === 'add'\">\r\n          <el-input v-model=\"studentForm.password\" placeholder=\"请输入密码\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"修改密码\" v-if=\"dialogType === 'edit'\">\r\n          <el-input v-model=\"studentForm.password\" placeholder=\"不修改请留空\" show-password></el-input>\r\n          <span class=\"tip-text\">不修改密码请留空</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"classId\">\r\n          <el-select v-model=\"studentForm.classId\" placeholder=\"请选择班级\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"item in classList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"studentForm.email\" placeholder=\"请输入邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"studentForm.phone\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"studentForm.status\">\r\n            <el-radio :label=\"1\">启用</el-radio>\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitStudentForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 添加班级对话框 -->\r\n    <el-dialog title=\"添加班级\" v-model=\"classDialogVisible\" width=\"500px\">\r\n      <el-form :model=\"classForm\" :rules=\"classRules\" ref=\"classFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"班级名称\" prop=\"name\">\r\n          <el-input v-model=\"classForm.name\" placeholder=\"请输入班级名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"所属专业\" prop=\"majorId\">\r\n          <el-select v-model=\"classForm.majorId\" placeholder=\"请选择所属专业\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"item in majorList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"入学年份\" prop=\"year\">\r\n          <el-date-picker\r\n            v-model=\"classForm.year\"\r\n            type=\"year\"\r\n            placeholder=\"选择年份\"\r\n            format=\"YYYY\"\r\n            value-format=\"YYYY\"\r\n            style=\"width: 100%\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"description\">\r\n          <el-input\r\n            v-model=\"classForm.description\"\r\n            type=\"textarea\"\r\n            placeholder=\"请输入班级描述\"\r\n            rows=\"3\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"classDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitClassForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 管理选课对话框 -->\r\n    <el-dialog :title=\"`管理选课 - ${currentStudent.realName}`\" v-model=\"courseDialogVisible\" width=\"700px\">\r\n      <div class=\"course-management\">\r\n        <el-tabs v-model=\"courseActiveTab\">\r\n          <el-tab-pane label=\"已选课程\" name=\"selected\">\r\n            <el-table :data=\"selectedCourses\" style=\"width: 100%\" v-loading=\"courseLoading\">\r\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\r\n              <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n              <el-table-column prop=\"classTime\" label=\"上课时间\"></el-table-column>\r\n              <el-table-column prop=\"classLocation\" label=\"上课地点\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button type=\"danger\" size=\"small\" @click=\"handleDropCourse(scope.row)\">退选</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"可选课程\" name=\"available\">\r\n            <el-table :data=\"availableCourses\" style=\"width: 100%\" v-loading=\"courseLoading\">\r\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\r\n              <el-table-column prop=\"teacherName\" label=\"授课教师\"></el-table-column>\r\n              <el-table-column prop=\"classTime\" label=\"上课时间\"></el-table-column>\r\n              <el-table-column prop=\"classLocation\" label=\"上课地点\"></el-table-column>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button type=\"success\" size=\"small\" @click=\"handleSelectCourse(scope.row)\">选课</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  pageNum: 1,\r\n  pageSize: 10,\r\n  realName: '',\r\n  username: '',\r\n  classId: undefined\r\n})\r\n\r\n// 学生列表\r\nconst studentList = ref([])\r\n// 班级列表\r\nconst classList = ref([])\r\n// 专业列表\r\nconst majorList = ref([])\r\n// 总数据条数\r\nconst total = ref(0)\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 学生对话框相关\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst dialogType = ref('add') // add or edit\r\nconst studentFormRef = ref(null)\r\nconst studentForm = reactive({\r\n  id: undefined,\r\n  username: '',\r\n  realName: '',\r\n  password: '',\r\n  classId: undefined,\r\n  email: '',\r\n  phone: '',\r\n  status: 1,\r\n  role: 0 // 学生角色固定为0\r\n})\r\n\r\n// 学生表单验证规则\r\nconst studentRules = {\r\n  username: [\r\n    { required: true, message: '请输入学号', trigger: 'blur' },\r\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  realName: [\r\n    { required: true, message: '请输入姓名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: dialogType === 'add', message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  classId: [\r\n    { required: true, message: '请选择班级', trigger: 'change' }\r\n  ],\r\n  email: [\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 班级对话框相关\r\nconst classDialogVisible = ref(false)\r\nconst classFormRef = ref(null)\r\nconst classForm = reactive({\r\n  name: '',\r\n  majorId: undefined,\r\n  year: '',\r\n  description: ''\r\n})\r\n\r\n// 班级表单验证规则\r\nconst classRules = {\r\n  name: [\r\n    { required: true, message: '请输入班级名称', trigger: 'blur' }\r\n  ],\r\n  majorId: [\r\n    { required: true, message: '请选择所属专业', trigger: 'change' }\r\n  ],\r\n  year: [\r\n    { required: true, message: '请选择入学年份', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 选课对话框相关\r\nconst courseDialogVisible = ref(false)\r\nconst courseActiveTab = ref('selected')\r\nconst courseLoading = ref(false)\r\nconst currentStudent = ref({})\r\nconst selectedCourses = ref([])\r\nconst availableCourses = ref([])\r\n\r\n// 获取学生列表\r\nconst fetchStudents = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await axios.get('/api/admin/student/list', {\r\n      params: queryParams\r\n    })\r\n    if (response.data.code === 200) {\r\n      studentList.value = response.data.data.records\r\n      total.value = response.data.data.total\r\n      \r\n      // 确保班级名称正确显示\r\n      studentList.value.forEach(student => {\r\n        if (!student.className && student.classId) {\r\n          const classInfo = classList.value.find(c => c.id === student.classId)\r\n          if (classInfo) {\r\n            student.className = classInfo.name\r\n          }\r\n        }\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取学生列表失败:', error)\r\n    ElMessage.error('获取学生列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取班级列表\r\nconst fetchClasses = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/class/list')\r\n    if (response.data.code === 200) {\r\n      classList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取班级列表失败:', error)\r\n    ElMessage.error('获取班级列表失败')\r\n  }\r\n}\r\n\r\n// 获取专业列表\r\nconst fetchMajors = async () => {\r\n  try {\r\n    const response = await axios.get('/api/admin/major/list')\r\n    if (response.data.code === 200) {\r\n      majorList.value = response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取专业列表失败:', error)\r\n    ElMessage.error('获取专业列表失败')\r\n  }\r\n}\r\n\r\n// 重置查询条件\r\nconst resetQuery = () => {\r\n  queryParams.realName = ''\r\n  queryParams.username = ''\r\n  queryParams.classId = undefined\r\n  fetchStudents()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  queryParams.pageNum = val\r\n  fetchStudents()\r\n}\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (val) => {\r\n  queryParams.pageSize = val\r\n  fetchStudents()\r\n}\r\n\r\n// 处理添加学生\r\nconst handleAdd = () => {\r\n  dialogType.value = 'add'\r\n  dialogTitle.value = '添加学生'\r\n  studentForm.id = undefined\r\n  studentForm.username = ''\r\n  studentForm.realName = ''\r\n  studentForm.password = ''\r\n  studentForm.classId = undefined\r\n  studentForm.email = ''\r\n  studentForm.phone = ''\r\n  studentForm.status = 1\r\n  studentForm.role = 0\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 处理编辑学生\r\nconst handleEdit = (row) => {\r\n  dialogType.value = 'edit'\r\n  dialogTitle.value = '编辑学生'\r\n  studentForm.id = row.id\r\n  studentForm.username = row.username\r\n  studentForm.realName = row.realName\r\n  studentForm.password = '' // 清空密码字段\r\n  studentForm.classId = row.classId\r\n  studentForm.email = row.email\r\n  studentForm.phone = row.phone\r\n  studentForm.status = row.status\r\n  studentForm.role = row.role\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 处理删除学生\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm('确定要删除该学生吗？', '提示', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    type: 'warning'\r\n  }).then(async () => {\r\n    try {\r\n      const response = await axios.delete(`/api/admin/student/${row.id}`)\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('删除成功')\r\n        fetchStudents()\r\n      } else {\r\n        ElMessage.error(response.data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除学生失败:', error)\r\n      ElMessage.error('删除学生失败')\r\n    }\r\n  }).catch(() => {})\r\n}\r\n\r\n// 处理状态变化\r\nconst handleStatusChange = async (row) => {\r\n  try {\r\n    const response = await axios.put('/api/admin/student/status', {\r\n      id: row.id,\r\n      status: row.status\r\n    })\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(`${row.status === 1 ? '启用' : '禁用'}成功`)\r\n    } else {\r\n      ElMessage.error(response.data.message || '操作失败')\r\n      // 恢复原状态\r\n      row.status = row.status === 1 ? 0 : 1\r\n    }\r\n  } catch (error) {\r\n    console.error('修改状态失败:', error)\r\n    ElMessage.error('修改状态失败')\r\n    // 恢复原状态\r\n    row.status = row.status === 1 ? 0 : 1\r\n  }\r\n}\r\n\r\n// 提交学生表单\r\nconst submitStudentForm = () => {\r\n  studentFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        let response\r\n        if (dialogType.value === 'add') {\r\n          response = await axios.post('/api/admin/student', studentForm)\r\n        } else {\r\n          response = await axios.put('/api/admin/student', studentForm)\r\n        }\r\n        \r\n        if (response.data.code === 200) {\r\n          ElMessage.success(dialogType.value === 'add' ? '添加成功' : '修改成功')\r\n          dialogVisible.value = false\r\n          fetchStudents()\r\n        } else {\r\n          ElMessage.error(response.data.message || (dialogType.value === 'add' ? '添加失败' : '修改失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(dialogType.value === 'add' ? '添加学生失败:' : '修改学生失败:', error)\r\n        ElMessage.error(dialogType.value === 'add' ? '添加学生失败' : '修改学生失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理添加班级\r\nconst handleAddClass = () => {\r\n  classForm.name = ''\r\n  classForm.majorId = undefined\r\n  classForm.year = ''\r\n  classForm.description = ''\r\n  classDialogVisible.value = true\r\n}\r\n\r\n// 提交班级表单\r\nconst submitClassForm = () => {\r\n  classFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const response = await axios.post('/api/admin/class', classForm)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('添加班级成功')\r\n          classDialogVisible.value = false\r\n          fetchClasses()\r\n        } else {\r\n          ElMessage.error(response.data.message || '添加班级失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('添加班级失败:', error)\r\n        ElMessage.error('添加班级失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 处理管理选课\r\nconst handleManageCourses = async (row) => {\r\n  currentStudent.value = row\r\n  courseDialogVisible.value = true\r\n  courseActiveTab.value = 'selected'\r\n  await fetchStudentCourses(row.id)\r\n}\r\n\r\n// 获取学生课程\r\nconst fetchStudentCourses = async (studentId) => {\r\n  courseLoading.value = true\r\n  try {\r\n    // 获取已选课程\r\n    const selectedResponse = await axios.get(`/api/student/course/${studentId}`)\r\n    if (selectedResponse.data.code === 200) {\r\n      selectedCourses.value = selectedResponse.data.data || []\r\n    }\r\n    \r\n    // 获取可选课程\r\n    const availableResponse = await axios.get('/api/admin/course/available', {\r\n      params: { studentId }\r\n    })\r\n    if (availableResponse.data.code === 200) {\r\n      availableCourses.value = availableResponse.data.data || []\r\n    }\r\n  } catch (error) {\r\n    console.error('获取学生课程失败:', error)\r\n    ElMessage.error('获取学生课程失败')\r\n  } finally {\r\n    courseLoading.value = false\r\n  }\r\n}\r\n\r\n// 处理选课\r\nconst handleSelectCourse = async (course) => {\r\n  try {\r\n    const response = await axios.post('/api/admin/student/course/select', {\r\n      studentId: currentStudent.value.id,\r\n      courseId: course.id\r\n    })\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('选课成功')\r\n      await fetchStudentCourses(currentStudent.value.id)\r\n    } else {\r\n      ElMessage.error(response.data.message || '选课失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('选课失败:', error)\r\n    ElMessage.error('选课失败')\r\n  }\r\n}\r\n\r\n// 处理退课\r\nconst handleDropCourse = async (course) => {\r\n  try {\r\n    const response = await axios.post('/api/admin/student/course/drop', {\r\n      studentId: currentStudent.value.id,\r\n      courseId: course.id\r\n    })\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('退课成功')\r\n      await fetchStudentCourses(currentStudent.value.id)\r\n    } else {\r\n      ElMessage.error(response.data.message || '退课失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('退课失败:', error)\r\n    ElMessage.error('退课失败')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchStudents()\r\n  fetchClasses()\r\n  fetchMajors()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.student-management {\r\n  h1 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .operation-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .table-card {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  .course-management {\r\n    .el-tabs {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n  \r\n  .tip-text {\r\n    color: #909399;\r\n    font-size: 12px;\r\n    margin-top: 5px;\r\n    display: block;\r\n  }\r\n}\r\n</style> ","import script from \"./StudentManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StudentManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./StudentManagement.vue?vue&type=style&index=0&id=089be4fc&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-089be4fc\"]])\n\nexport default __exports__"],"names":["queryParams","reactive","pageNum","pageSize","realName","username","classId","undefined","studentList","ref","classList","majorList","total","loading","dialogVisible","dialogTitle","dialogType","studentFormRef","studentForm","id","password","email","phone","status","role","studentRules","required","message","trigger","min","max","type","classDialogVisible","classFormRef","classForm","name","majorId","year","description","classRules","courseDialogVisible","courseActiveTab","courseLoading","currentStudent","selectedCourses","availableCourses","fetchStudents","async","value","response","axios","params","data","code","records","forEach","student","className","classInfo","find","c","error","console","ElMessage","fetchClasses","fetchMajors","resetQuery","handleCurrentChange","val","handleSizeChange","handleAdd","handleEdit","row","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","success","catch","handleStatusChange","submitStudentForm","validate","valid","handleAddClass","submitClassForm","handleManageCourses","fetchStudentCourses","selectedResponse","studentId","availableResponse","handleSelectCourse","courseId","course","handleDropCourse","onMounted","__exports__"],"sourceRoot":""}